require 'getoptlong'

cpus="1" # number of cpus in vm
sde=""   # tofino sde tgz file
vmname="cebinaevm"
shareddir="/cebinae"

opts = GetoptLong.new(
  [ '--cpus', GetoptLong::OPTIONAL_ARGUMENT], 
  ['--sde', GetoptLong::OPTIONAL_ARGUMENT ],
)
opts.ordering=(GetoptLong::REQUIRE_ORDER)
opts.each do |opt, arg|
  case opt
    when '--cpus'
      cpus=arg
    when '--sde'
      sde=arg
  end
end
# options in a vagrant file: https://stackoverflow.com/a/54962782

Vagrant.configure(2) do |config|
  config.vm.box = "bento/ubuntu-18.04" # bionic 64 doesn't work with serial disconnected...
  config.vm.hostname = vmname
  config.ssh.insert_key = false
  config.vm.synced_folder "../", shareddir
  config.vm.provider "virtualbox" do |vb|
    # disable the log for portability.
    vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
    vb.cpus ="#{cpus}"
    vb.memory = "4096" 
    # config.disksize.size = "40GB"
  end

  # setup lucid interpreter and compiler
  # --- copy lucid compiler binaries --- 
  config.vm.provision "file", source: "lucid_binaries/dpt", destination: "$HOME/dpt"
  config.vm.provision "file", source: "lucid_binaries/dptc", destination: "$HOME/dptc"
  config.vm.provision "file", source: "lucid_binaries/dptf", destination: "$HOME/dptf"
  # --- setup dependencies to rebuild lucid from source ---
  # config.vm.provision "file", source: "setup_lucid.sh", destination: "$HOME/setup_lucid.sh"
  # config.vm.provision "shell", privileged: false, inline: "$HOME/setup_lucid.sh"
  # optionally setup tofino compiler
  if (sde != "")
    # copy compiler setup file
    config.vm.provision "file", source: sde, destination: "$HOME/#{File.basename(sde)}"
    config.vm.provision "file", source: "setup_tofino_sde.sh", destination: "$HOME/setup_tofino_sde.sh"
    config.vm.provision "shell", privileged: false, inline: "$HOME/setup_tofino_sde.sh $HOME/#{File.basename(sde)}"
  end
end

