
#include <iostream>

#include "p4_prefix.h"

#include <string.h>

extern "C" {
#include <pd/pd.h>
}

#include <list>
#include <map>
#include <pthread.h>

using namespace  ::p4_pd_rpc;
using namespace  ::res_pd_rpc;


class mainHandler : virtual public mainIf {
private:
  struct PipeMgrSimpleCb {
    // Should I simply use to C++11 mutex / condvars
    pthread_mutex_t cb_mutex;
    pthread_cond_t cb_condvar;
    int cb_status;

    PipeMgrSimpleCb()
      : cb_status(0) {
      pthread_mutex_init(&cb_mutex, NULL);
      pthread_cond_init(&cb_condvar, NULL);
    }

    ~PipeMgrSimpleCb() {
      pthread_mutex_destroy(&cb_mutex);
      pthread_cond_destroy(&cb_condvar);
    }

    int wait() {
      pthread_mutex_lock(&cb_mutex);
      while(cb_status == 0) {
        pthread_cond_wait(&cb_condvar, &cb_mutex);
      }
      pthread_mutex_unlock(&cb_mutex);
      return 0;
    }

    void notify() {
      pthread_mutex_lock(&cb_mutex);
      assert(cb_status == 0);
      cb_status = 1;
      pthread_cond_signal(&cb_condvar);
      pthread_mutex_unlock(&cb_mutex);
    }

    static void cb_fn(int device_id, void *cookie) {
      (void) device_id;
      PipeMgrSimpleCb *inst = (PipeMgrSimpleCb *) cookie;
      inst->notify();
    }

    // C++11
    // PipeMgrSimpleCb(const PipeMgrSimpleCb &other) = delete;
    // PipeMgrSimpleCb &operator=(const PipeMgrSimpleCb &other) = delete;

    // PipeMgrSimpleCb(PipeMgrSimpleCb &&other) = delete;
    // PipeMgrSimpleCb &operator=(PipeMgrSimpleCb &&other) = delete;

  private:
    PipeMgrSimpleCb(const PipeMgrSimpleCb &other);
    PipeMgrSimpleCb &operator=(const PipeMgrSimpleCb &other);
  };

public:
    mainHandler() {
        // Your initialization goes here


    }


    // Idle time config

    typedef struct _update_hit_state_cookie_s {
      mainHandler *handler;
      uint64_t seq_id;
    } _update_hit_state_cookie_t;

    typedef struct _update_idle_tmo_expired_cookie_s {
      mainHandler *handler;
      int32_t cookie;
    } _update_idle_tmo_expired_cookie_t;




    EntryHandle_t IngressParser__PORT_METADATA_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_IngressParser__PORT_METADATA_match_spec_t &match_spec) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_IngressParser__PORT_METADATA_match_spec_t pd_match_spec;
        pd_match_spec.ig_intr_md_ingress_port = match_spec.ig_intr_md_ingress_port;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_IngressParser__PORT_METADATA_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Ingress_t_igr_tiForward_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiForward_match_spec_t &match_spec) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiForward_match_spec_t pd_match_spec;
        pd_match_spec.md_ingress_port = match_spec.md_ingress_port;
  memcpy(pd_match_spec.hdr_ethernet_dst_addr, match_spec.hdr_ethernet_dst_addr.c_str(), 6);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiForward_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Ingress_t_igr_tiRotateF_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiRotateF_match_spec_t &match_spec) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiRotateF_match_spec_t pd_match_spec;
        pd_match_spec.hdr_pktgen_packet_id = match_spec.hdr_pktgen_packet_id;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiRotateF_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Ingress_t_igr_tiCalcF_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalcF_match_spec_t &match_spec) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalcF_match_spec_t pd_match_spec;
        pd_match_spec.hdr_ip_src_addr = match_spec.hdr_ip_src_addr;
        pd_match_spec.hdr_ip_dst_addr = match_spec.hdr_ip_dst_addr;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalcF_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Ingress_t_igr_tiCalcSaturated_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalcSaturated_match_spec_t &match_spec) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalcSaturated_match_spec_t pd_match_spec;
        pd_match_spec.ig_tm_md_ucast_egress_port = match_spec.ig_tm_md_ucast_egress_port;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Ingress_t_igr_tiReadLastSize_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiReadLastSize_match_spec_t &match_spec) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiReadLastSize_match_spec_t pd_match_spec;
        pd_match_spec.f = match_spec.f;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiReadLastSize_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Ingress_t_igr_tiGetRates_tail_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiGetRates_tail_match_spec_t &match_spec) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiGetRates_tail_match_spec_t pd_match_spec;
        pd_match_spec.f = match_spec.f;
        pd_match_spec.tailq = match_spec.tailq;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiGetRates_tail_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Ingress_t_igr_tiGetRates_head_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiGetRates_head_match_spec_t &match_spec) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiGetRates_head_match_spec_t pd_match_spec;
        pd_match_spec.f = match_spec.f;
        pd_match_spec.headq = match_spec.headq;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiGetRates_head_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Ingress_t_igr_tiCalc_log_rate_tail_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_rate_tail_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.rate_tail = match_spec.rate_tail;
        pd_match_spec.rate_tail_mask = match_spec.rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Ingress_t_igr_tiCalc_log_relative_round_m_dt_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_match_spec_t pd_match_spec;
        pd_match_spec.relative_round_m_dt = match_spec.relative_round_m_dt;
        pd_match_spec.relative_round_m_dt_mask = match_spec.relative_round_m_dt_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Ingress_t_igr_tiCalc_log_relative_round_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_relative_round_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_match_spec_t pd_match_spec;
        pd_match_spec.relative_round = match_spec.relative_round;
        pd_match_spec.relative_round_mask = match_spec.relative_round_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Ingress_t_igr_tiCalc_log_rate_head_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_rate_head_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_match_spec_t pd_match_spec;
        pd_match_spec.rate_head = match_spec.rate_head;
        pd_match_spec.rate_head_mask = match_spec.rate_head_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Egress_t_egr_dpt_7_merged_tbl_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_7_merged_tbl_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Egress_t_egr_dpt_6_merged_tbl_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_6_merged_tbl_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Egress_t_egr_dpt_8_merged_tbl_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_8_merged_tbl_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Egress_t_egr_dpt_9_merged_tbl_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_9_merged_tbl_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Egress_t_egr_dpt_10_merged_tbl_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_10_merged_tbl_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1548 = match_spec.if_precomp1548;
        pd_match_spec.if_precomp1548_mask = match_spec.if_precomp1548_mask;
        pd_match_spec.if_precomp1547 = match_spec.if_precomp1547;
        pd_match_spec.if_precomp1547_mask = match_spec.if_precomp1547_mask;
        pd_match_spec.stored_dst2 = match_spec.stored_dst2;
        pd_match_spec.stored_dst2_mask = match_spec.stored_dst2_mask;
        pd_match_spec.stored_src2 = match_spec.stored_src2;
        pd_match_spec.stored_src2_mask = match_spec.stored_src2_mask;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }
    EntryHandle_t Ingress_t_igr_tiSetQueue_match_spec_to_entry_hdl(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiSetQueue_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiSetQueue_match_spec_t pd_match_spec;
        pd_match_spec.past_head = match_spec.past_head;
        pd_match_spec.past_head_mask = match_spec.past_head_mask;
        pd_match_spec.past_tail = match_spec.past_tail;
        pd_match_spec.past_tail_mask = match_spec.past_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_match_spec_to_entry_hdl(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }


    // Dynamic Key Mask Exm Table API.



    // Table entry add functions

    EntryHandle_t IngressParser__PORT_METADATA_table_add_with_set_port_metadata(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_IngressParser__PORT_METADATA_match_spec_t &match_spec, const main_set_port_metadata_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_IngressParser__PORT_METADATA_match_spec_t pd_match_spec;
        pd_match_spec.ig_intr_md_ingress_port = match_spec.ig_intr_md_ingress_port;

    p4_pd_main_set_port_metadata_action_spec_t pd_action_spec;
        memcpy(pd_action_spec.action_ig_intr_md, action_spec.action_ig_intr_md.c_str(), 8);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_IngressParser__PORT_METADATA_table_add_with_set_port_metadata(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiForward_table_add_with_Ingress_t_igr_aiSetEgress(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiForward_match_spec_t &match_spec, const main_Ingress_t_igr_aiSetEgress_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiForward_match_spec_t pd_match_spec;
        pd_match_spec.md_ingress_port = match_spec.md_ingress_port;
        memcpy(pd_match_spec.hdr_ethernet_dst_addr, match_spec.hdr_ethernet_dst_addr.c_str(), 6);

    p4_pd_main_Ingress_t_igr_aiSetEgress_action_spec_t pd_action_spec;
        pd_action_spec.action_egr_port = action_spec.action_egr_port;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiForward_table_add_with_Ingress_t_igr_aiSetEgress(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiForward_table_add_with_Ingress_t_igr_aiNoop(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiForward_match_spec_t &match_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiForward_match_spec_t pd_match_spec;
        pd_match_spec.md_ingress_port = match_spec.md_ingress_port;
        memcpy(pd_match_spec.hdr_ethernet_dst_addr, match_spec.hdr_ethernet_dst_addr.c_str(), 6);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiForward_table_add_with_Ingress_t_igr_aiNoop(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiRotateF_table_add_with_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiRotateF_match_spec_t &match_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiRotateF_match_spec_t pd_match_spec;
        pd_match_spec.hdr_pktgen_packet_id = match_spec.hdr_pktgen_packet_id;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiRotateF_table_add_with_NoAction(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiRotateF_table_add_with_Ingress_t_igr_aiRotateF(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiRotateF_match_spec_t &match_spec, const main_Ingress_t_igr_aiRotateF_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiRotateF_match_spec_t pd_match_spec;
        pd_match_spec.hdr_pktgen_packet_id = match_spec.hdr_pktgen_packet_id;

    p4_pd_main_Ingress_t_igr_aiRotateF_action_spec_t pd_action_spec;
        pd_action_spec.action_fval = action_spec.action_fval;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiRotateF_table_add_with_Ingress_t_igr_aiRotateF(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiCalcF_table_add_with_Ingress_t_igr_aiSetFTop(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalcF_match_spec_t &match_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalcF_match_spec_t pd_match_spec;
        pd_match_spec.hdr_ip_src_addr = match_spec.hdr_ip_src_addr;
        pd_match_spec.hdr_ip_dst_addr = match_spec.hdr_ip_dst_addr;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalcF_table_add_with_Ingress_t_igr_aiSetFTop(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiCalcF_table_add_with_Ingress_t_igr_aiSetFBottom(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalcF_match_spec_t &match_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalcF_match_spec_t pd_match_spec;
        pd_match_spec.hdr_ip_src_addr = match_spec.hdr_ip_src_addr;
        pd_match_spec.hdr_ip_dst_addr = match_spec.hdr_ip_dst_addr;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalcF_table_add_with_Ingress_t_igr_aiSetFBottom(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiCalcSaturated_table_add_with_Ingress_t_igr_aiSaturated(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalcSaturated_match_spec_t &match_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalcSaturated_match_spec_t pd_match_spec;
        pd_match_spec.ig_tm_md_ucast_egress_port = match_spec.ig_tm_md_ucast_egress_port;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_table_add_with_Ingress_t_igr_aiSaturated(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiCalcSaturated_table_add_with_Ingress_t_igr_aiNotSaturated(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalcSaturated_match_spec_t &match_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalcSaturated_match_spec_t pd_match_spec;
        pd_match_spec.ig_tm_md_ucast_egress_port = match_spec.ig_tm_md_ucast_egress_port;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_table_add_with_Ingress_t_igr_aiNotSaturated(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiReadLastSize_table_add_with_Ingress_t_igr_aiReadLastSize(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiReadLastSize_match_spec_t &match_spec, const main_Ingress_t_igr_aiReadLastSize_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiReadLastSize_match_spec_t pd_match_spec;
        pd_match_spec.f = match_spec.f;

    p4_pd_main_Ingress_t_igr_aiReadLastSize_action_spec_t pd_action_spec;
        pd_action_spec.action_lastRate_x_dT = action_spec.action_lastRate_x_dT;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiReadLastSize_table_add_with_Ingress_t_igr_aiReadLastSize(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiGetRates_tail_table_add_with_Ingress_t_igr_aiGetRates_tail(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiGetRates_tail_match_spec_t &match_spec, const main_Ingress_t_igr_aiGetRates_tail_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiGetRates_tail_match_spec_t pd_match_spec;
        pd_match_spec.f = match_spec.f;
        pd_match_spec.tailq = match_spec.tailq;

    p4_pd_main_Ingress_t_igr_aiGetRates_tail_action_spec_t pd_action_spec;
        pd_action_spec.action_r_tail = action_spec.action_r_tail;
        pd_action_spec.action_r_tail_x_dT = action_spec.action_r_tail_x_dT;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiGetRates_tail_table_add_with_Ingress_t_igr_aiGetRates_tail(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiGetRates_head_table_add_with_Ingress_t_igr_aiGetRates_head(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiGetRates_head_match_spec_t &match_spec, const main_Ingress_t_igr_aiGetRates_head_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiGetRates_head_match_spec_t pd_match_spec;
        pd_match_spec.f = match_spec.f;
        pd_match_spec.headq = match_spec.headq;

    p4_pd_main_Ingress_t_igr_aiGetRates_head_action_spec_t pd_action_spec;
        pd_action_spec.action_r_head = action_spec.action_r_head;
        pd_action_spec.action_r_head_x_dT = action_spec.action_r_head_x_dT;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiGetRates_head_table_add_with_Ingress_t_igr_aiGetRates_head(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiCalc_log_rate_tail_table_add_with_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.rate_tail = match_spec.rate_tail;
        pd_match_spec.rate_tail_mask = match_spec.rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_table_add_with_NoAction(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiCalc_log_rate_tail_table_add_with_Ingress_t_igr_aiCalc_log_rate_tail(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_rate_tail_match_spec_t &match_spec, const int32_t priority, const main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.rate_tail = match_spec.rate_tail;
        pd_match_spec.rate_tail_mask = match_spec.rate_tail_mask;

    p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t pd_action_spec;
        pd_action_spec.action_log_v = action_spec.action_log_v;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_table_add_with_Ingress_t_igr_aiCalc_log_rate_tail(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_add_with_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_match_spec_t pd_match_spec;
        pd_match_spec.relative_round_m_dt = match_spec.relative_round_m_dt;
        pd_match_spec.relative_round_m_dt_mask = match_spec.relative_round_m_dt_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_add_with_NoAction(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_add_with_Ingress_t_igr_aiCalc_log_relative_round_m_dt(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_match_spec_t &match_spec, const int32_t priority, const main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_match_spec_t pd_match_spec;
        pd_match_spec.relative_round_m_dt = match_spec.relative_round_m_dt;
        pd_match_spec.relative_round_m_dt_mask = match_spec.relative_round_m_dt_mask;

    p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t pd_action_spec;
        pd_action_spec.action_log_v = action_spec.action_log_v;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_add_with_Ingress_t_igr_aiCalc_log_relative_round_m_dt(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiCalc_log_relative_round_table_add_with_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_relative_round_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_match_spec_t pd_match_spec;
        pd_match_spec.relative_round = match_spec.relative_round;
        pd_match_spec.relative_round_mask = match_spec.relative_round_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_table_add_with_NoAction(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiCalc_log_relative_round_table_add_with_Ingress_t_igr_aiCalc_log_relative_round(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_relative_round_match_spec_t &match_spec, const int32_t priority, const main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_match_spec_t pd_match_spec;
        pd_match_spec.relative_round = match_spec.relative_round;
        pd_match_spec.relative_round_mask = match_spec.relative_round_mask;

    p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t pd_action_spec;
        pd_action_spec.action_log_v = action_spec.action_log_v;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_table_add_with_Ingress_t_igr_aiCalc_log_relative_round(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiCalc_log_rate_head_table_add_with_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_rate_head_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_match_spec_t pd_match_spec;
        pd_match_spec.rate_head = match_spec.rate_head;
        pd_match_spec.rate_head_mask = match_spec.rate_head_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_table_add_with_NoAction(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiCalc_log_rate_head_table_add_with_Ingress_t_igr_aiCalc_log_rate_head(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_rate_head_match_spec_t &match_spec, const int32_t priority, const main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_match_spec_t pd_match_spec;
        pd_match_spec.rate_head = match_spec.rate_head;
        pd_match_spec.rate_head_mask = match_spec.rate_head_mask;

    p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t pd_action_spec;
        pd_action_spec.action_log_v = action_spec.action_log_v;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_table_add_with_Ingress_t_igr_aiCalc_log_rate_head(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_NoAction(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_add_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Egress_t_egr_dpt_7_merged_tbl_table_add_with_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_7_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_table_add_with_NoAction(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Egress_t_egr_dpt_7_merged_tbl_table_add_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_7_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_table_add_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Egress_t_egr_dpt_7_merged_tbl_table_add_with_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_7_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_table_add_with_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Egress_t_egr_dpt_6_merged_tbl_table_add_with_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_6_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_table_add_with_NoAction(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Egress_t_egr_dpt_6_merged_tbl_table_add_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_6_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_table_add_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Egress_t_egr_dpt_6_merged_tbl_table_add_with_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_6_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_table_add_with_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Egress_t_egr_dpt_8_merged_tbl_table_add_with_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_8_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_table_add_with_NoAction(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Egress_t_egr_dpt_8_merged_tbl_table_add_with_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_8_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_table_add_with_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Egress_t_egr_dpt_8_merged_tbl_table_add_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_8_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_table_add_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_NoAction(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_0(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_0(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_1(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_2(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_3(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_3(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_4(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_4(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_5(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_5(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_6(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_6(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_7(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_7(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_8(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_8(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_9(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_9(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_10(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_10(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_11(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_11(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_12(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_12(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_13(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_13(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_14(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_14(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_15(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_15(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_16(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_16(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_17(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_17(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_18(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_18(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_19(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_19(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_20(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_20(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_21(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_21(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_22(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_22(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_23(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_23(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_24(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_24(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_25(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_25(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_26(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_26(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_27(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_27(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_28(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_28(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_29(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_29(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_30(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_30(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_31(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_add_with_Ingress_t_igr_aiExp_aggregate_size_31(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Egress_t_egr_dpt_9_merged_tbl_table_add_with_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_9_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_table_add_with_NoAction(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Egress_t_egr_dpt_9_merged_tbl_table_add_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_9_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_table_add_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Egress_t_egr_dpt_9_merged_tbl_table_add_with_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_9_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_table_add_with_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Egress_t_egr_dpt_10_merged_tbl_table_add_with_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_10_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1548 = match_spec.if_precomp1548;
        pd_match_spec.if_precomp1548_mask = match_spec.if_precomp1548_mask;
        pd_match_spec.if_precomp1547 = match_spec.if_precomp1547;
        pd_match_spec.if_precomp1547_mask = match_spec.if_precomp1547_mask;
        pd_match_spec.stored_dst2 = match_spec.stored_dst2;
        pd_match_spec.stored_dst2_mask = match_spec.stored_dst2_mask;
        pd_match_spec.stored_src2 = match_spec.stored_src2;
        pd_match_spec.stored_src2_mask = match_spec.stored_src2_mask;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_table_add_with_NoAction(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Egress_t_egr_dpt_10_merged_tbl_table_add_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_10_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1548 = match_spec.if_precomp1548;
        pd_match_spec.if_precomp1548_mask = match_spec.if_precomp1548_mask;
        pd_match_spec.if_precomp1547 = match_spec.if_precomp1547;
        pd_match_spec.if_precomp1547_mask = match_spec.if_precomp1547_mask;
        pd_match_spec.stored_dst2 = match_spec.stored_dst2;
        pd_match_spec.stored_dst2_mask = match_spec.stored_dst2_mask;
        pd_match_spec.stored_src2 = match_spec.stored_src2;
        pd_match_spec.stored_src2_mask = match_spec.stored_src2_mask;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_table_add_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Egress_t_egr_dpt_10_merged_tbl_table_add_with_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_10_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1548 = match_spec.if_precomp1548;
        pd_match_spec.if_precomp1548_mask = match_spec.if_precomp1548_mask;
        pd_match_spec.if_precomp1547 = match_spec.if_precomp1547;
        pd_match_spec.if_precomp1547_mask = match_spec.if_precomp1547_mask;
        pd_match_spec.stored_dst2 = match_spec.stored_dst2;
        pd_match_spec.stored_dst2_mask = match_spec.stored_dst2_mask;
        pd_match_spec.stored_src2 = match_spec.stored_src2;
        pd_match_spec.stored_src2_mask = match_spec.stored_src2_mask;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_table_add_with_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiSetQueue_table_add_with_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiSetQueue_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiSetQueue_match_spec_t pd_match_spec;
        pd_match_spec.past_head = match_spec.past_head;
        pd_match_spec.past_head_mask = match_spec.past_head_mask;
        pd_match_spec.past_tail = match_spec.past_tail;
        pd_match_spec.past_tail_mask = match_spec.past_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_table_add_with_NoAction(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiSetQueue_table_add_with_Ingress_t_igr_aiSetQueueHead(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiSetQueue_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiSetQueue_match_spec_t pd_match_spec;
        pd_match_spec.past_head = match_spec.past_head;
        pd_match_spec.past_head_mask = match_spec.past_head_mask;
        pd_match_spec.past_tail = match_spec.past_tail;
        pd_match_spec.past_tail_mask = match_spec.past_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_table_add_with_Ingress_t_igr_aiSetQueueHead(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiSetQueue_table_add_with_Ingress_t_igr_aiSetQueueTail(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiSetQueue_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiSetQueue_match_spec_t pd_match_spec;
        pd_match_spec.past_head = match_spec.past_head;
        pd_match_spec.past_head_mask = match_spec.past_head_mask;
        pd_match_spec.past_tail = match_spec.past_tail;
        pd_match_spec.past_tail_mask = match_spec.past_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_table_add_with_Ingress_t_igr_aiSetQueueTail(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    EntryHandle_t Ingress_t_igr_tiSetQueue_table_add_with_Ingress_t_igr_aiDrop(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiSetQueue_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiSetQueue_match_spec_t pd_match_spec;
        pd_match_spec.past_head = match_spec.past_head;
        pd_match_spec.past_head_mask = match_spec.past_head_mask;
        pd_match_spec.past_tail = match_spec.past_tail;
        pd_match_spec.past_tail_mask = match_spec.past_tail_mask;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_table_add_with_Ingress_t_igr_aiDrop(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }



    // Table entry modify functions
    void IngressParser__PORT_METADATA_table_modify_with_set_port_metadata(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry, const main_set_port_metadata_action_spec_t &action_spec) {

        p4_pd_main_set_port_metadata_action_spec_t pd_action_spec;
        memcpy(pd_action_spec.action_ig_intr_md, action_spec.action_ig_intr_md.c_str(), 8);

        int status = p4_pd_main_IngressParser__PORT_METADATA_table_modify_with_set_port_metadata(sess_hdl, dev_id, entry, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void IngressParser__PORT_METADATA_table_modify_with_set_port_metadata_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_IngressParser__PORT_METADATA_match_spec_t &match_spec, const main_set_port_metadata_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_IngressParser__PORT_METADATA_match_spec_t pd_match_spec;
        pd_match_spec.ig_intr_md_ingress_port = match_spec.ig_intr_md_ingress_port;

        p4_pd_main_set_port_metadata_action_spec_t pd_action_spec;
        memcpy(pd_action_spec.action_ig_intr_md, action_spec.action_ig_intr_md.c_str(), 8);

        int status = p4_pd_main_IngressParser__PORT_METADATA_table_modify_with_set_port_metadata_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiForward_table_modify_with_Ingress_t_igr_aiSetEgress(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry, const main_Ingress_t_igr_aiSetEgress_action_spec_t &action_spec) {

        p4_pd_main_Ingress_t_igr_aiSetEgress_action_spec_t pd_action_spec;
        pd_action_spec.action_egr_port = action_spec.action_egr_port;

        int status = p4_pd_main_Ingress_t_igr_tiForward_table_modify_with_Ingress_t_igr_aiSetEgress(sess_hdl, dev_id, entry, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiForward_table_modify_with_Ingress_t_igr_aiSetEgress_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiForward_match_spec_t &match_spec, const main_Ingress_t_igr_aiSetEgress_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiForward_match_spec_t pd_match_spec;
        pd_match_spec.md_ingress_port = match_spec.md_ingress_port;
        memcpy(pd_match_spec.hdr_ethernet_dst_addr, match_spec.hdr_ethernet_dst_addr.c_str(), 6);

        p4_pd_main_Ingress_t_igr_aiSetEgress_action_spec_t pd_action_spec;
        pd_action_spec.action_egr_port = action_spec.action_egr_port;

        int status = p4_pd_main_Ingress_t_igr_tiForward_table_modify_with_Ingress_t_igr_aiSetEgress_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiForward_table_modify_with_Ingress_t_igr_aiNoop(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiForward_table_modify_with_Ingress_t_igr_aiNoop(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiForward_table_modify_with_Ingress_t_igr_aiNoop_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiForward_match_spec_t &match_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiForward_match_spec_t pd_match_spec;
        pd_match_spec.md_ingress_port = match_spec.md_ingress_port;
        memcpy(pd_match_spec.hdr_ethernet_dst_addr, match_spec.hdr_ethernet_dst_addr.c_str(), 6);

        int status = p4_pd_main_Ingress_t_igr_tiForward_table_modify_with_Ingress_t_igr_aiNoop_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiRotateF_table_modify_with_NoAction(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiRotateF_table_modify_with_NoAction(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiRotateF_table_modify_with_NoAction_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiRotateF_match_spec_t &match_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiRotateF_match_spec_t pd_match_spec;
        pd_match_spec.hdr_pktgen_packet_id = match_spec.hdr_pktgen_packet_id;

        int status = p4_pd_main_Ingress_t_igr_tiRotateF_table_modify_with_NoAction_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiRotateF_table_modify_with_Ingress_t_igr_aiRotateF(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry, const main_Ingress_t_igr_aiRotateF_action_spec_t &action_spec) {

        p4_pd_main_Ingress_t_igr_aiRotateF_action_spec_t pd_action_spec;
        pd_action_spec.action_fval = action_spec.action_fval;

        int status = p4_pd_main_Ingress_t_igr_tiRotateF_table_modify_with_Ingress_t_igr_aiRotateF(sess_hdl, dev_id, entry, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiRotateF_table_modify_with_Ingress_t_igr_aiRotateF_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiRotateF_match_spec_t &match_spec, const main_Ingress_t_igr_aiRotateF_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiRotateF_match_spec_t pd_match_spec;
        pd_match_spec.hdr_pktgen_packet_id = match_spec.hdr_pktgen_packet_id;

        p4_pd_main_Ingress_t_igr_aiRotateF_action_spec_t pd_action_spec;
        pd_action_spec.action_fval = action_spec.action_fval;

        int status = p4_pd_main_Ingress_t_igr_tiRotateF_table_modify_with_Ingress_t_igr_aiRotateF_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalcF_table_modify_with_Ingress_t_igr_aiSetFTop(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiCalcF_table_modify_with_Ingress_t_igr_aiSetFTop(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalcF_table_modify_with_Ingress_t_igr_aiSetFTop_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalcF_match_spec_t &match_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalcF_match_spec_t pd_match_spec;
        pd_match_spec.hdr_ip_src_addr = match_spec.hdr_ip_src_addr;
        pd_match_spec.hdr_ip_dst_addr = match_spec.hdr_ip_dst_addr;

        int status = p4_pd_main_Ingress_t_igr_tiCalcF_table_modify_with_Ingress_t_igr_aiSetFTop_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalcF_table_modify_with_Ingress_t_igr_aiSetFBottom(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiCalcF_table_modify_with_Ingress_t_igr_aiSetFBottom(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalcF_table_modify_with_Ingress_t_igr_aiSetFBottom_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalcF_match_spec_t &match_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalcF_match_spec_t pd_match_spec;
        pd_match_spec.hdr_ip_src_addr = match_spec.hdr_ip_src_addr;
        pd_match_spec.hdr_ip_dst_addr = match_spec.hdr_ip_dst_addr;

        int status = p4_pd_main_Ingress_t_igr_tiCalcF_table_modify_with_Ingress_t_igr_aiSetFBottom_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalcSaturated_table_modify_with_Ingress_t_igr_aiSaturated(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_table_modify_with_Ingress_t_igr_aiSaturated(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalcSaturated_table_modify_with_Ingress_t_igr_aiSaturated_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalcSaturated_match_spec_t &match_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalcSaturated_match_spec_t pd_match_spec;
        pd_match_spec.ig_tm_md_ucast_egress_port = match_spec.ig_tm_md_ucast_egress_port;

        int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_table_modify_with_Ingress_t_igr_aiSaturated_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalcSaturated_table_modify_with_Ingress_t_igr_aiNotSaturated(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_table_modify_with_Ingress_t_igr_aiNotSaturated(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalcSaturated_table_modify_with_Ingress_t_igr_aiNotSaturated_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalcSaturated_match_spec_t &match_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalcSaturated_match_spec_t pd_match_spec;
        pd_match_spec.ig_tm_md_ucast_egress_port = match_spec.ig_tm_md_ucast_egress_port;

        int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_table_modify_with_Ingress_t_igr_aiNotSaturated_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiReadLastSize_table_modify_with_Ingress_t_igr_aiReadLastSize(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry, const main_Ingress_t_igr_aiReadLastSize_action_spec_t &action_spec) {

        p4_pd_main_Ingress_t_igr_aiReadLastSize_action_spec_t pd_action_spec;
        pd_action_spec.action_lastRate_x_dT = action_spec.action_lastRate_x_dT;

        int status = p4_pd_main_Ingress_t_igr_tiReadLastSize_table_modify_with_Ingress_t_igr_aiReadLastSize(sess_hdl, dev_id, entry, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiReadLastSize_table_modify_with_Ingress_t_igr_aiReadLastSize_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiReadLastSize_match_spec_t &match_spec, const main_Ingress_t_igr_aiReadLastSize_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiReadLastSize_match_spec_t pd_match_spec;
        pd_match_spec.f = match_spec.f;

        p4_pd_main_Ingress_t_igr_aiReadLastSize_action_spec_t pd_action_spec;
        pd_action_spec.action_lastRate_x_dT = action_spec.action_lastRate_x_dT;

        int status = p4_pd_main_Ingress_t_igr_tiReadLastSize_table_modify_with_Ingress_t_igr_aiReadLastSize_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiGetRates_tail_table_modify_with_Ingress_t_igr_aiGetRates_tail(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry, const main_Ingress_t_igr_aiGetRates_tail_action_spec_t &action_spec) {

        p4_pd_main_Ingress_t_igr_aiGetRates_tail_action_spec_t pd_action_spec;
        pd_action_spec.action_r_tail = action_spec.action_r_tail;
        pd_action_spec.action_r_tail_x_dT = action_spec.action_r_tail_x_dT;

        int status = p4_pd_main_Ingress_t_igr_tiGetRates_tail_table_modify_with_Ingress_t_igr_aiGetRates_tail(sess_hdl, dev_id, entry, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiGetRates_tail_table_modify_with_Ingress_t_igr_aiGetRates_tail_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiGetRates_tail_match_spec_t &match_spec, const main_Ingress_t_igr_aiGetRates_tail_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiGetRates_tail_match_spec_t pd_match_spec;
        pd_match_spec.f = match_spec.f;
        pd_match_spec.tailq = match_spec.tailq;

        p4_pd_main_Ingress_t_igr_aiGetRates_tail_action_spec_t pd_action_spec;
        pd_action_spec.action_r_tail = action_spec.action_r_tail;
        pd_action_spec.action_r_tail_x_dT = action_spec.action_r_tail_x_dT;

        int status = p4_pd_main_Ingress_t_igr_tiGetRates_tail_table_modify_with_Ingress_t_igr_aiGetRates_tail_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiGetRates_head_table_modify_with_Ingress_t_igr_aiGetRates_head(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry, const main_Ingress_t_igr_aiGetRates_head_action_spec_t &action_spec) {

        p4_pd_main_Ingress_t_igr_aiGetRates_head_action_spec_t pd_action_spec;
        pd_action_spec.action_r_head = action_spec.action_r_head;
        pd_action_spec.action_r_head_x_dT = action_spec.action_r_head_x_dT;

        int status = p4_pd_main_Ingress_t_igr_tiGetRates_head_table_modify_with_Ingress_t_igr_aiGetRates_head(sess_hdl, dev_id, entry, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiGetRates_head_table_modify_with_Ingress_t_igr_aiGetRates_head_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiGetRates_head_match_spec_t &match_spec, const main_Ingress_t_igr_aiGetRates_head_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiGetRates_head_match_spec_t pd_match_spec;
        pd_match_spec.f = match_spec.f;
        pd_match_spec.headq = match_spec.headq;

        p4_pd_main_Ingress_t_igr_aiGetRates_head_action_spec_t pd_action_spec;
        pd_action_spec.action_r_head = action_spec.action_r_head;
        pd_action_spec.action_r_head_x_dT = action_spec.action_r_head_x_dT;

        int status = p4_pd_main_Ingress_t_igr_tiGetRates_head_table_modify_with_Ingress_t_igr_aiGetRates_head_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_rate_tail_table_modify_with_NoAction(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_table_modify_with_NoAction(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_rate_tail_table_modify_with_NoAction_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.rate_tail = match_spec.rate_tail;
        pd_match_spec.rate_tail_mask = match_spec.rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_table_modify_with_NoAction_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_rate_tail_table_modify_with_Ingress_t_igr_aiCalc_log_rate_tail(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry, const main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t &action_spec) {

        p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t pd_action_spec;
        pd_action_spec.action_log_v = action_spec.action_log_v;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_table_modify_with_Ingress_t_igr_aiCalc_log_rate_tail(sess_hdl, dev_id, entry, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_rate_tail_table_modify_with_Ingress_t_igr_aiCalc_log_rate_tail_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_rate_tail_match_spec_t &match_spec, const int32_t priority, const main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.rate_tail = match_spec.rate_tail;
        pd_match_spec.rate_tail_mask = match_spec.rate_tail_mask;

        p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t pd_action_spec;
        pd_action_spec.action_log_v = action_spec.action_log_v;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_table_modify_with_Ingress_t_igr_aiCalc_log_rate_tail_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_modify_with_NoAction(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_modify_with_NoAction(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_modify_with_NoAction_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_match_spec_t pd_match_spec;
        pd_match_spec.relative_round_m_dt = match_spec.relative_round_m_dt;
        pd_match_spec.relative_round_m_dt_mask = match_spec.relative_round_m_dt_mask;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_modify_with_NoAction_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_modify_with_Ingress_t_igr_aiCalc_log_relative_round_m_dt(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry, const main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t &action_spec) {

        p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t pd_action_spec;
        pd_action_spec.action_log_v = action_spec.action_log_v;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_modify_with_Ingress_t_igr_aiCalc_log_relative_round_m_dt(sess_hdl, dev_id, entry, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_modify_with_Ingress_t_igr_aiCalc_log_relative_round_m_dt_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_match_spec_t &match_spec, const int32_t priority, const main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_match_spec_t pd_match_spec;
        pd_match_spec.relative_round_m_dt = match_spec.relative_round_m_dt;
        pd_match_spec.relative_round_m_dt_mask = match_spec.relative_round_m_dt_mask;

        p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t pd_action_spec;
        pd_action_spec.action_log_v = action_spec.action_log_v;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_modify_with_Ingress_t_igr_aiCalc_log_relative_round_m_dt_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_relative_round_table_modify_with_NoAction(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_table_modify_with_NoAction(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_relative_round_table_modify_with_NoAction_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_relative_round_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_match_spec_t pd_match_spec;
        pd_match_spec.relative_round = match_spec.relative_round;
        pd_match_spec.relative_round_mask = match_spec.relative_round_mask;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_table_modify_with_NoAction_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_relative_round_table_modify_with_Ingress_t_igr_aiCalc_log_relative_round(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry, const main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t &action_spec) {

        p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t pd_action_spec;
        pd_action_spec.action_log_v = action_spec.action_log_v;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_table_modify_with_Ingress_t_igr_aiCalc_log_relative_round(sess_hdl, dev_id, entry, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_relative_round_table_modify_with_Ingress_t_igr_aiCalc_log_relative_round_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_relative_round_match_spec_t &match_spec, const int32_t priority, const main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_match_spec_t pd_match_spec;
        pd_match_spec.relative_round = match_spec.relative_round;
        pd_match_spec.relative_round_mask = match_spec.relative_round_mask;

        p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t pd_action_spec;
        pd_action_spec.action_log_v = action_spec.action_log_v;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_table_modify_with_Ingress_t_igr_aiCalc_log_relative_round_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_rate_head_table_modify_with_NoAction(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_table_modify_with_NoAction(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_rate_head_table_modify_with_NoAction_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_rate_head_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_match_spec_t pd_match_spec;
        pd_match_spec.rate_head = match_spec.rate_head;
        pd_match_spec.rate_head_mask = match_spec.rate_head_mask;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_table_modify_with_NoAction_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_rate_head_table_modify_with_Ingress_t_igr_aiCalc_log_rate_head(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry, const main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t &action_spec) {

        p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t pd_action_spec;
        pd_action_spec.action_log_v = action_spec.action_log_v;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_table_modify_with_Ingress_t_igr_aiCalc_log_rate_head(sess_hdl, dev_id, entry, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_rate_head_table_modify_with_Ingress_t_igr_aiCalc_log_rate_head_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_rate_head_match_spec_t &match_spec, const int32_t priority, const main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_match_spec_t pd_match_spec;
        pd_match_spec.rate_head = match_spec.rate_head;
        pd_match_spec.rate_head_mask = match_spec.rate_head_mask;

        p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t pd_action_spec;
        pd_action_spec.action_log_v = action_spec.action_log_v;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_table_modify_with_Ingress_t_igr_aiCalc_log_rate_head_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority, &pd_action_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_NoAction(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_NoAction(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_NoAction_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_NoAction_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_modify_with_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_7_merged_tbl_table_modify_with_NoAction(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_table_modify_with_NoAction(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_7_merged_tbl_table_modify_with_NoAction_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_7_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_table_modify_with_NoAction_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_7_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_7_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_7_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_7_merged_tbl_table_modify_with_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_table_modify_with_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_7_merged_tbl_table_modify_with_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_7_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_table_modify_with_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_6_merged_tbl_table_modify_with_NoAction(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_table_modify_with_NoAction(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_6_merged_tbl_table_modify_with_NoAction_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_6_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_table_modify_with_NoAction_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_6_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_6_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_6_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_6_merged_tbl_table_modify_with_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_table_modify_with_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_6_merged_tbl_table_modify_with_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_6_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_table_modify_with_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_8_merged_tbl_table_modify_with_NoAction(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_table_modify_with_NoAction(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_8_merged_tbl_table_modify_with_NoAction_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_8_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_table_modify_with_NoAction_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_8_merged_tbl_table_modify_with_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_table_modify_with_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_8_merged_tbl_table_modify_with_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_8_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_table_modify_with_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_8_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_8_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_8_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_NoAction(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_NoAction(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_NoAction_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_NoAction_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_0(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_0(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_0_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_0_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_1(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_1(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_1_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_1_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_2(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_2(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_2_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_2_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_3(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_3(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_3_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_3_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_4(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_4(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_4_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_4_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_5(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_5(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_5_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_5_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_6(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_6(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_6_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_6_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_7(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_7(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_7_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_7_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_8(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_8(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_8_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_8_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_9(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_9(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_9_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_9_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_10(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_10(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_10_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_10_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_11(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_11(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_11_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_11_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_12(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_12(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_12_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_12_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_13(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_13(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_13_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_13_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_14(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_14(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_14_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_14_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_15(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_15(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_15_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_15_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_16(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_16(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_16_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_16_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_17(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_17(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_17_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_17_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_18(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_18(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_18_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_18_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_19(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_19(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_19_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_19_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_20(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_20(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_20_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_20_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_21(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_21(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_21_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_21_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_22(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_22(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_22_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_22_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_23(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_23(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_23_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_23_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_24(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_24(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_24_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_24_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_25(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_25(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_25_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_25_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_26(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_26(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_26_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_26_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_27(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_27(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_27_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_27_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_28(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_28(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_28_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_28_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_29(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_29(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_29_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_29_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_30(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_30(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_30_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_30_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_31(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_31(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_31_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_modify_with_Ingress_t_igr_aiExp_aggregate_size_31_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_9_merged_tbl_table_modify_with_NoAction(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_table_modify_with_NoAction(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_9_merged_tbl_table_modify_with_NoAction_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_9_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_table_modify_with_NoAction_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_9_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_9_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_9_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_9_merged_tbl_table_modify_with_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_table_modify_with_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_9_merged_tbl_table_modify_with_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_9_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_table_modify_with_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_10_merged_tbl_table_modify_with_NoAction(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_table_modify_with_NoAction(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_10_merged_tbl_table_modify_with_NoAction_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_10_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1548 = match_spec.if_precomp1548;
        pd_match_spec.if_precomp1548_mask = match_spec.if_precomp1548_mask;
        pd_match_spec.if_precomp1547 = match_spec.if_precomp1547;
        pd_match_spec.if_precomp1547_mask = match_spec.if_precomp1547_mask;
        pd_match_spec.stored_dst2 = match_spec.stored_dst2;
        pd_match_spec.stored_dst2_mask = match_spec.stored_dst2_mask;
        pd_match_spec.stored_src2 = match_spec.stored_src2;
        pd_match_spec.stored_src2_mask = match_spec.stored_src2_mask;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_table_modify_with_NoAction_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_10_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_10_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_10_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1548 = match_spec.if_precomp1548;
        pd_match_spec.if_precomp1548_mask = match_spec.if_precomp1548_mask;
        pd_match_spec.if_precomp1547 = match_spec.if_precomp1547;
        pd_match_spec.if_precomp1547_mask = match_spec.if_precomp1547_mask;
        pd_match_spec.stored_dst2 = match_spec.stored_dst2;
        pd_match_spec.stored_dst2_mask = match_spec.stored_dst2_mask;
        pd_match_spec.stored_src2 = match_spec.stored_src2;
        pd_match_spec.stored_src2_mask = match_spec.stored_src2_mask;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_table_modify_with_Egress_t_egr_dpt_1635_merged_acn_6_noop_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_10_merged_tbl_table_modify_with_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_table_modify_with_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_10_merged_tbl_table_modify_with_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_10_merged_tbl_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1548 = match_spec.if_precomp1548;
        pd_match_spec.if_precomp1548_mask = match_spec.if_precomp1548_mask;
        pd_match_spec.if_precomp1547 = match_spec.if_precomp1547;
        pd_match_spec.if_precomp1547_mask = match_spec.if_precomp1547_mask;
        pd_match_spec.stored_dst2 = match_spec.stored_dst2;
        pd_match_spec.stored_dst2_mask = match_spec.stored_dst2_mask;
        pd_match_spec.stored_src2 = match_spec.stored_src2;
        pd_match_spec.stored_src2_mask = match_spec.stored_src2_mask;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_table_modify_with_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiSetQueue_table_modify_with_NoAction(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_table_modify_with_NoAction(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiSetQueue_table_modify_with_NoAction_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiSetQueue_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiSetQueue_match_spec_t pd_match_spec;
        pd_match_spec.past_head = match_spec.past_head;
        pd_match_spec.past_head_mask = match_spec.past_head_mask;
        pd_match_spec.past_tail = match_spec.past_tail;
        pd_match_spec.past_tail_mask = match_spec.past_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_table_modify_with_NoAction_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiSetQueue_table_modify_with_Ingress_t_igr_aiSetQueueHead(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_table_modify_with_Ingress_t_igr_aiSetQueueHead(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiSetQueue_table_modify_with_Ingress_t_igr_aiSetQueueHead_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiSetQueue_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiSetQueue_match_spec_t pd_match_spec;
        pd_match_spec.past_head = match_spec.past_head;
        pd_match_spec.past_head_mask = match_spec.past_head_mask;
        pd_match_spec.past_tail = match_spec.past_tail;
        pd_match_spec.past_tail_mask = match_spec.past_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_table_modify_with_Ingress_t_igr_aiSetQueueHead_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiSetQueue_table_modify_with_Ingress_t_igr_aiSetQueueTail(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_table_modify_with_Ingress_t_igr_aiSetQueueTail(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiSetQueue_table_modify_with_Ingress_t_igr_aiSetQueueTail_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiSetQueue_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiSetQueue_match_spec_t pd_match_spec;
        pd_match_spec.past_head = match_spec.past_head;
        pd_match_spec.past_head_mask = match_spec.past_head_mask;
        pd_match_spec.past_tail = match_spec.past_tail;
        pd_match_spec.past_tail_mask = match_spec.past_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_table_modify_with_Ingress_t_igr_aiSetQueueTail_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiSetQueue_table_modify_with_Ingress_t_igr_aiDrop(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_table_modify_with_Ingress_t_igr_aiDrop(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiSetQueue_table_modify_with_Ingress_t_igr_aiDrop_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiSetQueue_match_spec_t &match_spec, const int32_t priority) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiSetQueue_match_spec_t pd_match_spec;
        pd_match_spec.past_head = match_spec.past_head;
        pd_match_spec.past_head_mask = match_spec.past_head_mask;
        pd_match_spec.past_tail = match_spec.past_tail;
        pd_match_spec.past_tail_mask = match_spec.past_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_table_modify_with_Ingress_t_igr_aiDrop_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }


    // Table entry delete functions

    void IngressParser__PORT_METADATA_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_IngressParser__PORT_METADATA_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void IngressParser__PORT_METADATA_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_IngressParser__PORT_METADATA_match_spec_t &match_spec) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_IngressParser__PORT_METADATA_match_spec_t pd_match_spec;
        pd_match_spec.ig_intr_md_ingress_port = match_spec.ig_intr_md_ingress_port;

        int status = p4_pd_main_IngressParser__PORT_METADATA_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiForward_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Ingress_t_igr_tiForward_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiForward_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiForward_match_spec_t &match_spec) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiForward_match_spec_t pd_match_spec;
        pd_match_spec.md_ingress_port = match_spec.md_ingress_port;
  memcpy(pd_match_spec.hdr_ethernet_dst_addr, match_spec.hdr_ethernet_dst_addr.c_str(), 6);

        int status = p4_pd_main_Ingress_t_igr_tiForward_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiRotateF_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Ingress_t_igr_tiRotateF_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiRotateF_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiRotateF_match_spec_t &match_spec) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiRotateF_match_spec_t pd_match_spec;
        pd_match_spec.hdr_pktgen_packet_id = match_spec.hdr_pktgen_packet_id;

        int status = p4_pd_main_Ingress_t_igr_tiRotateF_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalcF_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Ingress_t_igr_tiCalcF_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalcF_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalcF_match_spec_t &match_spec) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalcF_match_spec_t pd_match_spec;
        pd_match_spec.hdr_ip_src_addr = match_spec.hdr_ip_src_addr;
        pd_match_spec.hdr_ip_dst_addr = match_spec.hdr_ip_dst_addr;

        int status = p4_pd_main_Ingress_t_igr_tiCalcF_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalcSaturated_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalcSaturated_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalcSaturated_match_spec_t &match_spec) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalcSaturated_match_spec_t pd_match_spec;
        pd_match_spec.ig_tm_md_ucast_egress_port = match_spec.ig_tm_md_ucast_egress_port;

        int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiReadLastSize_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Ingress_t_igr_tiReadLastSize_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiReadLastSize_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiReadLastSize_match_spec_t &match_spec) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiReadLastSize_match_spec_t pd_match_spec;
        pd_match_spec.f = match_spec.f;

        int status = p4_pd_main_Ingress_t_igr_tiReadLastSize_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiGetRates_tail_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Ingress_t_igr_tiGetRates_tail_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiGetRates_tail_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiGetRates_tail_match_spec_t &match_spec) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiGetRates_tail_match_spec_t pd_match_spec;
        pd_match_spec.f = match_spec.f;
        pd_match_spec.tailq = match_spec.tailq;

        int status = p4_pd_main_Ingress_t_igr_tiGetRates_tail_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiGetRates_head_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Ingress_t_igr_tiGetRates_head_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiGetRates_head_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiGetRates_head_match_spec_t &match_spec) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiGetRates_head_match_spec_t pd_match_spec;
        pd_match_spec.f = match_spec.f;
        pd_match_spec.headq = match_spec.headq;

        int status = p4_pd_main_Ingress_t_igr_tiGetRates_head_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_rate_tail_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_rate_tail_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_rate_tail_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.rate_tail = match_spec.rate_tail;
        pd_match_spec.rate_tail_mask = match_spec.rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_match_spec_t pd_match_spec;
        pd_match_spec.relative_round_m_dt = match_spec.relative_round_m_dt;
        pd_match_spec.relative_round_m_dt_mask = match_spec.relative_round_m_dt_mask;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_relative_round_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_relative_round_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_relative_round_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_match_spec_t pd_match_spec;
        pd_match_spec.relative_round = match_spec.relative_round;
        pd_match_spec.relative_round_mask = match_spec.relative_round_mask;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_rate_head_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_rate_head_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiCalc_log_rate_head_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_match_spec_t pd_match_spec;
        pd_match_spec.rate_head = match_spec.rate_head;
        pd_match_spec.rate_head_mask = match_spec.rate_head_mask;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail = match_spec.log_relative_round_m_dt_x_rate_tail;
        pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask = match_spec.log_relative_round_m_dt_x_rate_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_7_merged_tbl_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_7_merged_tbl_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_7_merged_tbl_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_6_merged_tbl_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_6_merged_tbl_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_6_merged_tbl_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_8_merged_tbl_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_8_merged_tbl_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_8_merged_tbl_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;
        pd_match_spec.log_aggregate_size = match_spec.log_aggregate_size;
        pd_match_spec.log_aggregate_size_mask = match_spec.log_aggregate_size_mask;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_9_merged_tbl_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_9_merged_tbl_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_9_merged_tbl_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_10_merged_tbl_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_10_merged_tbl_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Egress_t_egr_dpt_10_merged_tbl_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_match_spec_t pd_match_spec;
        pd_match_spec.if_precomp1548 = match_spec.if_precomp1548;
        pd_match_spec.if_precomp1548_mask = match_spec.if_precomp1548_mask;
        pd_match_spec.if_precomp1547 = match_spec.if_precomp1547;
        pd_match_spec.if_precomp1547_mask = match_spec.if_precomp1547_mask;
        pd_match_spec.stored_dst2 = match_spec.stored_dst2;
        pd_match_spec.stored_dst2_mask = match_spec.stored_dst2_mask;
        pd_match_spec.stored_src2 = match_spec.stored_src2;
        pd_match_spec.stored_src2_mask = match_spec.stored_src2_mask;
        pd_match_spec.if_precomp1550 = match_spec.if_precomp1550;
        pd_match_spec.if_precomp1550_mask = match_spec.if_precomp1550_mask;
        pd_match_spec.if_precomp = match_spec.if_precomp;
        pd_match_spec.if_precomp_mask = match_spec.if_precomp_mask;
        pd_match_spec.stored_dst = match_spec.stored_dst;
        pd_match_spec.stored_dst_mask = match_spec.stored_dst_mask;
        pd_match_spec.stored_src = match_spec.stored_src;
        pd_match_spec.stored_src_mask = match_spec.stored_src_mask;

        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiSetQueue_table_delete(const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry) {
        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_table_delete(sess_hdl, dev_id, entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiSetQueue_table_delete_by_match_spec(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_tiSetQueue_match_spec_t &match_spec, const int32_t priority) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_tiSetQueue_match_spec_t pd_match_spec;
        pd_match_spec.past_head = match_spec.past_head;
        pd_match_spec.past_head_mask = match_spec.past_head_mask;
        pd_match_spec.past_tail = match_spec.past_tail;
        pd_match_spec.past_tail_mask = match_spec.past_tail_mask;

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_table_delete_by_match_spec(sess_hdl, pd_dev_tgt, &pd_match_spec, priority);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }


    // Table default entry get functions

    EntryHandle_t IngressParser__PORT_METADATA_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_IngressParser__PORT_METADATA_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void IngressParser__PORT_METADATA_table_get_default_entry(main_IngressParser__PORT_METADATA_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_IngressParser__PORT_METADATA_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiForward_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiForward_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiForward_table_get_default_entry(main_Ingress_t_igr_tiForward_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiForward_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiToggleCebinae_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiToggleCebinae_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiToggleCebinae_table_get_default_entry(main_Ingress_t_igr_tiToggleCebinae_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiToggleCebinae_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiRotateF_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiRotateF_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiRotateF_table_get_default_entry(main_Ingress_t_igr_tiRotateF_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiRotateF_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiRotateRoundTime_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiRotateRoundTime_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiRotateRoundTime_table_get_default_entry(main_Ingress_t_igr_tiRotateRoundTime_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiRotateRoundTime_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiCalcF_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiCalcF_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiCalcF_table_get_default_entry(main_Ingress_t_igr_tiCalcF_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiCalcF_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiCalcSaturated_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiCalcSaturated_table_get_default_entry(main_Ingress_t_igr_tiCalcSaturated_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiReadLastSize_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiReadLastSize_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiReadLastSize_table_get_default_entry(main_Ingress_t_igr_tiReadLastSize_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiReadLastSize_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiDrop_rotate_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiDrop_rotate_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiDrop_rotate_table_get_default_entry(main_Ingress_t_igr_tiDrop_rotate_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiDrop_rotate_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiRotateTailq_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiRotateTailq_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiRotateTailq_table_get_default_entry(main_Ingress_t_igr_tiRotateTailq_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiRotateTailq_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t tbl_t_igr_aiGetTailq_st1_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_tbl_t_igr_aiGetTailq_st1_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void tbl_t_igr_aiGetTailq_st1_table_get_default_entry(main_tbl_t_igr_aiGetTailq_st1_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_tbl_t_igr_aiGetTailq_st1_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiRotateHeadq_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiRotateHeadq_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiRotateHeadq_table_get_default_entry(main_Ingress_t_igr_tiRotateHeadq_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiRotateHeadq_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t tbl_t_igr_aiGetHeadq_st1_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_tbl_t_igr_aiGetHeadq_st1_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void tbl_t_igr_aiGetHeadq_st1_table_get_default_entry(main_tbl_t_igr_aiGetHeadq_st1_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_tbl_t_igr_aiGetHeadq_st1_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiGetRates_tail_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiGetRates_tail_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiGetRates_tail_table_get_default_entry(main_Ingress_t_igr_tiGetRates_tail_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiGetRates_tail_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiGetRates_head_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiGetRates_head_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiGetRates_head_table_get_default_entry(main_Ingress_t_igr_tiGetRates_head_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiGetRates_head_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Egress_t_egr_dpt_2_merged_tbl_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_2_merged_tbl_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_2_merged_tbl_table_get_default_entry(main_Egress_t_egr_dpt_2_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_2_merged_tbl_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiCalc_log_rate_tail_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiCalc_log_rate_tail_table_get_default_entry(main_Ingress_t_igr_tiCalc_log_rate_tail_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_get_default_entry(main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiCalc_log_relative_round_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiCalc_log_relative_round_table_get_default_entry(main_Ingress_t_igr_tiCalc_log_relative_round_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiCalc_log_rate_head_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiCalc_log_rate_head_table_get_default_entry(main_Ingress_t_igr_tiCalc_log_rate_head_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Egress_t_egr_dpt_1_merged_tbl_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_1_merged_tbl_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_1_merged_tbl_table_get_default_entry(main_Egress_t_egr_dpt_1_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_1_merged_tbl_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Egress_t_egr_dpt_4_merged_tbl_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_4_merged_tbl_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_4_merged_tbl_table_get_default_entry(main_Egress_t_egr_dpt_4_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_4_merged_tbl_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Egress_t_egr_dpt_3_merged_tbl_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_3_merged_tbl_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_3_merged_tbl_table_get_default_entry(main_Egress_t_egr_dpt_3_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_3_merged_tbl_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_get_default_entry(main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Egress_t_egr_dpt_5_merged_tbl_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_5_merged_tbl_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_5_merged_tbl_table_get_default_entry(main_Egress_t_egr_dpt_5_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_5_merged_tbl_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Egress_t_egr_dpt_7_merged_tbl_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_7_merged_tbl_table_get_default_entry(main_Egress_t_egr_dpt_7_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Egress_t_egr_dpt_6_merged_tbl_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_6_merged_tbl_table_get_default_entry(main_Egress_t_egr_dpt_6_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Egress_t_egr_dpt_8_merged_tbl_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_8_merged_tbl_table_get_default_entry(main_Egress_t_egr_dpt_8_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiExp_aggregate_size_table_get_default_entry(main_Ingress_t_igr_tiExp_aggregate_size_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Egress_t_egr_dpt_9_merged_tbl_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_9_merged_tbl_table_get_default_entry(main_Egress_t_egr_dpt_9_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Egress_t_egr_dpt_10_merged_tbl_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_10_merged_tbl_table_get_default_entry(main_Egress_t_egr_dpt_10_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }

    EntryHandle_t Ingress_t_igr_tiSetQueue_table_get_default_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_entry_hdl_t entry_hdl = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_table_get_default_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiSetQueue_table_get_default_entry(main_Ingress_t_igr_tiSetQueue_entry_desc_t &desc, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const bool from_hw) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_table_get_default_entry(sess_hdl, pd_dev_tgt, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
                /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
                /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
            /* Ingress_t_igr_aiNoop has no parameters */
            /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
                /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
                /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
            /* Ingress_t_igr_aiRotateRoundTime has no parameters */
            /* Ingress_t_igr_aiSetFTop has no parameters */
            /* Ingress_t_igr_aiSetFBottom has no parameters */
            /* Ingress_t_igr_aiSaturated has no parameters */
            /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
                /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
            /* Ingress_t_igr_aiDrop_rotate has no parameters */
            /* Ingress_t_igr_aiRotateTailq has no parameters */
            /* Ingress_t_igr_aiGetTailq has no parameters */
            /* Ingress_t_igr_aiRotateHeadq has no parameters */
            /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
                /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
                /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
                /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
                /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
            /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
                /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
            /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
            /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
            /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
            /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
            /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
            /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
            /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
            /* Ingress_t_igr_aiSetQueueHead has no parameters */
            /* Ingress_t_igr_aiSetQueueTail has no parameters */
            /* Ingress_t_igr_aiDrop has no parameters */
    }


    // Table default entry clear functions

    void IngressParser__PORT_METADATA_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_IngressParser__PORT_METADATA_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiForward_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiForward_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiToggleCebinae_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiToggleCebinae_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiRotateF_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiRotateF_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiRotateRoundTime_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiRotateRoundTime_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiCalcF_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiCalcF_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiCalcSaturated_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiReadLastSize_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiReadLastSize_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiDrop_rotate_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiDrop_rotate_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiRotateTailq_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiRotateTailq_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void tbl_t_igr_aiGetTailq_st1_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_tbl_t_igr_aiGetTailq_st1_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiRotateHeadq_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiRotateHeadq_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void tbl_t_igr_aiGetHeadq_st1_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_tbl_t_igr_aiGetHeadq_st1_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiGetRates_tail_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiGetRates_tail_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiGetRates_head_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiGetRates_head_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Egress_t_egr_dpt_2_merged_tbl_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_2_merged_tbl_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiCalc_log_rate_tail_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiCalc_log_relative_round_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiCalc_log_rate_head_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Egress_t_egr_dpt_1_merged_tbl_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_1_merged_tbl_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Egress_t_egr_dpt_4_merged_tbl_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_4_merged_tbl_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Egress_t_egr_dpt_3_merged_tbl_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_3_merged_tbl_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Egress_t_egr_dpt_5_merged_tbl_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_5_merged_tbl_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Egress_t_egr_dpt_7_merged_tbl_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Egress_t_egr_dpt_6_merged_tbl_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Egress_t_egr_dpt_8_merged_tbl_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiExp_aggregate_size_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Egress_t_egr_dpt_9_merged_tbl_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Egress_t_egr_dpt_10_merged_tbl_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }
    void Ingress_t_igr_tiSetQueue_table_reset_default_entry(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_table_reset_default_entry(sess_hdl, pd_dev_tgt);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }


    int32_t IngressParser__PORT_METADATA_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_IngressParser__PORT_METADATA_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiForward_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiForward_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiToggleCebinae_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiToggleCebinae_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiRotateF_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiRotateF_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiRotateRoundTime_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiRotateRoundTime_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiCalcF_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiCalcF_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiCalcSaturated_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiReadLastSize_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiReadLastSize_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiDrop_rotate_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiDrop_rotate_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiRotateTailq_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiRotateTailq_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t tbl_t_igr_aiGetTailq_st1_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_tbl_t_igr_aiGetTailq_st1_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiRotateHeadq_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiRotateHeadq_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t tbl_t_igr_aiGetHeadq_st1_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_tbl_t_igr_aiGetHeadq_st1_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiGetRates_tail_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiGetRates_tail_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiGetRates_head_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiGetRates_head_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Egress_t_egr_dpt_2_merged_tbl_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Egress_t_egr_dpt_2_merged_tbl_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiCalc_log_rate_tail_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiCalc_log_relative_round_m_dt_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiCalc_log_relative_round_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiCalc_log_rate_head_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Egress_t_egr_dpt_1_merged_tbl_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Egress_t_egr_dpt_1_merged_tbl_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Egress_t_egr_dpt_4_merged_tbl_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Egress_t_egr_dpt_4_merged_tbl_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Egress_t_egr_dpt_3_merged_tbl_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Egress_t_egr_dpt_3_merged_tbl_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Egress_t_egr_dpt_5_merged_tbl_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Egress_t_egr_dpt_5_merged_tbl_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Egress_t_egr_dpt_7_merged_tbl_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Egress_t_egr_dpt_6_merged_tbl_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Egress_t_egr_dpt_8_merged_tbl_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiExp_aggregate_size_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Egress_t_egr_dpt_9_merged_tbl_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Egress_t_egr_dpt_10_merged_tbl_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }
    int32_t Ingress_t_igr_tiSetQueue_get_entry_count(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
        int32_t count = 0;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_get_entry_count(sess_hdl, pd_dev_tgt, (uint32_t *)&count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return count;
    }


    EntryHandle_t IngressParser__PORT_METADATA_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_IngressParser__PORT_METADATA_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void IngressParser__PORT_METADATA_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_IngressParser__PORT_METADATA_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void IngressParser__PORT_METADATA_get_entry(main_IngressParser__PORT_METADATA_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_IngressParser__PORT_METADATA_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_IngressParser__PORT_METADATA_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.ig_intr_md_ingress_port = pd_match_spec.ig_intr_md_ingress_port;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiForward_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiForward_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiForward_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiForward_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiForward_get_entry(main_Ingress_t_igr_tiForward_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Ingress_t_igr_tiForward_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiForward_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.md_ingress_port = pd_match_spec.md_ingress_port;
        desc.match_spec.hdr_ethernet_dst_addr = std::string((char *) pd_match_spec.hdr_ethernet_dst_addr, 6);
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiToggleCebinae_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiToggleCebinae_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiToggleCebinae_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiToggleCebinae_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiToggleCebinae_get_entry(main_Ingress_t_igr_tiToggleCebinae_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiToggleCebinae_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiRotateF_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiRotateF_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiRotateF_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiRotateF_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiRotateF_get_entry(main_Ingress_t_igr_tiRotateF_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Ingress_t_igr_tiRotateF_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiRotateF_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.hdr_pktgen_packet_id = pd_match_spec.hdr_pktgen_packet_id;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiRotateRoundTime_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiRotateRoundTime_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiRotateRoundTime_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiRotateRoundTime_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiRotateRoundTime_get_entry(main_Ingress_t_igr_tiRotateRoundTime_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiRotateRoundTime_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiCalcF_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiCalcF_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiCalcF_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiCalcF_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalcF_get_entry(main_Ingress_t_igr_tiCalcF_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Ingress_t_igr_tiCalcF_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiCalcF_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.hdr_ip_src_addr = pd_match_spec.hdr_ip_src_addr;
        desc.match_spec.hdr_ip_dst_addr = pd_match_spec.hdr_ip_dst_addr;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiCalcSaturated_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiCalcSaturated_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalcSaturated_get_entry(main_Ingress_t_igr_tiCalcSaturated_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Ingress_t_igr_tiCalcSaturated_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.ig_tm_md_ucast_egress_port = pd_match_spec.ig_tm_md_ucast_egress_port;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiReadLastSize_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiReadLastSize_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiReadLastSize_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiReadLastSize_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiReadLastSize_get_entry(main_Ingress_t_igr_tiReadLastSize_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Ingress_t_igr_tiReadLastSize_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiReadLastSize_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.f = pd_match_spec.f;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiDrop_rotate_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiDrop_rotate_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiDrop_rotate_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiDrop_rotate_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiDrop_rotate_get_entry(main_Ingress_t_igr_tiDrop_rotate_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiDrop_rotate_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiRotateTailq_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiRotateTailq_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiRotateTailq_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiRotateTailq_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiRotateTailq_get_entry(main_Ingress_t_igr_tiRotateTailq_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiRotateTailq_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t tbl_t_igr_aiGetTailq_st1_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_tbl_t_igr_aiGetTailq_st1_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void tbl_t_igr_aiGetTailq_st1_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_tbl_t_igr_aiGetTailq_st1_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void tbl_t_igr_aiGetTailq_st1_get_entry(main_tbl_t_igr_aiGetTailq_st1_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_tbl_t_igr_aiGetTailq_st1_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiRotateHeadq_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiRotateHeadq_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiRotateHeadq_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiRotateHeadq_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiRotateHeadq_get_entry(main_Ingress_t_igr_tiRotateHeadq_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiRotateHeadq_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t tbl_t_igr_aiGetHeadq_st1_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_tbl_t_igr_aiGetHeadq_st1_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void tbl_t_igr_aiGetHeadq_st1_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_tbl_t_igr_aiGetHeadq_st1_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void tbl_t_igr_aiGetHeadq_st1_get_entry(main_tbl_t_igr_aiGetHeadq_st1_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_tbl_t_igr_aiGetHeadq_st1_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiGetRates_tail_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiGetRates_tail_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiGetRates_tail_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiGetRates_tail_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiGetRates_tail_get_entry(main_Ingress_t_igr_tiGetRates_tail_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Ingress_t_igr_tiGetRates_tail_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiGetRates_tail_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.f = pd_match_spec.f;
        desc.match_spec.tailq = pd_match_spec.tailq;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiGetRates_head_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiGetRates_head_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiGetRates_head_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiGetRates_head_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiGetRates_head_get_entry(main_Ingress_t_igr_tiGetRates_head_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Ingress_t_igr_tiGetRates_head_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiGetRates_head_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.f = pd_match_spec.f;
        desc.match_spec.headq = pd_match_spec.headq;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Egress_t_egr_dpt_2_merged_tbl_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Egress_t_egr_dpt_2_merged_tbl_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_2_merged_tbl_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Egress_t_egr_dpt_2_merged_tbl_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_2_merged_tbl_get_entry(main_Egress_t_egr_dpt_2_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_2_merged_tbl_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiCalc_log_rate_tail_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiCalc_log_rate_tail_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_rate_tail_get_entry(main_Ingress_t_igr_tiCalc_log_rate_tail_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &desc.priority, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.rate_tail = pd_match_spec.rate_tail;
        desc.match_spec.rate_tail_mask = pd_match_spec.rate_tail_mask;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiCalc_log_relative_round_m_dt_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiCalc_log_relative_round_m_dt_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_relative_round_m_dt_get_entry(main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &desc.priority, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.relative_round_m_dt = pd_match_spec.relative_round_m_dt;
        desc.match_spec.relative_round_m_dt_mask = pd_match_spec.relative_round_m_dt_mask;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiCalc_log_relative_round_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiCalc_log_relative_round_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_relative_round_get_entry(main_Ingress_t_igr_tiCalc_log_relative_round_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &desc.priority, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.relative_round = pd_match_spec.relative_round;
        desc.match_spec.relative_round_mask = pd_match_spec.relative_round_mask;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiCalc_log_rate_head_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiCalc_log_rate_head_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiCalc_log_rate_head_get_entry(main_Ingress_t_igr_tiCalc_log_rate_head_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &desc.priority, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.rate_head = pd_match_spec.rate_head;
        desc.match_spec.rate_head_mask = pd_match_spec.rate_head_mask;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Egress_t_egr_dpt_1_merged_tbl_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Egress_t_egr_dpt_1_merged_tbl_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_1_merged_tbl_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Egress_t_egr_dpt_1_merged_tbl_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_1_merged_tbl_get_entry(main_Egress_t_egr_dpt_1_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_1_merged_tbl_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Egress_t_egr_dpt_4_merged_tbl_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Egress_t_egr_dpt_4_merged_tbl_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_4_merged_tbl_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Egress_t_egr_dpt_4_merged_tbl_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_4_merged_tbl_get_entry(main_Egress_t_egr_dpt_4_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_4_merged_tbl_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Egress_t_egr_dpt_3_merged_tbl_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Egress_t_egr_dpt_3_merged_tbl_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_3_merged_tbl_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Egress_t_egr_dpt_3_merged_tbl_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_3_merged_tbl_get_entry(main_Egress_t_egr_dpt_3_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_3_merged_tbl_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_get_entry(main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &desc.priority, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.log_relative_round_m_dt_x_rate_tail = pd_match_spec.log_relative_round_m_dt_x_rate_tail;
        desc.match_spec.log_relative_round_m_dt_x_rate_tail_mask = pd_match_spec.log_relative_round_m_dt_x_rate_tail_mask;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Egress_t_egr_dpt_5_merged_tbl_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Egress_t_egr_dpt_5_merged_tbl_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_5_merged_tbl_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Egress_t_egr_dpt_5_merged_tbl_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_5_merged_tbl_get_entry(main_Egress_t_egr_dpt_5_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_5_merged_tbl_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Egress_t_egr_dpt_7_merged_tbl_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_7_merged_tbl_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_7_merged_tbl_get_entry(main_Egress_t_egr_dpt_7_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &desc.priority, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.if_precomp1550 = pd_match_spec.if_precomp1550;
        desc.match_spec.if_precomp1550_mask = pd_match_spec.if_precomp1550_mask;
        desc.match_spec.if_precomp = pd_match_spec.if_precomp;
        desc.match_spec.if_precomp_mask = pd_match_spec.if_precomp_mask;
        desc.match_spec.stored_dst = pd_match_spec.stored_dst;
        desc.match_spec.stored_dst_mask = pd_match_spec.stored_dst_mask;
        desc.match_spec.stored_src = pd_match_spec.stored_src;
        desc.match_spec.stored_src_mask = pd_match_spec.stored_src_mask;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Egress_t_egr_dpt_6_merged_tbl_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_6_merged_tbl_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_6_merged_tbl_get_entry(main_Egress_t_egr_dpt_6_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &desc.priority, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.if_precomp1550 = pd_match_spec.if_precomp1550;
        desc.match_spec.if_precomp1550_mask = pd_match_spec.if_precomp1550_mask;
        desc.match_spec.if_precomp = pd_match_spec.if_precomp;
        desc.match_spec.if_precomp_mask = pd_match_spec.if_precomp_mask;
        desc.match_spec.stored_dst = pd_match_spec.stored_dst;
        desc.match_spec.stored_dst_mask = pd_match_spec.stored_dst_mask;
        desc.match_spec.stored_src = pd_match_spec.stored_src;
        desc.match_spec.stored_src_mask = pd_match_spec.stored_src_mask;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Egress_t_egr_dpt_8_merged_tbl_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_8_merged_tbl_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_8_merged_tbl_get_entry(main_Egress_t_egr_dpt_8_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &desc.priority, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.if_precomp1550 = pd_match_spec.if_precomp1550;
        desc.match_spec.if_precomp1550_mask = pd_match_spec.if_precomp1550_mask;
        desc.match_spec.if_precomp = pd_match_spec.if_precomp;
        desc.match_spec.if_precomp_mask = pd_match_spec.if_precomp_mask;
        desc.match_spec.stored_dst = pd_match_spec.stored_dst;
        desc.match_spec.stored_dst_mask = pd_match_spec.stored_dst_mask;
        desc.match_spec.stored_src = pd_match_spec.stored_src;
        desc.match_spec.stored_src_mask = pd_match_spec.stored_src_mask;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiExp_aggregate_size_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiExp_aggregate_size_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiExp_aggregate_size_get_entry(main_Ingress_t_igr_tiExp_aggregate_size_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &desc.priority, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.log_aggregate_size = pd_match_spec.log_aggregate_size;
        desc.match_spec.log_aggregate_size_mask = pd_match_spec.log_aggregate_size_mask;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Egress_t_egr_dpt_9_merged_tbl_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_9_merged_tbl_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_9_merged_tbl_get_entry(main_Egress_t_egr_dpt_9_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &desc.priority, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.if_precomp1550 = pd_match_spec.if_precomp1550;
        desc.match_spec.if_precomp1550_mask = pd_match_spec.if_precomp1550_mask;
        desc.match_spec.if_precomp = pd_match_spec.if_precomp;
        desc.match_spec.if_precomp_mask = pd_match_spec.if_precomp_mask;
        desc.match_spec.stored_dst = pd_match_spec.stored_dst;
        desc.match_spec.stored_dst_mask = pd_match_spec.stored_dst_mask;
        desc.match_spec.stored_src = pd_match_spec.stored_src;
        desc.match_spec.stored_src_mask = pd_match_spec.stored_src_mask;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Egress_t_egr_dpt_10_merged_tbl_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Egress_t_egr_dpt_10_merged_tbl_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Egress_t_egr_dpt_10_merged_tbl_get_entry(main_Egress_t_egr_dpt_10_merged_tbl_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &desc.priority, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.if_precomp1548 = pd_match_spec.if_precomp1548;
        desc.match_spec.if_precomp1548_mask = pd_match_spec.if_precomp1548_mask;
        desc.match_spec.if_precomp1547 = pd_match_spec.if_precomp1547;
        desc.match_spec.if_precomp1547_mask = pd_match_spec.if_precomp1547_mask;
        desc.match_spec.stored_dst2 = pd_match_spec.stored_dst2;
        desc.match_spec.stored_dst2_mask = pd_match_spec.stored_dst2_mask;
        desc.match_spec.stored_src2 = pd_match_spec.stored_src2;
        desc.match_spec.stored_src2_mask = pd_match_spec.stored_src2_mask;
        desc.match_spec.if_precomp1550 = pd_match_spec.if_precomp1550;
        desc.match_spec.if_precomp1550_mask = pd_match_spec.if_precomp1550_mask;
        desc.match_spec.if_precomp = pd_match_spec.if_precomp;
        desc.match_spec.if_precomp_mask = pd_match_spec.if_precomp_mask;
        desc.match_spec.stored_dst = pd_match_spec.stored_dst;
        desc.match_spec.stored_dst_mask = pd_match_spec.stored_dst_mask;
        desc.match_spec.stored_src = pd_match_spec.stored_src;
        desc.match_spec.stored_src_mask = pd_match_spec.stored_src_mask;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }

    EntryHandle_t Ingress_t_igr_tiSetQueue_get_first_entry_handle(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t entry_hdl = 0;

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_get_first_entry_handle(sess_hdl, pd_dev_tgt, &entry_hdl);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return (EntryHandle_t)entry_hdl;
    }

    void Ingress_t_igr_tiSetQueue_get_next_entry_handles(std::vector<int32_t> &next_entry_handles, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const EntryHandle_t entry_hdl, const int32_t n) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        next_entry_handles = std::vector<EntryHandle_t>(n);
        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_get_next_entry_handles(sess_hdl, pd_dev_tgt, entry_hdl, n, (p4_pd_entry_hdl_t *)next_entry_handles.data());
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void Ingress_t_igr_tiSetQueue_get_entry(main_Ingress_t_igr_tiSetQueue_entry_desc_t &desc, const SessionHandle_t sess_hdl, const int8_t dev_id, const EntryHandle_t entry_hdl, const bool from_hw) {
        bool has_mbr_hdl = false;
        bool has_grp_hdl = false;
        p4_pd_grp_hdl_t grp_hdl = 0;
        p4_pd_mbr_hdl_t mbr_hdl = 0;
        (void) has_mbr_hdl;
        (void) has_grp_hdl;
        (void) grp_hdl;
        (void) mbr_hdl;
        p4_pd_main_Ingress_t_igr_tiSetQueue_match_spec_t pd_match_spec;

        p4_pd_main_action_specs_t pd_action_specs = {};
        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_get_entry(sess_hdl, dev_id, entry_hdl, from_hw, &pd_match_spec, &desc.priority, &pd_action_specs);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }

        switch(pd_action_specs.name) {
          case p4_pd_main_set_port_metadata:
            desc.action_desc.name = std::string("set_port_metadata");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetEgress:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetEgress");
            break;
          case p4_pd_main_Ingress_t_igr_aiNoop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNoop");
            break;
          case p4_pd_main_NoAction:
            desc.action_desc.name = std::string("NoAction");
            break;
          case p4_pd_main_Ingress_t_igr_aiToggleCebinae:
            desc.action_desc.name = std::string("Ingress_t_igr_aiToggleCebinae");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateF:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateF");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateRoundTime:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateRoundTime");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFTop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFTop");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetFBottom:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetFBottom");
            break;
          case p4_pd_main_Ingress_t_igr_aiSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiNotSaturated:
            desc.action_desc.name = std::string("Ingress_t_igr_aiNotSaturated");
            break;
          case p4_pd_main_Ingress_t_igr_aiReadLastSize:
            desc.action_desc.name = std::string("Ingress_t_igr_aiReadLastSize");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop_rotate:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop_rotate");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetTailq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetTailq");
            break;
          case p4_pd_main_Ingress_t_igr_aiRotateHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiRotateHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetHeadq:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetHeadq");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiGetRates_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiGetRates_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_tail");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round_m_dt");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_relative_round");
            break;
          case p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head:
            desc.action_desc.name = std::string("Ingress_t_igr_aiCalc_log_rate_head");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1635_merged_acn_6_noop:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1635_merged_acn_6_noop");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_0:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_0");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_1:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_1");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_2:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_2");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_3:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_3");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_4:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_4");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_5:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_5");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_6:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_6");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_7:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_7");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_8:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_8");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_9:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_9");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_10:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_10");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_11:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_11");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_12:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_12");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_13:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_13");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_14:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_14");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_15:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_15");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_16:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_16");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_17:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_17");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_18:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_18");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_19:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_19");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_20:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_20");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_21:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_21");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_22:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_22");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_23:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_23");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_24:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_24");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_25:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_25");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_26:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_26");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_27:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_27");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_28:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_28");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_29:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_29");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_30:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_30");
            break;
          case p4_pd_main_Ingress_t_igr_aiExp_aggregate_size_31:
            desc.action_desc.name = std::string("Ingress_t_igr_aiExp_aggregate_size_31");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt");
            break;
          case p4_pd_main_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt:
            desc.action_desc.name = std::string("Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueHead:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueHead");
            break;
          case p4_pd_main_Ingress_t_igr_aiSetQueueTail:
            desc.action_desc.name = std::string("Ingress_t_igr_aiSetQueueTail");
            break;
          case p4_pd_main_Ingress_t_igr_aiDrop:
            desc.action_desc.name = std::string("Ingress_t_igr_aiDrop");
            break;
        }
        if (desc.action_desc.name == "set_port_metadata") {
          main_set_port_metadata_action_spec_t a_spec;
          /* action_ig_intr_md has byte width 8 */
          a_spec.__set_action_ig_intr_md(std::string((char*)pd_action_specs.u.p4_pd_main_set_port_metadata.action_ig_intr_md, 8));
          desc.action_desc.data.__set_main_set_port_metadata(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiSetEgress") {
          main_Ingress_t_igr_aiSetEgress_action_spec_t a_spec;
          /* action_egr_port has byte width 2 */
          a_spec.__set_action_egr_port(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiSetEgress.action_egr_port);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiSetEgress(a_spec);
        }
        /* Ingress_t_igr_aiNoop has no parameters */
        /* NoAction has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiToggleCebinae") {
          main_Ingress_t_igr_aiToggleCebinae_action_spec_t a_spec;
          /* action_isOn has byte width 1 */
          a_spec.__set_action_isOn(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiToggleCebinae.action_isOn);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiToggleCebinae(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiRotateF") {
          main_Ingress_t_igr_aiRotateF_action_spec_t a_spec;
          /* action_fval has byte width 2 */
          a_spec.__set_action_fval(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiRotateF.action_fval);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiRotateF(a_spec);
        }
        /* Ingress_t_igr_aiRotateRoundTime has no parameters */
        /* Ingress_t_igr_aiSetFTop has no parameters */
        /* Ingress_t_igr_aiSetFBottom has no parameters */
        /* Ingress_t_igr_aiSaturated has no parameters */
        /* Ingress_t_igr_aiNotSaturated has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiReadLastSize") {
          main_Ingress_t_igr_aiReadLastSize_action_spec_t a_spec;
          /* action_lastRate_x_dT has byte width 4 */
          a_spec.__set_action_lastRate_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiReadLastSize.action_lastRate_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiReadLastSize(a_spec);
        }
        /* Ingress_t_igr_aiDrop_rotate has no parameters */
        /* Ingress_t_igr_aiRotateTailq has no parameters */
        /* Ingress_t_igr_aiGetTailq has no parameters */
        /* Ingress_t_igr_aiRotateHeadq has no parameters */
        /* Ingress_t_igr_aiGetHeadq has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_tail") {
          main_Ingress_t_igr_aiGetRates_tail_action_spec_t a_spec;
          /* action_r_tail has byte width 4 */
          a_spec.__set_action_r_tail(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail);
          /* action_r_tail_x_dT has byte width 4 */
          a_spec.__set_action_r_tail_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_tail.action_r_tail_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiGetRates_head") {
          main_Ingress_t_igr_aiGetRates_head_action_spec_t a_spec;
          /* action_r_head has byte width 4 */
          a_spec.__set_action_r_head(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head);
          /* action_r_head_x_dT has byte width 4 */
          a_spec.__set_action_r_head_x_dT(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiGetRates_head.action_r_head_x_dT);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiGetRates_head(a_spec);
        }
        /* Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt has no parameters */
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_tail") {
          main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_tail(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round_m_dt") {
          main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_relative_round") {
          main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_relative_round(a_spec);
        }
        else if (desc.action_desc.name == "Ingress_t_igr_aiCalc_log_rate_head") {
          main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t a_spec;
          /* action_log_v has byte width 1 */
          a_spec.__set_action_log_v(pd_action_specs.u.p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head.action_log_v);
          desc.action_desc.data.__set_main_Ingress_t_igr_aiCalc_log_rate_head(a_spec);
        }
        /* Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30 has no parameters */
        /* Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31 has no parameters */
        /* Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1635_merged_acn_6_noop has no parameters */
        /* Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_0 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_1 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_2 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_3 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_4 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_5 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_6 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_7 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_8 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_9 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_10 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_11 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_12 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_13 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_14 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_15 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_16 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_17 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_18 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_19 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_20 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_21 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_22 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_23 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_24 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_25 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_26 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_27 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_28 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_29 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_30 has no parameters */
        /* Ingress_t_igr_aiExp_aggregate_size_31 has no parameters */
        /* Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt has no parameters */
        /* Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt has no parameters */
        /* Ingress_t_igr_aiSetQueueHead has no parameters */
        /* Ingress_t_igr_aiSetQueueTail has no parameters */
        /* Ingress_t_igr_aiDrop has no parameters */
        desc.match_spec.past_head = pd_match_spec.past_head;
        desc.match_spec.past_head_mask = pd_match_spec.past_head_mask;
        desc.match_spec.past_tail = pd_match_spec.past_tail;
        desc.match_spec.past_tail_mask = pd_match_spec.past_tail_mask;
       desc.has_grp_hdl = has_grp_hdl;
       desc.has_mbr_hdl = has_mbr_hdl;
       desc.selector_grp_hdl = grp_hdl;
       desc.action_mbr_hdl = mbr_hdl;
    }



    // set default action

    int32_t Ingress_t_igr_tiForward_set_default_action_Ingress_t_igr_aiNoop(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiForward_set_default_action_Ingress_t_igr_aiNoop(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiToggleCebinae_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiToggleCebinae_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiToggleCebinae_set_default_action_Ingress_t_igr_aiToggleCebinae(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_aiToggleCebinae_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_aiToggleCebinae_action_spec_t pd_action_spec;
        pd_action_spec.action_isOn = action_spec.action_isOn;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiToggleCebinae_set_default_action_Ingress_t_igr_aiToggleCebinae(sess_hdl, pd_dev_tgt, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiRotateF_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiRotateF_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiRotateF_set_default_action_Ingress_t_igr_aiRotateF(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_aiRotateF_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_aiRotateF_action_spec_t pd_action_spec;
        pd_action_spec.action_fval = action_spec.action_fval;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiRotateF_set_default_action_Ingress_t_igr_aiRotateF(sess_hdl, pd_dev_tgt, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiRotateRoundTime_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiRotateRoundTime_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiRotateRoundTime_set_default_action_Ingress_t_igr_aiRotateRoundTime(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiRotateRoundTime_set_default_action_Ingress_t_igr_aiRotateRoundTime(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiCalcF_set_default_action_Ingress_t_igr_aiSetFBottom(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalcF_set_default_action_Ingress_t_igr_aiSetFBottom(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiCalcSaturated_set_default_action_Ingress_t_igr_aiNotSaturated(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_set_default_action_Ingress_t_igr_aiNotSaturated(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiReadLastSize_set_default_action_Ingress_t_igr_aiReadLastSize(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_aiReadLastSize_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_aiReadLastSize_action_spec_t pd_action_spec;
        pd_action_spec.action_lastRate_x_dT = action_spec.action_lastRate_x_dT;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiReadLastSize_set_default_action_Ingress_t_igr_aiReadLastSize(sess_hdl, pd_dev_tgt, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiDrop_rotate_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiDrop_rotate_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiDrop_rotate_set_default_action_Ingress_t_igr_aiDrop_rotate(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiDrop_rotate_set_default_action_Ingress_t_igr_aiDrop_rotate(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiRotateTailq_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiRotateTailq_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiRotateTailq_set_default_action_Ingress_t_igr_aiRotateTailq(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiRotateTailq_set_default_action_Ingress_t_igr_aiRotateTailq(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t tbl_t_igr_aiGetTailq_st1_set_default_action_Ingress_t_igr_aiGetTailq(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_tbl_t_igr_aiGetTailq_st1_set_default_action_Ingress_t_igr_aiGetTailq(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiRotateHeadq_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiRotateHeadq_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiRotateHeadq_set_default_action_Ingress_t_igr_aiRotateHeadq(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiRotateHeadq_set_default_action_Ingress_t_igr_aiRotateHeadq(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t tbl_t_igr_aiGetHeadq_st1_set_default_action_Ingress_t_igr_aiGetHeadq(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_tbl_t_igr_aiGetHeadq_st1_set_default_action_Ingress_t_igr_aiGetHeadq(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiGetRates_tail_set_default_action_Ingress_t_igr_aiGetRates_tail(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_aiGetRates_tail_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_aiGetRates_tail_action_spec_t pd_action_spec;
        pd_action_spec.action_r_tail = action_spec.action_r_tail;
        pd_action_spec.action_r_tail_x_dT = action_spec.action_r_tail_x_dT;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiGetRates_tail_set_default_action_Ingress_t_igr_aiGetRates_tail(sess_hdl, pd_dev_tgt, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiGetRates_head_set_default_action_Ingress_t_igr_aiGetRates_head(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_aiGetRates_head_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_aiGetRates_head_action_spec_t pd_action_spec;
        pd_action_spec.action_r_head = action_spec.action_r_head;
        pd_action_spec.action_r_head_x_dT = action_spec.action_r_head_x_dT;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiGetRates_head_set_default_action_Ingress_t_igr_aiGetRates_head(sess_hdl, pd_dev_tgt, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_2_merged_tbl_set_default_action_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_2_merged_tbl_set_default_action_Egress_t_egr_dpt_1562_merged_acn_2_acn_0_opstmt(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiCalc_log_rate_tail_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiCalc_log_rate_tail_set_default_action_Ingress_t_igr_aiCalc_log_rate_tail(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_aiCalc_log_rate_tail_action_spec_t pd_action_spec;
        pd_action_spec.action_log_v = action_spec.action_log_v;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_set_default_action_Ingress_t_igr_aiCalc_log_rate_tail(sess_hdl, pd_dev_tgt, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiCalc_log_relative_round_m_dt_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiCalc_log_relative_round_m_dt_set_default_action_Ingress_t_igr_aiCalc_log_relative_round_m_dt(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_m_dt_action_spec_t pd_action_spec;
        pd_action_spec.action_log_v = action_spec.action_log_v;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_set_default_action_Ingress_t_igr_aiCalc_log_relative_round_m_dt(sess_hdl, pd_dev_tgt, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiCalc_log_relative_round_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiCalc_log_relative_round_set_default_action_Ingress_t_igr_aiCalc_log_relative_round(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_aiCalc_log_relative_round_action_spec_t pd_action_spec;
        pd_action_spec.action_log_v = action_spec.action_log_v;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_set_default_action_Ingress_t_igr_aiCalc_log_relative_round(sess_hdl, pd_dev_tgt, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiCalc_log_rate_head_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiCalc_log_rate_head_set_default_action_Ingress_t_igr_aiCalc_log_rate_head(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t &action_spec) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_main_Ingress_t_igr_aiCalc_log_rate_head_action_spec_t pd_action_spec;
        pd_action_spec.action_log_v = action_spec.action_log_v;

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_set_default_action_Ingress_t_igr_aiCalc_log_rate_head(sess_hdl, pd_dev_tgt, &pd_action_spec, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_1_merged_tbl_set_default_action_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_1_merged_tbl_set_default_action_Egress_t_egr_dpt_1559_merged_acn_1_acn_0_opstmt_1560_acn_0_opstmt(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_4_merged_tbl_set_default_action_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_4_merged_tbl_set_default_action_Egress_t_egr_dpt_1564_merged_acn_4_acn_0_opstmt(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_3_merged_tbl_set_default_action_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_3_merged_tbl_set_default_action_Egress_t_egr_dpt_1566_merged_acn_3_acn_0_opstmt(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_0(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_1(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_2(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_3(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_4(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_5(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_6(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_7(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_8(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_9(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_10(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_11(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_12(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_13(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_14(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_15(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_16(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_17(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_18(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_19(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_20(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_21(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_22(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_23(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_24(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_25(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_26(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_27(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_28(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_29(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_30(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_default_action_Ingress_t_igr_aiExp_relative_round_m_dt_x_rate_tail_31(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_5_merged_tbl_set_default_action_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_5_merged_tbl_set_default_action_Egress_t_egr_dpt_1568_merged_acn_5_acn_0_opstmt_1570_acn_0_opstmt(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_7_merged_tbl_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_7_merged_tbl_set_default_action_Egress_t_egr_dpt_1635_merged_acn_6_noop(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_set_default_action_Egress_t_egr_dpt_1635_merged_acn_6_noop(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_7_merged_tbl_set_default_action_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_set_default_action_Egress_t_egr_dpt_1577_merged_acn_7_acn_0_opstmt(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_6_merged_tbl_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_6_merged_tbl_set_default_action_Egress_t_egr_dpt_1635_merged_acn_6_noop(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_set_default_action_Egress_t_egr_dpt_1635_merged_acn_6_noop(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_6_merged_tbl_set_default_action_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_set_default_action_Egress_t_egr_dpt_1581_merged_acn_6_acn_0_opstmt(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_8_merged_tbl_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_8_merged_tbl_set_default_action_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_set_default_action_Egress_t_egr_dpt_1576_merged_acn_8_acn_0_opstmt(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_8_merged_tbl_set_default_action_Egress_t_egr_dpt_1635_merged_acn_6_noop(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_set_default_action_Egress_t_egr_dpt_1635_merged_acn_6_noop(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_0(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_0(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_1(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_2(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_3(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_3(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_4(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_4(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_5(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_5(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_6(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_6(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_7(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_7(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_8(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_8(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_9(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_9(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_10(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_10(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_11(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_11(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_12(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_12(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_13(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_13(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_14(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_14(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_15(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_15(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_16(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_16(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_17(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_17(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_18(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_18(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_19(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_19(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_20(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_20(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_21(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_21(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_22(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_22(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_23(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_23(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_24(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_24(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_25(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_25(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_26(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_26(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_27(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_27(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_28(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_28(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_29(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_29(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_30(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_30(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_31(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_default_action_Ingress_t_igr_aiExp_aggregate_size_31(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_9_merged_tbl_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_9_merged_tbl_set_default_action_Egress_t_egr_dpt_1635_merged_acn_6_noop(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_set_default_action_Egress_t_egr_dpt_1635_merged_acn_6_noop(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_9_merged_tbl_set_default_action_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_set_default_action_Egress_t_egr_dpt_1584_merged_acn_9_acn_0_opstmt_1586_acn_0_opstmt(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_10_merged_tbl_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_10_merged_tbl_set_default_action_Egress_t_egr_dpt_1635_merged_acn_6_noop(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_set_default_action_Egress_t_egr_dpt_1635_merged_acn_6_noop(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Egress_t_egr_dpt_10_merged_tbl_set_default_action_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_set_default_action_Egress_t_egr_dpt_1592_merged_acn_10_acn_0_opstmt(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiSetQueue_set_default_action_NoAction(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_set_default_action_NoAction(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiSetQueue_set_default_action_Ingress_t_igr_aiSetQueueHead(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_set_default_action_Ingress_t_igr_aiSetQueueHead(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiSetQueue_set_default_action_Ingress_t_igr_aiSetQueueTail(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_set_default_action_Ingress_t_igr_aiSetQueueTail(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }

    int32_t Ingress_t_igr_tiSetQueue_set_default_action_Ingress_t_igr_aiDrop(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_entry_hdl_t pd_entry;

        int status = p4_pd_main_Ingress_t_igr_tiSetQueue_set_default_action_Ingress_t_igr_aiDrop(sess_hdl, pd_dev_tgt, &pd_entry);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return pd_entry;
    }


    // INDIRECT ACTION DATA AND MATCH SELECT



    typedef struct _sel_update_cookie_s {
      mainHandler *handler;
      int32_t cookie;
    } _sel_update_cookie_t;






     // Table set/get property

    void IngressParser__PORT_METADATA_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_IngressParser__PORT_METADATA_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void IngressParser__PORT_METADATA_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_IngressParser__PORT_METADATA_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiForward_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiForward_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiForward_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiForward_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiToggleCebinae_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiToggleCebinae_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiToggleCebinae_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiToggleCebinae_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiRotateF_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiRotateF_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiRotateF_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiRotateF_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiRotateRoundTime_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiRotateRoundTime_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiRotateRoundTime_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiRotateRoundTime_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiCalcF_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiCalcF_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiCalcF_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiCalcF_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiCalcSaturated_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiCalcSaturated_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiCalcSaturated_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiReadLastSize_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiReadLastSize_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiReadLastSize_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiReadLastSize_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiDrop_rotate_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiDrop_rotate_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiDrop_rotate_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiDrop_rotate_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiRotateTailq_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiRotateTailq_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiRotateTailq_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiRotateTailq_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void tbl_t_igr_aiGetTailq_st1_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_tbl_t_igr_aiGetTailq_st1_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void tbl_t_igr_aiGetTailq_st1_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_tbl_t_igr_aiGetTailq_st1_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiRotateHeadq_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiRotateHeadq_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiRotateHeadq_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiRotateHeadq_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void tbl_t_igr_aiGetHeadq_st1_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_tbl_t_igr_aiGetHeadq_st1_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void tbl_t_igr_aiGetHeadq_st1_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_tbl_t_igr_aiGetHeadq_st1_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiGetRates_tail_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiGetRates_tail_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiGetRates_tail_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiGetRates_tail_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiGetRates_head_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiGetRates_head_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiGetRates_head_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiGetRates_head_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Egress_t_egr_dpt_2_merged_tbl_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Egress_t_egr_dpt_2_merged_tbl_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Egress_t_egr_dpt_2_merged_tbl_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Egress_t_egr_dpt_2_merged_tbl_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiCalc_log_rate_tail_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiCalc_log_rate_tail_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_tail_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiCalc_log_relative_round_m_dt_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiCalc_log_relative_round_m_dt_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_m_dt_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiCalc_log_relative_round_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiCalc_log_relative_round_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiCalc_log_relative_round_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiCalc_log_rate_head_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiCalc_log_rate_head_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiCalc_log_rate_head_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Egress_t_egr_dpt_1_merged_tbl_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Egress_t_egr_dpt_1_merged_tbl_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Egress_t_egr_dpt_1_merged_tbl_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Egress_t_egr_dpt_1_merged_tbl_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Egress_t_egr_dpt_4_merged_tbl_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Egress_t_egr_dpt_4_merged_tbl_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Egress_t_egr_dpt_4_merged_tbl_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Egress_t_egr_dpt_4_merged_tbl_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Egress_t_egr_dpt_3_merged_tbl_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Egress_t_egr_dpt_3_merged_tbl_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Egress_t_egr_dpt_3_merged_tbl_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Egress_t_egr_dpt_3_merged_tbl_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiExp_relative_round_m_dt_x_rate_tail_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Egress_t_egr_dpt_5_merged_tbl_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Egress_t_egr_dpt_5_merged_tbl_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Egress_t_egr_dpt_5_merged_tbl_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Egress_t_egr_dpt_5_merged_tbl_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Egress_t_egr_dpt_7_merged_tbl_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Egress_t_egr_dpt_7_merged_tbl_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Egress_t_egr_dpt_7_merged_tbl_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Egress_t_egr_dpt_6_merged_tbl_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Egress_t_egr_dpt_6_merged_tbl_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Egress_t_egr_dpt_6_merged_tbl_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Egress_t_egr_dpt_8_merged_tbl_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Egress_t_egr_dpt_8_merged_tbl_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Egress_t_egr_dpt_8_merged_tbl_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiExp_aggregate_size_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiExp_aggregate_size_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiExp_aggregate_size_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Egress_t_egr_dpt_9_merged_tbl_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Egress_t_egr_dpt_9_merged_tbl_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Egress_t_egr_dpt_9_merged_tbl_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Egress_t_egr_dpt_10_merged_tbl_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Egress_t_egr_dpt_10_merged_tbl_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Egress_t_egr_dpt_10_merged_tbl_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }

    void Ingress_t_igr_tiSetQueue_set_property(const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property, const tbl_property_value_t::type value, const int32_t prop_args) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;
      property_value.value = (uint32_t)value;
      property_args.value = (uint32_t)prop_args;
      int status = p4_pd_main_Ingress_t_igr_tiSetQueue_set_property(sess_hdl, dev_id, pipe_property, property_value, property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }
    }

    void Ingress_t_igr_tiSetQueue_get_property(tbl_property_value_args_t& _return, const SessionHandle_t sess_hdl, const int8_t dev_id, const tbl_property_t::type property) {
      p4_pd_tbl_prop_type_t pipe_property = (p4_pd_tbl_prop_type_t)property;
      p4_pd_tbl_prop_value_t property_value;
      p4_pd_tbl_prop_args_t property_args;

      int status = p4_pd_main_Ingress_t_igr_tiSetQueue_get_property(sess_hdl, dev_id, pipe_property, &property_value, &property_args);
      if(status != 0) {
        InvalidTableOperation iop;
        iop.code = status;
        throw iop;
      }

      switch (pipe_property)
      {
        case PD_TABLE_ENTRY_SCOPE:
        {
          if (property_value.value == 0) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_ALL_PIPELINES;
          } else if (property_value.value == 1) {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_SINGLE_PIPELINE;
          } else {
            _return.value = tbl_property_value_t::ENTRY_SCOPE_USER_DEFINED;
          }
          break;
        }
        case PD_TERN_TABLE_ENTRY_PLACEMENT:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_APP_MANAGED;
          } else {
            _return.value = tbl_property_value_t::TERN_ENTRY_PLACEMENT_DRV_MANAGED;
          }
          break;
        }
        case PD_DUPLICATE_ENTRY_CHECK:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_ENABLE;
          } else {
            _return.value = tbl_property_value_t::DUPLICATE_ENTRY_CHECK_DISABLE;
          }
          break;
        }
        case PD_IDLETIME_REPEATED_NOTIFICATION:
        {
          if (property_value.value) {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_ENABLE;
          } else {
            _return.value = tbl_property_value_t::IDLETIME_REPEATED_NOTIFICATION_DISABLE;
          }
          break;
        }
      }
      _return.scope_args = property_args.value;
    }




    void set_learning_timeout(const SessionHandle_t sess_hdl,
                 const int8_t device_id,
                 const int32_t usecs){
        int status = p4_pd_main_set_learning_timeout(sess_hdl, device_id, usecs);
        if(status != 0) {
          InvalidLearnOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void tbl_dbg_counter_type_set(const DevTarget_t &dev_tgt,
                  const std::string& tbl_name,
                  const tbl_dbg_counter_type_t::type t_type) {

        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_tbl_dbg_counter_type_set(pd_dev_tgt, (char*)tbl_name.c_str(),
                (p4_pd_tbl_dbg_counter_type_t)t_type);
        if (status != 0) {
          InvalidDbgOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void tbl_dbg_counter_get(TblCntrInfo_t &info,
                 const DevTarget_t &dev_tgt,
                 const std::string& tbl_name) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        p4_pd_tbl_dbg_counter_type_t pd_type;
        uint32_t value;

        int status = p4_pd_tbl_dbg_counter_get(pd_dev_tgt, (char*)tbl_name.c_str(),
                   &pd_type, &value);
        if (status != 0) {
          InvalidDbgOperation iop;
          iop.code = status;
          throw iop;
        }
        info.type = (tbl_dbg_counter_type_t::type)pd_type;
        info.value = value;
    }

    void tbl_dbg_counter_clear(const DevTarget_t &dev_tgt,
                    const std::string& tbl_name) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_tbl_dbg_counter_clear(pd_dev_tgt, (char*)tbl_name.c_str());
        if (status != 0) {
          InvalidDbgOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void tbl_dbg_counter_type_stage_set(const DevTarget_t &dev_tgt,
                    const int8_t stage,
                    const tbl_dbg_counter_type_t::type t_type) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_tbl_dbg_counter_type_stage_set(pd_dev_tgt, stage,
                (p4_pd_tbl_dbg_counter_type_t)t_type);
        if (status != 0) {
          InvalidDbgOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void tbl_dbg_counter_stage_get(TblDbgStageInfo_t &info,
                 const DevTarget_t &dev_tgt,
                 const int8_t stage) {
        p4_pd_stage_tbl_dbg_counters_t pd_cntrs;
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
        memset(&pd_cntrs, 0, sizeof(pd_cntrs));

        int status = p4_pd_tbl_dbg_counter_stage_get(pd_dev_tgt, stage, &pd_cntrs);
        if (status != 0) {
          InvalidDbgOperation iop;
          iop.code = status;
          throw iop;
        }

        info.num_counters = pd_cntrs.num_counters;
        if (pd_cntrs.num_counters != 0) {
          info.tbl_name.resize(pd_cntrs.num_counters);
          info.type.resize(pd_cntrs.num_counters);
          info.value.resize(pd_cntrs.num_counters);

          for (int i = 0; i < pd_cntrs.num_counters; i++) {
            info.tbl_name[i] = std::string((char *)pd_cntrs.counter[i].tbl_name);
            info.type[i] =
                (tbl_dbg_counter_type_t::type)pd_cntrs.counter[i].cntr_type;
            info.value[i] = pd_cntrs.counter[i].value;
          }
        }

    }

    void tbl_dbg_counter_stage_clear(const DevTarget_t &dev_tgt,
                    const int8_t stage) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int status = p4_pd_tbl_dbg_counter_stage_clear(pd_dev_tgt, stage);
        if (status != 0) {
          InvalidDbgOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    SnapshotHandle_t snapshot_create(const DevTarget_t &dev_tgt,
                             const int8_t start_stage, const int8_t end_stage,
                             const int8_t direction) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        int32_t handle = 0;

	int status = p4_pd_main_snapshot_create(pd_dev_tgt, start_stage, end_stage,
                   (bf_snapshot_dir_t)direction,
                   (pipe_snapshot_hdl_t*)&handle);
        if (status != 0) {
          InvalidSnapshotOperation iop;
          iop.code = status;
          throw iop;
        }
        return handle;
    }
    void snapshot_delete(const SnapshotHandle_t handle) {
	int status = p4_pd_main_snapshot_delete((bf_snapshot_state_t)handle);
        if (status != 0) {
          InvalidSnapshotOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void snapshot_state_set(const SnapshotHandle_t handle, const int32_t state,
               const int32_t usecs) {
	int status = p4_pd_snapshot_state_set((pipe_snapshot_hdl_t)handle,
                          (bf_snapshot_state_t)state, usecs);
        if (status != 0) {
          InvalidSnapshotOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int32_t snapshot_state_get(const SnapshotHandle_t handle, const int16_t pipe) {
        bf_snapshot_state_t state;

	int status = p4_pd_snapshot_state_get((pipe_snapshot_hdl_t)handle,
                   pipe, &state);
        if (status != 0) {
          InvalidSnapshotOperation iop;
          iop.code = status;
          throw iop;
        }
        return state;
    }

    void snapshot_timer_enable(const SnapshotHandle_t handle, const int8_t disable) {
	int status = p4_pd_snapshot_timer_enable((pipe_snapshot_hdl_t)handle, disable);
        if (status != 0) {
          InvalidSnapshotOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    void snapshot_capture_trigger_set(const SnapshotHandle_t handle,
                    const main_snapshot_trig_spec_t& trig_spec,
                    const main_snapshot_trig_spec_t& trig_spec2) {
        p4_pd_main_snapshot_trig_spec_t pd_trig_spec;
        p4_pd_main_snapshot_trig_spec_t pd_trig_mask;
        int dir = (handle >> 1) & 0x1;  // dir is bit 1 of hdl

        memset(&pd_trig_spec, 0, sizeof(pd_trig_spec));
        memset(&pd_trig_mask, 0, sizeof(pd_trig_mask));

        int idx = 0;
        (void)idx;
        switch (dir)
        {
           case 0:
           {
            if (strcmp("Ingress_t_igr_ri_headq_index", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.Ingress_t_igr_ri_headq_index),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.Ingress_t_igr_ri_headq_index),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("Ingress_t_igr_ri_headq_index", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.Ingress_t_igr_ri_headq_index),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.Ingress_t_igr_ri_headq_index),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("Ingress_t_igr_ri_tailq_index", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.Ingress_t_igr_ri_tailq_index),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.Ingress_t_igr_ri_tailq_index),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("Ingress_t_igr_ri_tailq_index", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.Ingress_t_igr_ri_tailq_index),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.Ingress_t_igr_ri_tailq_index),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("hdr_ethernet_dst_addr", (char*)trig_spec.field_name.c_str()) == 0) {
                for (idx = 0; idx < 6; idx++) {
                    pd_trig_spec.u.ig.hdr_ethernet_dst_addr[idx] = (trig_spec.field_value >> (8*(6 -idx -1))) & 0xff;
                    pd_trig_mask.u.ig.hdr_ethernet_dst_addr[idx] = (trig_spec.field_mask >> (8*(6 -idx -1))) & 0xff;
                }
            }
            if (strcmp("hdr_ethernet_dst_addr", (char*)trig_spec2.field_name.c_str()) == 0) {
                for (idx = 0; idx < 6; idx++) {
                    pd_trig_spec.u.ig.hdr_ethernet_dst_addr[idx] = (trig_spec2.field_value >> (8*(6 -idx -1))) & 0xff;
                    pd_trig_mask.u.ig.hdr_ethernet_dst_addr[idx] = (trig_spec2.field_mask >> (8*(6 -idx -1))) & 0xff;
                }
            }
            if (strcmp("hdr_ethernet_ether_type", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ethernet_ether_type),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.hdr_ethernet_ether_type),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("hdr_ethernet_ether_type", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ethernet_ether_type),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.hdr_ethernet_ether_type),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("hdr_ethernet_src_addr", (char*)trig_spec.field_name.c_str()) == 0) {
                for (idx = 0; idx < 6; idx++) {
                    pd_trig_spec.u.ig.hdr_ethernet_src_addr[idx] = (trig_spec.field_value >> (8*(6 -idx -1))) & 0xff;
                    pd_trig_mask.u.ig.hdr_ethernet_src_addr[idx] = (trig_spec.field_mask >> (8*(6 -idx -1))) & 0xff;
                }
            }
            if (strcmp("hdr_ethernet_src_addr", (char*)trig_spec2.field_name.c_str()) == 0) {
                for (idx = 0; idx < 6; idx++) {
                    pd_trig_spec.u.ig.hdr_ethernet_src_addr[idx] = (trig_spec2.field_value >> (8*(6 -idx -1))) & 0xff;
                    pd_trig_mask.u.ig.hdr_ethernet_src_addr[idx] = (trig_spec2.field_mask >> (8*(6 -idx -1))) & 0xff;
                }
            }
            if (strcmp("hdr_ip_dst_addr", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_dst_addr),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_dst_addr),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("hdr_ip_dst_addr", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_dst_addr),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_dst_addr),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("hdr_ip_flags", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_flags),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_flags),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("hdr_ip_flags", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_flags),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_flags),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("hdr_ip_frag_offset", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_frag_offset),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_frag_offset),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("hdr_ip_frag_offset", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_frag_offset),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_frag_offset),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("hdr_ip_hdr_checksum", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_hdr_checksum),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_hdr_checksum),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("hdr_ip_hdr_checksum", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_hdr_checksum),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_hdr_checksum),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("hdr_ip_identification", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_identification),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_identification),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("hdr_ip_identification", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_identification),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_identification),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("hdr_ip_ihl", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_ihl),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_ihl),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("hdr_ip_ihl", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_ihl),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_ihl),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("hdr_ip_protocol", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_protocol),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_protocol),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("hdr_ip_protocol", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_protocol),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_protocol),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("hdr_ip_src_addr", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_src_addr),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_src_addr),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("hdr_ip_src_addr", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_src_addr),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_src_addr),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("hdr_ip_tos", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_tos),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_tos),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("hdr_ip_tos", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_tos),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_tos),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("hdr_ip_total_len", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_total_len),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_total_len),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("hdr_ip_total_len", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_total_len),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_total_len),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("hdr_ip_ttl", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_ttl),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_ttl),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("hdr_ip_ttl", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_ttl),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_ttl),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("hdr_ip_version", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_version),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_version),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("hdr_ip_version", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_ip_version),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.hdr_ip_version),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("hdr_pktgen_packet_id", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_pktgen_packet_id),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.hdr_pktgen_packet_id),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("hdr_pktgen_packet_id", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.hdr_pktgen_packet_id),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.hdr_pktgen_packet_id),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("ig_intr_md_ingress_mac_tstamp", (char*)trig_spec.field_name.c_str()) == 0) {
                for (idx = 0; idx < 6; idx++) {
                    pd_trig_spec.u.ig.ig_intr_md_ingress_mac_tstamp[idx] = (trig_spec.field_value >> (8*(6 -idx -1))) & 0xff;
                    pd_trig_mask.u.ig.ig_intr_md_ingress_mac_tstamp[idx] = (trig_spec.field_mask >> (8*(6 -idx -1))) & 0xff;
                }
            }
            if (strcmp("ig_intr_md_ingress_mac_tstamp", (char*)trig_spec2.field_name.c_str()) == 0) {
                for (idx = 0; idx < 6; idx++) {
                    pd_trig_spec.u.ig.ig_intr_md_ingress_mac_tstamp[idx] = (trig_spec2.field_value >> (8*(6 -idx -1))) & 0xff;
                    pd_trig_mask.u.ig.ig_intr_md_ingress_mac_tstamp[idx] = (trig_spec2.field_mask >> (8*(6 -idx -1))) & 0xff;
                }
            }
            if (strcmp("ig_intr_md_for_dprsr_drop_ctl", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.ig_intr_md_for_dprsr_drop_ctl),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.ig_intr_md_for_dprsr_drop_ctl),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("ig_intr_md_for_dprsr_drop_ctl", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.ig_intr_md_for_dprsr_drop_ctl),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.ig_intr_md_for_dprsr_drop_ctl),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("ig_intr_md_for_tm_qid", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.ig_intr_md_for_tm_qid),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.ig_intr_md_for_tm_qid),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("ig_intr_md_for_tm_qid", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.ig_intr_md_for_tm_qid),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.ig_intr_md_for_tm_qid),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("ig_intr_md_for_tm_ucast_egress_port", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.ig_intr_md_for_tm_ucast_egress_port),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.ig_intr_md_for_tm_ucast_egress_port),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("ig_intr_md_for_tm_ucast_egress_port", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.ig_intr_md_for_tm_ucast_egress_port),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.ig_intr_md_for_tm_ucast_egress_port),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("md_ingress_port", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.md_ingress_port),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.md_ingress_port),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("md_ingress_port", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.md_ingress_port),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.md_ingress_port),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("t_igr_aggregate_size", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_aggregate_size),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_aggregate_size),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_igr_aggregate_size", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_aggregate_size),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_aggregate_size),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_igr_bytes", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_bytes),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_bytes),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_igr_bytes", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_bytes),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_bytes),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_igr_dT_minus_relative_round", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_dT_minus_relative_round),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_dT_minus_relative_round),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_igr_dT_minus_relative_round", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_dT_minus_relative_round),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_dT_minus_relative_round),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_igr_f", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_f),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.t_igr_f),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("t_igr_f", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_f),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.ig.t_igr_f),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("t_igr_headq", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_headq),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_headq),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_igr_headq", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_headq),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_headq),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_igr_log_aggregate_size", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_log_aggregate_size),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.t_igr_log_aggregate_size),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("t_igr_log_aggregate_size", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_log_aggregate_size),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.t_igr_log_aggregate_size),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("t_igr_log_rate_head", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_log_rate_head),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.t_igr_log_rate_head),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("t_igr_log_rate_head", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_log_rate_head),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.t_igr_log_rate_head),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("t_igr_log_rate_tail", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_log_rate_tail),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.t_igr_log_rate_tail),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("t_igr_log_rate_tail", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_log_rate_tail),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.t_igr_log_rate_tail),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("t_igr_log_relative_round", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_log_relative_round),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.t_igr_log_relative_round),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("t_igr_log_relative_round", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_log_relative_round),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.t_igr_log_relative_round),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("t_igr_log_relative_round_m_dt", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_log_relative_round_m_dt),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.t_igr_log_relative_round_m_dt),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("t_igr_log_relative_round_m_dt", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_log_relative_round_m_dt),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.t_igr_log_relative_round_m_dt),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("t_igr_log_relative_round_m_dt_x_rate_tail", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_log_relative_round_m_dt_x_rate_tail),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.t_igr_log_relative_round_m_dt_x_rate_tail),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("t_igr_log_relative_round_m_dt_x_rate_tail", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_log_relative_round_m_dt_x_rate_tail),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.t_igr_log_relative_round_m_dt_x_rate_tail),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("t_igr_past_head", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_past_head),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_past_head),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_igr_past_head", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_past_head),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_past_head),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_igr_past_tail", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_past_tail),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_past_tail),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_igr_past_tail", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_past_tail),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_past_tail),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_igr_pkt_len", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_pkt_len),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_pkt_len),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_igr_pkt_len", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_pkt_len),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_pkt_len),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_igr_rate_head", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_rate_head),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_rate_head),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_igr_rate_head", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_rate_head),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_rate_head),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_igr_rate_head_x_dT", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_rate_head_x_dT),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_rate_head_x_dT),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_igr_rate_head_x_dT", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_rate_head_x_dT),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_rate_head_x_dT),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_igr_rate_tail", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_rate_tail),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_rate_tail),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_igr_rate_tail", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_rate_tail),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_rate_tail),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_igr_rate_tail_x_dT", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_rate_tail_x_dT),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_rate_tail_x_dT),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_igr_rate_tail_x_dT", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_rate_tail_x_dT),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_rate_tail_x_dT),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_igr_relative_round", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_relative_round),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_relative_round),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_igr_relative_round", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_relative_round),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_relative_round),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_igr_relative_round_m_dt", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_relative_round_m_dt),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_relative_round_m_dt),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_igr_relative_round_m_dt", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_relative_round_m_dt),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_relative_round_m_dt),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_igr_relative_round_m_dt_x_rate_tail", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_relative_round_m_dt_x_rate_tail),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_relative_round_m_dt_x_rate_tail),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_igr_relative_round_m_dt_x_rate_tail", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_relative_round_m_dt_x_rate_tail),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_relative_round_m_dt_x_rate_tail),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_igr_saturated", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_saturated),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.t_igr_saturated),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("t_igr_saturated", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_saturated),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.t_igr_saturated),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("t_igr_tailq", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_tailq),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_tailq),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_igr_tailq", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_tailq),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_tailq),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_igr_ts", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_ts),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_ts),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_igr_ts", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_ts),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.ig.t_igr_ts),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_igr_useCebinae", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_useCebinae),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.t_igr_useCebinae),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("t_igr_useCebinae", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.ig.t_igr_useCebinae),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.ig.t_igr_useCebinae),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("hdr_ethernet_valid", (char*)trig_spec.field_name.c_str()) == 0) {
                pd_trig_spec.u.ig.hdr_ethernet_valid =
                        trig_spec.field_value;
                pd_trig_mask.u.ig.hdr_ethernet_valid =
                        trig_spec.field_mask;
            }
            if (strcmp("hdr_ethernet_valid", (char*)trig_spec2.field_name.c_str()) == 0) {
                pd_trig_spec.u.ig.hdr_ethernet_valid =
                        trig_spec2.field_value;
                pd_trig_mask.u.ig.hdr_ethernet_valid =
                        trig_spec2.field_mask;
            }
            if (strcmp("hdr_ip_valid", (char*)trig_spec.field_name.c_str()) == 0) {
                pd_trig_spec.u.ig.hdr_ip_valid =
                        trig_spec.field_value;
                pd_trig_mask.u.ig.hdr_ip_valid =
                        trig_spec.field_mask;
            }
            if (strcmp("hdr_ip_valid", (char*)trig_spec2.field_name.c_str()) == 0) {
                pd_trig_spec.u.ig.hdr_ip_valid =
                        trig_spec2.field_value;
                pd_trig_mask.u.ig.hdr_ip_valid =
                        trig_spec2.field_mask;
            }
            break;
           }
           case 1:
           {
            if (strcmp("eg_intr_md_egress_port", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.eg_intr_md_egress_port),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.eg.eg_intr_md_egress_port),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("eg_intr_md_egress_port", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.eg_intr_md_egress_port),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.eg.eg_intr_md_egress_port),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("hdr_ethernet_dst_addr", (char*)trig_spec.field_name.c_str()) == 0) {
                for (idx = 0; idx < 6; idx++) {
                    pd_trig_spec.u.eg.hdr_ethernet_dst_addr[idx] = (trig_spec.field_value >> (8*(6 -idx -1))) & 0xff;
                    pd_trig_mask.u.eg.hdr_ethernet_dst_addr[idx] = (trig_spec.field_mask >> (8*(6 -idx -1))) & 0xff;
                }
            }
            if (strcmp("hdr_ethernet_dst_addr", (char*)trig_spec2.field_name.c_str()) == 0) {
                for (idx = 0; idx < 6; idx++) {
                    pd_trig_spec.u.eg.hdr_ethernet_dst_addr[idx] = (trig_spec2.field_value >> (8*(6 -idx -1))) & 0xff;
                    pd_trig_mask.u.eg.hdr_ethernet_dst_addr[idx] = (trig_spec2.field_mask >> (8*(6 -idx -1))) & 0xff;
                }
            }
            if (strcmp("hdr_ethernet_ether_type", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ethernet_ether_type),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.eg.hdr_ethernet_ether_type),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("hdr_ethernet_ether_type", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ethernet_ether_type),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.eg.hdr_ethernet_ether_type),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("hdr_ethernet_src_addr", (char*)trig_spec.field_name.c_str()) == 0) {
                for (idx = 0; idx < 6; idx++) {
                    pd_trig_spec.u.eg.hdr_ethernet_src_addr[idx] = (trig_spec.field_value >> (8*(6 -idx -1))) & 0xff;
                    pd_trig_mask.u.eg.hdr_ethernet_src_addr[idx] = (trig_spec.field_mask >> (8*(6 -idx -1))) & 0xff;
                }
            }
            if (strcmp("hdr_ethernet_src_addr", (char*)trig_spec2.field_name.c_str()) == 0) {
                for (idx = 0; idx < 6; idx++) {
                    pd_trig_spec.u.eg.hdr_ethernet_src_addr[idx] = (trig_spec2.field_value >> (8*(6 -idx -1))) & 0xff;
                    pd_trig_mask.u.eg.hdr_ethernet_src_addr[idx] = (trig_spec2.field_mask >> (8*(6 -idx -1))) & 0xff;
                }
            }
            if (strcmp("hdr_ip_dst_addr", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_dst_addr),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_dst_addr),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("hdr_ip_dst_addr", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_dst_addr),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_dst_addr),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("hdr_ip_flags", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_flags),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_flags),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("hdr_ip_flags", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_flags),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_flags),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("hdr_ip_frag_offset", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_frag_offset),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_frag_offset),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("hdr_ip_frag_offset", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_frag_offset),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_frag_offset),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("hdr_ip_hdr_checksum", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_hdr_checksum),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_hdr_checksum),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("hdr_ip_hdr_checksum", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_hdr_checksum),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_hdr_checksum),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("hdr_ip_identification", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_identification),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_identification),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("hdr_ip_identification", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_identification),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_identification),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("hdr_ip_ihl", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_ihl),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_ihl),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("hdr_ip_ihl", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_ihl),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_ihl),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("hdr_ip_protocol", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_protocol),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_protocol),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("hdr_ip_protocol", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_protocol),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_protocol),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("hdr_ip_src_addr", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_src_addr),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_src_addr),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("hdr_ip_src_addr", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_src_addr),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_src_addr),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("hdr_ip_tos", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_tos),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_tos),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("hdr_ip_tos", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_tos),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_tos),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("hdr_ip_total_len", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_total_len),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_total_len),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("hdr_ip_total_len", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_total_len),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_total_len),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("hdr_ip_ttl", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_ttl),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_ttl),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("hdr_ip_ttl", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_ttl),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_ttl),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("hdr_ip_version", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_version),
                            &(trig_spec.field_value), 1);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_version),
                            &(trig_spec.field_mask), 1);
            }
            if (strcmp("hdr_ip_version", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.hdr_ip_version),
                            &(trig_spec2.field_value), 1);
                memcpy(&(pd_trig_mask.u.eg.hdr_ip_version),
                            &(trig_spec2.field_mask), 1);
            }
            if (strcmp("len_0", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.len_0),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.len_0),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("len_0", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.len_0),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.len_0),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("port_0", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.port_0),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.port_0),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("port_0", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.port_0),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.port_0),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_egr_h1", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_h1),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.eg.t_egr_h1),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("t_egr_h1", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_h1),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.eg.t_egr_h1),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("t_egr_h2", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_h2),
                            &(trig_spec.field_value), 2);
                memcpy(&(pd_trig_mask.u.eg.t_egr_h2),
                            &(trig_spec.field_mask), 2);
            }
            if (strcmp("t_egr_h2", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_h2),
                            &(trig_spec2.field_value), 2);
                memcpy(&(pd_trig_mask.u.eg.t_egr_h2),
                            &(trig_spec2.field_mask), 2);
            }
            if (strcmp("t_egr_if_precomp", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_if_precomp),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.t_egr_if_precomp),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_egr_if_precomp", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_if_precomp),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.t_egr_if_precomp),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_egr_if_precomp1547", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_if_precomp1547),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.t_egr_if_precomp1547),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_egr_if_precomp1547", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_if_precomp1547),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.t_egr_if_precomp1547),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_egr_if_precomp1548", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_if_precomp1548),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.t_egr_if_precomp1548),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_egr_if_precomp1548", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_if_precomp1548),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.t_egr_if_precomp1548),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_egr_if_precomp1550", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_if_precomp1550),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.t_egr_if_precomp1550),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_egr_if_precomp1550", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_if_precomp1550),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.t_egr_if_precomp1550),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_egr_stored_dst", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_stored_dst),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.t_egr_stored_dst),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_egr_stored_dst", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_stored_dst),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.t_egr_stored_dst),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_egr_stored_dst2", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_stored_dst2),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.t_egr_stored_dst2),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_egr_stored_dst2", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_stored_dst2),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.t_egr_stored_dst2),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_egr_stored_src", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_stored_src),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.t_egr_stored_src),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_egr_stored_src", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_stored_src),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.t_egr_stored_src),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("t_egr_stored_src2", (char*)trig_spec.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_stored_src2),
                            &(trig_spec.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.t_egr_stored_src2),
                            &(trig_spec.field_mask), 4);
            }
            if (strcmp("t_egr_stored_src2", (char*)trig_spec2.field_name.c_str()) == 0) {
                memcpy(&(pd_trig_spec.u.eg.t_egr_stored_src2),
                            &(trig_spec2.field_value), 4);
                memcpy(&(pd_trig_mask.u.eg.t_egr_stored_src2),
                            &(trig_spec2.field_mask), 4);
            }
            if (strcmp("hdr_ethernet_valid", (char*)trig_spec.field_name.c_str()) == 0) {
                pd_trig_spec.u.eg.hdr_ethernet_valid =
                        trig_spec.field_value;
                pd_trig_mask.u.eg.hdr_ethernet_valid =
                        trig_spec.field_mask;
            }
            if (strcmp("hdr_ethernet_valid", (char*)trig_spec2.field_name.c_str()) == 0) {
                pd_trig_spec.u.eg.hdr_ethernet_valid =
                        trig_spec2.field_value;
                pd_trig_mask.u.eg.hdr_ethernet_valid =
                        trig_spec2.field_mask;
            }
            if (strcmp("hdr_ip_valid", (char*)trig_spec.field_name.c_str()) == 0) {
                pd_trig_spec.u.eg.hdr_ip_valid =
                        trig_spec.field_value;
                pd_trig_mask.u.eg.hdr_ip_valid =
                        trig_spec.field_mask;
            }
            if (strcmp("hdr_ip_valid", (char*)trig_spec2.field_name.c_str()) == 0) {
                pd_trig_spec.u.eg.hdr_ip_valid =
                        trig_spec2.field_value;
                pd_trig_mask.u.eg.hdr_ip_valid =
                        trig_spec2.field_mask;
            }
            break;
           }
           default:
           {
              break;
           }
        }

        int status = p4_pd_main_snapshot_capture_trigger_set((bf_snapshot_state_t)handle,
                &pd_trig_spec, &pd_trig_mask);
        if (status != 0) {
          InvalidSnapshotOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int64_t snapshot_capture_data_get(const SnapshotHandle_t handle, const int16_t pipe,
                    const int16_t stage_id, const std::string& field_name) {
        int64_t field_value = 0;
        p4_pd_main_snapshot_capture_arr_t capture_arr;
        p4_pd_main_snapshot_capture_t *capture;
        bf_snapshot_capture_ctrl_info_arr_t capture_ctrl_arr;
        int32_t num_captures;
        int dir = (handle >> 1) & 0x1;  // dir is bit 1 of hdl
        int idx = 0;
        uint8_t *data_ptr;

        (void)idx;
        (void)data_ptr;

        memset(&capture_arr, 0, sizeof(capture_arr));
        memset(&capture_ctrl_arr, 0, sizeof(capture_ctrl_arr));

        int status = p4_pd_main_snapshot_capture_data_get((bf_snapshot_state_t)handle, pipe,
                &capture_arr, &capture_ctrl_arr, &num_captures);
        if (status != 0) {
          InvalidSnapshotOperation iop;
          iop.code = status;
          throw iop;
        }
        capture = &(capture_arr.captures[0]);
        /* Go to the right stage */
        for (idx = 0; idx<BF_MAX_SNAPSHOT_CAPTURES; idx++) {
            if ((capture_ctrl_arr.ctrl[idx].valid) &&
                (capture_ctrl_arr.ctrl[idx].stage_id == stage_id)) {
                capture = &(capture_arr.captures[idx]);
                break;
            }
        }

        switch (dir)
        {
           case 0:
           {
            if (strcmp("Ingress_t_igr_ri_headq_index", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.Ingress_t_igr_ri_headq_index),
                              (2<=8)?2:8);
            }
            if (strcmp("Ingress_t_igr_ri_tailq_index", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.Ingress_t_igr_ri_tailq_index),
                              (2<=8)?2:8);
            }
            if (strcmp("hdr_ethernet_dst_addr", (char*)field_name.c_str()) == 0) {
                for (idx = 0; idx < 6; idx++) {
                    field_value |= ((int64_t)capture->u.ig.hdr_ethernet_dst_addr[idx]) << (8*(6 -idx -1));
                }
            }
            if (strcmp("hdr_ethernet_ether_type", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.hdr_ethernet_ether_type),
                              (2<=8)?2:8);
            }
            if (strcmp("hdr_ethernet_src_addr", (char*)field_name.c_str()) == 0) {
                for (idx = 0; idx < 6; idx++) {
                    field_value |= ((int64_t)capture->u.ig.hdr_ethernet_src_addr[idx]) << (8*(6 -idx -1));
                }
            }
            if (strcmp("hdr_ip_dst_addr", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.hdr_ip_dst_addr),
                              (4<=8)?4:8);
            }
            if (strcmp("hdr_ip_flags", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.hdr_ip_flags),
                              (1<=8)?1:8);
            }
            if (strcmp("hdr_ip_frag_offset", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.hdr_ip_frag_offset),
                              (2<=8)?2:8);
            }
            if (strcmp("hdr_ip_hdr_checksum", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.hdr_ip_hdr_checksum),
                              (2<=8)?2:8);
            }
            if (strcmp("hdr_ip_identification", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.hdr_ip_identification),
                              (2<=8)?2:8);
            }
            if (strcmp("hdr_ip_ihl", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.hdr_ip_ihl),
                              (1<=8)?1:8);
            }
            if (strcmp("hdr_ip_protocol", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.hdr_ip_protocol),
                              (1<=8)?1:8);
            }
            if (strcmp("hdr_ip_src_addr", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.hdr_ip_src_addr),
                              (4<=8)?4:8);
            }
            if (strcmp("hdr_ip_tos", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.hdr_ip_tos),
                              (1<=8)?1:8);
            }
            if (strcmp("hdr_ip_total_len", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.hdr_ip_total_len),
                              (2<=8)?2:8);
            }
            if (strcmp("hdr_ip_ttl", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.hdr_ip_ttl),
                              (1<=8)?1:8);
            }
            if (strcmp("hdr_ip_version", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.hdr_ip_version),
                              (1<=8)?1:8);
            }
            if (strcmp("hdr_pktgen_packet_id", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.hdr_pktgen_packet_id),
                              (2<=8)?2:8);
            }
            if (strcmp("ig_intr_md_ingress_mac_tstamp", (char*)field_name.c_str()) == 0) {
                for (idx = 0; idx < 6; idx++) {
                    field_value |= ((int64_t)capture->u.ig.ig_intr_md_ingress_mac_tstamp[idx]) << (8*(6 -idx -1));
                }
            }
            if (strcmp("ig_intr_md_for_dprsr_drop_ctl", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.ig_intr_md_for_dprsr_drop_ctl),
                              (1<=8)?1:8);
            }
            if (strcmp("ig_intr_md_for_tm_qid", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.ig_intr_md_for_tm_qid),
                              (1<=8)?1:8);
            }
            if (strcmp("ig_intr_md_for_tm_ucast_egress_port", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.ig_intr_md_for_tm_ucast_egress_port),
                              (2<=8)?2:8);
            }
            if (strcmp("md_ingress_port", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.md_ingress_port),
                              (2<=8)?2:8);
            }
            if (strcmp("t_igr_aggregate_size", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_aggregate_size),
                              (4<=8)?4:8);
            }
            if (strcmp("t_igr_bytes", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_bytes),
                              (4<=8)?4:8);
            }
            if (strcmp("t_igr_dT_minus_relative_round", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_dT_minus_relative_round),
                              (4<=8)?4:8);
            }
            if (strcmp("t_igr_f", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_f),
                              (2<=8)?2:8);
            }
            if (strcmp("t_igr_headq", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_headq),
                              (4<=8)?4:8);
            }
            if (strcmp("t_igr_log_aggregate_size", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_log_aggregate_size),
                              (1<=8)?1:8);
            }
            if (strcmp("t_igr_log_rate_head", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_log_rate_head),
                              (1<=8)?1:8);
            }
            if (strcmp("t_igr_log_rate_tail", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_log_rate_tail),
                              (1<=8)?1:8);
            }
            if (strcmp("t_igr_log_relative_round", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_log_relative_round),
                              (1<=8)?1:8);
            }
            if (strcmp("t_igr_log_relative_round_m_dt", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_log_relative_round_m_dt),
                              (1<=8)?1:8);
            }
            if (strcmp("t_igr_log_relative_round_m_dt_x_rate_tail", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_log_relative_round_m_dt_x_rate_tail),
                              (1<=8)?1:8);
            }
            if (strcmp("t_igr_past_head", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_past_head),
                              (4<=8)?4:8);
            }
            if (strcmp("t_igr_past_tail", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_past_tail),
                              (4<=8)?4:8);
            }
            if (strcmp("t_igr_pkt_len", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_pkt_len),
                              (4<=8)?4:8);
            }
            if (strcmp("t_igr_rate_head", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_rate_head),
                              (4<=8)?4:8);
            }
            if (strcmp("t_igr_rate_head_x_dT", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_rate_head_x_dT),
                              (4<=8)?4:8);
            }
            if (strcmp("t_igr_rate_tail", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_rate_tail),
                              (4<=8)?4:8);
            }
            if (strcmp("t_igr_rate_tail_x_dT", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_rate_tail_x_dT),
                              (4<=8)?4:8);
            }
            if (strcmp("t_igr_relative_round", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_relative_round),
                              (4<=8)?4:8);
            }
            if (strcmp("t_igr_relative_round_m_dt", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_relative_round_m_dt),
                              (4<=8)?4:8);
            }
            if (strcmp("t_igr_relative_round_m_dt_x_rate_tail", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_relative_round_m_dt_x_rate_tail),
                              (4<=8)?4:8);
            }
            if (strcmp("t_igr_saturated", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_saturated),
                              (1<=8)?1:8);
            }
            if (strcmp("t_igr_tailq", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_tailq),
                              (4<=8)?4:8);
            }
            if (strcmp("t_igr_ts", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_ts),
                              (4<=8)?4:8);
            }
            if (strcmp("t_igr_useCebinae", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.ig.t_igr_useCebinae),
                              (1<=8)?1:8);
            }
            if (strcmp("hdr_ethernet_valid", (char*)field_name.c_str()) == 0) {
                field_value = capture->u.ig.hdr_ethernet_valid;
            }
            if (strcmp("hdr_ip_valid", (char*)field_name.c_str()) == 0) {
                field_value = capture->u.ig.hdr_ip_valid;
            }
              break;
           }
           case 1:
           {
            if (strcmp("eg_intr_md_egress_port", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.eg_intr_md_egress_port),
                              (2<=8)?2:8);
            }
            if (strcmp("hdr_ethernet_dst_addr", (char*)field_name.c_str()) == 0) {
                for (idx = 0; idx < 6; idx++) {
                    field_value |= ((int64_t)capture->u.eg.hdr_ethernet_dst_addr[idx]) << (8*(6 -idx -1));
                }
            }
            if (strcmp("hdr_ethernet_ether_type", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.hdr_ethernet_ether_type),
                              (2<=8)?2:8);
            }
            if (strcmp("hdr_ethernet_src_addr", (char*)field_name.c_str()) == 0) {
                for (idx = 0; idx < 6; idx++) {
                    field_value |= ((int64_t)capture->u.eg.hdr_ethernet_src_addr[idx]) << (8*(6 -idx -1));
                }
            }
            if (strcmp("hdr_ip_dst_addr", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.hdr_ip_dst_addr),
                              (4<=8)?4:8);
            }
            if (strcmp("hdr_ip_flags", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.hdr_ip_flags),
                              (1<=8)?1:8);
            }
            if (strcmp("hdr_ip_frag_offset", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.hdr_ip_frag_offset),
                              (2<=8)?2:8);
            }
            if (strcmp("hdr_ip_hdr_checksum", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.hdr_ip_hdr_checksum),
                              (2<=8)?2:8);
            }
            if (strcmp("hdr_ip_identification", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.hdr_ip_identification),
                              (2<=8)?2:8);
            }
            if (strcmp("hdr_ip_ihl", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.hdr_ip_ihl),
                              (1<=8)?1:8);
            }
            if (strcmp("hdr_ip_protocol", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.hdr_ip_protocol),
                              (1<=8)?1:8);
            }
            if (strcmp("hdr_ip_src_addr", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.hdr_ip_src_addr),
                              (4<=8)?4:8);
            }
            if (strcmp("hdr_ip_tos", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.hdr_ip_tos),
                              (1<=8)?1:8);
            }
            if (strcmp("hdr_ip_total_len", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.hdr_ip_total_len),
                              (2<=8)?2:8);
            }
            if (strcmp("hdr_ip_ttl", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.hdr_ip_ttl),
                              (1<=8)?1:8);
            }
            if (strcmp("hdr_ip_version", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.hdr_ip_version),
                              (1<=8)?1:8);
            }
            if (strcmp("len_0", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.len_0),
                              (4<=8)?4:8);
            }
            if (strcmp("port_0", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.port_0),
                              (4<=8)?4:8);
            }
            if (strcmp("t_egr_h1", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.t_egr_h1),
                              (2<=8)?2:8);
            }
            if (strcmp("t_egr_h2", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.t_egr_h2),
                              (2<=8)?2:8);
            }
            if (strcmp("t_egr_if_precomp", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.t_egr_if_precomp),
                              (4<=8)?4:8);
            }
            if (strcmp("t_egr_if_precomp1547", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.t_egr_if_precomp1547),
                              (4<=8)?4:8);
            }
            if (strcmp("t_egr_if_precomp1548", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.t_egr_if_precomp1548),
                              (4<=8)?4:8);
            }
            if (strcmp("t_egr_if_precomp1550", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.t_egr_if_precomp1550),
                              (4<=8)?4:8);
            }
            if (strcmp("t_egr_stored_dst", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.t_egr_stored_dst),
                              (4<=8)?4:8);
            }
            if (strcmp("t_egr_stored_dst2", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.t_egr_stored_dst2),
                              (4<=8)?4:8);
            }
            if (strcmp("t_egr_stored_src", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.t_egr_stored_src),
                              (4<=8)?4:8);
            }
            if (strcmp("t_egr_stored_src2", (char*)field_name.c_str()) == 0) {
                memcpy(&field_value, &(capture->u.eg.t_egr_stored_src2),
                              (4<=8)?4:8);
            }
            if (strcmp("hdr_ethernet_valid", (char*)field_name.c_str()) == 0) {
                field_value = capture->u.eg.hdr_ethernet_valid;
            }
            if (strcmp("hdr_ip_valid", (char*)field_name.c_str()) == 0) {
                field_value = capture->u.eg.hdr_ip_valid;
            }
              break;
           }
           default:
           {
              break;
           }
        }

        return field_value;
    }

    void snapshot_capture_tbl_data_get(main_snapshot_tbl_data_t& _return, const SnapshotHandle_t handle, const int16_t pipe, const std::string& table_name) {
      p4_pd_main_snapshot_capture_arr_t capture_arr;
      bf_snapshot_capture_ctrl_info_arr_t capture_ctrl_arr;
      int32_t num_captures = 0;

      memset(&capture_arr, 0, sizeof(capture_arr));
      memset(&capture_ctrl_arr, 0, sizeof(capture_ctrl_arr));

      int status = p4_pd_main_snapshot_capture_data_get((bf_snapshot_state_t)handle, pipe,
              &capture_arr, &capture_ctrl_arr, &num_captures);
      if (status != 0) {
        InvalidSnapshotOperation iop;
        iop.code = status;
        throw iop;
      }
      /* Check all stages. */
      for (int idx = 0; idx<BF_MAX_SNAPSHOT_CAPTURES; idx++) {
        bf_snapshot_capture_ctrl_info_t *ctrl = &capture_ctrl_arr.ctrl[idx];
        if (!ctrl->valid) continue;
        for (int lt=0; lt<BF_MAX_LOG_TBLS; ++lt) {
          bf_snapshot_tables_info_t *tbl = &ctrl->tables_info[lt];
          if (!strcmp((char*)table_name.c_str(), tbl->table_name)) {
            _return.hit = tbl->table_hit;
            _return.inhibited = tbl->table_inhibited;
            _return.executed = tbl->table_executed;
            _return.hit_entry_handle = tbl->hit_entry_handle;
            if (_return.hit || _return.inhibited) return;
          }
        }
      }
    }

    void snapshot_capture_trigger_fields_clr(const SnapshotHandle_t handle) {

	int status = p4_pd_snapshot_capture_trigger_fields_clr((pipe_snapshot_hdl_t)handle);
        if (status != 0) {
          InvalidSnapshotOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    bool snapshot_field_in_scope(const DevTarget_t &dev_tgt,
                 const int8_t stage, const int8_t direction,
                 const std::string& field_name) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        bool exists = false;

	int status = p4_pd_snapshot_field_in_scope(pd_dev_tgt, stage,
                   (bf_snapshot_dir_t)direction,
                   (char*)field_name.c_str(), &exists);
        if (status != 0) {
          InvalidSnapshotOperation iop;
          iop.code = status;
          throw iop;
        }
        return exists;
    }

    bool snapshot_trigger_field_in_scope(const DevTarget_t &dev_tgt,
                 const int8_t stage, const int8_t direction,
                 const std::string& field_name) {
        p4_pd_dev_target_t pd_dev_tgt;
        pd_dev_tgt.device_id = dev_tgt.dev_id;
        pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

        bool exists = false;

	int status = p4_pd_snapshot_trigger_field_in_scope(pd_dev_tgt, stage,
                   (bf_snapshot_dir_t)direction,
                   (char*)field_name.c_str(), &exists);
        if (status != 0) {
          InvalidSnapshotOperation iop;
          iop.code = status;
          throw iop;
        }
        return exists;
    }

  // COUNTERS


  // REGISTERS
  void register_hw_sync_Ingress_t_igr_ri_headq(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    PipeMgrSimpleCb cb_data;
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
    int status = p4_pd_main_register_hw_sync_Ingress_t_igr_ri_headq(sess_hdl, pd_dev_tgt, PipeMgrSimpleCb::cb_fn, (void *) &cb_data);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
    cb_data.wait(); // blocking, until callback happens
  }

  void register_read_Ingress_t_igr_ri_headq(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t values[4];
      int value_count = 0;
      int status = p4_pd_main_register_read_Ingress_t_igr_ri_headq(sess_hdl, pd_dev_tgt, index, pd_flags, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Ingress_t_igr_ri_headq_spec_pd_to_thrift(values[i]));
      }
  }

  void register_write_Ingress_t_igr_ri_headq(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t register_value) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      auto value = register_Ingress_t_igr_ri_headq_spec_thrift_to_pd(register_value);

      int status = p4_pd_main_register_write_Ingress_t_igr_ri_headq(sess_hdl, pd_dev_tgt, index, &value);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
  }

  void register_reset_all_Ingress_t_igr_ri_headq(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_reset_all_Ingress_t_igr_ri_headq(sess_hdl, pd_dev_tgt);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_reset_Ingress_t_igr_ri_headq(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_range_reset_Ingress_t_igr_ri_headq(sess_hdl, pd_dev_tgt, index, count);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_write_all_Ingress_t_igr_ri_headq(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t register_value) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    auto value = register_Ingress_t_igr_ri_headq_spec_thrift_to_pd(register_value);

    int status = p4_pd_main_register_write_all_Ingress_t_igr_ri_headq(sess_hdl, pd_dev_tgt, &value);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_read_Ingress_t_igr_ri_headq(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t *values = new uint32_t[4*count];
      int value_count = 0;
      int num_actually_read = 0;
      int status = p4_pd_main_register_range_read_Ingress_t_igr_ri_headq(sess_hdl, pd_dev_tgt, index, count, pd_flags, &num_actually_read, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Ingress_t_igr_ri_headq_spec_pd_to_thrift(values[i]));
      }
      delete[] values;
  }

  void register_hw_sync_Egress_t_egr_flow_ct2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    PipeMgrSimpleCb cb_data;
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
    int status = p4_pd_main_register_hw_sync_Egress_t_egr_flow_ct2(sess_hdl, pd_dev_tgt, PipeMgrSimpleCb::cb_fn, (void *) &cb_data);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
    cb_data.wait(); // blocking, until callback happens
  }

  void register_read_Egress_t_egr_flow_ct2(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t values[4];
      int value_count = 0;
      int status = p4_pd_main_register_read_Egress_t_egr_flow_ct2(sess_hdl, pd_dev_tgt, index, pd_flags, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Egress_t_egr_flow_ct2_spec_pd_to_thrift(values[i]));
      }
  }

  void register_write_Egress_t_egr_flow_ct2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t register_value) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      auto value = register_Egress_t_egr_flow_ct2_spec_thrift_to_pd(register_value);

      int status = p4_pd_main_register_write_Egress_t_egr_flow_ct2(sess_hdl, pd_dev_tgt, index, &value);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
  }

  void register_reset_all_Egress_t_egr_flow_ct2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_reset_all_Egress_t_egr_flow_ct2(sess_hdl, pd_dev_tgt);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_reset_Egress_t_egr_flow_ct2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_range_reset_Egress_t_egr_flow_ct2(sess_hdl, pd_dev_tgt, index, count);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_write_all_Egress_t_egr_flow_ct2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t register_value) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    auto value = register_Egress_t_egr_flow_ct2_spec_thrift_to_pd(register_value);

    int status = p4_pd_main_register_write_all_Egress_t_egr_flow_ct2(sess_hdl, pd_dev_tgt, &value);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_read_Egress_t_egr_flow_ct2(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t *values = new uint32_t[4*count];
      int value_count = 0;
      int num_actually_read = 0;
      int status = p4_pd_main_register_range_read_Egress_t_egr_flow_ct2(sess_hdl, pd_dev_tgt, index, count, pd_flags, &num_actually_read, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Egress_t_egr_flow_ct2_spec_pd_to_thrift(values[i]));
      }
      delete[] values;
  }

  void register_hw_sync_Ingress_t_igr_riBytes(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    PipeMgrSimpleCb cb_data;
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
    int status = p4_pd_main_register_hw_sync_Ingress_t_igr_riBytes(sess_hdl, pd_dev_tgt, PipeMgrSimpleCb::cb_fn, (void *) &cb_data);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
    cb_data.wait(); // blocking, until callback happens
  }

  void register_read_Ingress_t_igr_riBytes(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t values[4];
      int value_count = 0;
      int status = p4_pd_main_register_read_Ingress_t_igr_riBytes(sess_hdl, pd_dev_tgt, index, pd_flags, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Ingress_t_igr_riBytes_spec_pd_to_thrift(values[i]));
      }
  }

  void register_write_Ingress_t_igr_riBytes(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t register_value) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      auto value = register_Ingress_t_igr_riBytes_spec_thrift_to_pd(register_value);

      int status = p4_pd_main_register_write_Ingress_t_igr_riBytes(sess_hdl, pd_dev_tgt, index, &value);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
  }

  void register_reset_all_Ingress_t_igr_riBytes(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_reset_all_Ingress_t_igr_riBytes(sess_hdl, pd_dev_tgt);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_reset_Ingress_t_igr_riBytes(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_range_reset_Ingress_t_igr_riBytes(sess_hdl, pd_dev_tgt, index, count);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_write_all_Ingress_t_igr_riBytes(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t register_value) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    auto value = register_Ingress_t_igr_riBytes_spec_thrift_to_pd(register_value);

    int status = p4_pd_main_register_write_all_Ingress_t_igr_riBytes(sess_hdl, pd_dev_tgt, &value);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_read_Ingress_t_igr_riBytes(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t *values = new uint32_t[4*count];
      int value_count = 0;
      int num_actually_read = 0;
      int status = p4_pd_main_register_range_read_Ingress_t_igr_riBytes(sess_hdl, pd_dev_tgt, index, count, pd_flags, &num_actually_read, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Ingress_t_igr_riBytes_spec_pd_to_thrift(values[i]));
      }
      delete[] values;
  }

  void register_hw_sync_Ingress_t_igr_ri_bytes(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    PipeMgrSimpleCb cb_data;
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
    int status = p4_pd_main_register_hw_sync_Ingress_t_igr_ri_bytes(sess_hdl, pd_dev_tgt, PipeMgrSimpleCb::cb_fn, (void *) &cb_data);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
    cb_data.wait(); // blocking, until callback happens
  }

  void register_read_Ingress_t_igr_ri_bytes(std::vector<main_Ingress_t_igr_ri_bytes_value_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      p4_pd_main_Ingress_t_igr_ri_bytes_value_t values[4];
      int value_count = 0;
      int status = p4_pd_main_register_read_Ingress_t_igr_ri_bytes(sess_hdl, pd_dev_tgt, index, pd_flags, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Ingress_t_igr_ri_bytes_spec_pd_to_thrift(values[i]));
      }
  }

  void register_write_Ingress_t_igr_ri_bytes(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const main_Ingress_t_igr_ri_bytes_value_t & register_value) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      auto value = register_Ingress_t_igr_ri_bytes_spec_thrift_to_pd(register_value);

      int status = p4_pd_main_register_write_Ingress_t_igr_ri_bytes(sess_hdl, pd_dev_tgt, index, &value);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
  }

  void register_reset_all_Ingress_t_igr_ri_bytes(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_reset_all_Ingress_t_igr_ri_bytes(sess_hdl, pd_dev_tgt);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_reset_Ingress_t_igr_ri_bytes(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_range_reset_Ingress_t_igr_ri_bytes(sess_hdl, pd_dev_tgt, index, count);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_write_all_Ingress_t_igr_ri_bytes(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const main_Ingress_t_igr_ri_bytes_value_t & register_value) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    auto value = register_Ingress_t_igr_ri_bytes_spec_thrift_to_pd(register_value);

    int status = p4_pd_main_register_write_all_Ingress_t_igr_ri_bytes(sess_hdl, pd_dev_tgt, &value);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_read_Ingress_t_igr_ri_bytes(std::vector<main_Ingress_t_igr_ri_bytes_value_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      p4_pd_main_Ingress_t_igr_ri_bytes_value_t *values = new p4_pd_main_Ingress_t_igr_ri_bytes_value_t[4*count];
      int value_count = 0;
      int num_actually_read = 0;
      int status = p4_pd_main_register_range_read_Ingress_t_igr_ri_bytes(sess_hdl, pd_dev_tgt, index, count, pd_flags, &num_actually_read, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Ingress_t_igr_ri_bytes_spec_pd_to_thrift(values[i]));
      }
      delete[] values;
  }

  void register_hw_sync_Egress_t_egr_flow_ct1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    PipeMgrSimpleCb cb_data;
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
    int status = p4_pd_main_register_hw_sync_Egress_t_egr_flow_ct1(sess_hdl, pd_dev_tgt, PipeMgrSimpleCb::cb_fn, (void *) &cb_data);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
    cb_data.wait(); // blocking, until callback happens
  }

  void register_read_Egress_t_egr_flow_ct1(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t values[4];
      int value_count = 0;
      int status = p4_pd_main_register_read_Egress_t_egr_flow_ct1(sess_hdl, pd_dev_tgt, index, pd_flags, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Egress_t_egr_flow_ct1_spec_pd_to_thrift(values[i]));
      }
  }

  void register_write_Egress_t_egr_flow_ct1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t register_value) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      auto value = register_Egress_t_egr_flow_ct1_spec_thrift_to_pd(register_value);

      int status = p4_pd_main_register_write_Egress_t_egr_flow_ct1(sess_hdl, pd_dev_tgt, index, &value);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
  }

  void register_reset_all_Egress_t_egr_flow_ct1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_reset_all_Egress_t_egr_flow_ct1(sess_hdl, pd_dev_tgt);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_reset_Egress_t_egr_flow_ct1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_range_reset_Egress_t_egr_flow_ct1(sess_hdl, pd_dev_tgt, index, count);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_write_all_Egress_t_egr_flow_ct1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t register_value) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    auto value = register_Egress_t_egr_flow_ct1_spec_thrift_to_pd(register_value);

    int status = p4_pd_main_register_write_all_Egress_t_egr_flow_ct1(sess_hdl, pd_dev_tgt, &value);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_read_Egress_t_egr_flow_ct1(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t *values = new uint32_t[4*count];
      int value_count = 0;
      int num_actually_read = 0;
      int status = p4_pd_main_register_range_read_Egress_t_egr_flow_ct1(sess_hdl, pd_dev_tgt, index, count, pd_flags, &num_actually_read, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Egress_t_egr_flow_ct1_spec_pd_to_thrift(values[i]));
      }
      delete[] values;
  }

  void register_hw_sync_Ingress_t_igr_fCount(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    PipeMgrSimpleCb cb_data;
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
    int status = p4_pd_main_register_hw_sync_Ingress_t_igr_fCount(sess_hdl, pd_dev_tgt, PipeMgrSimpleCb::cb_fn, (void *) &cb_data);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
    cb_data.wait(); // blocking, until callback happens
  }

  void register_read_Ingress_t_igr_fCount(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t values[4];
      int value_count = 0;
      int status = p4_pd_main_register_read_Ingress_t_igr_fCount(sess_hdl, pd_dev_tgt, index, pd_flags, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Ingress_t_igr_fCount_spec_pd_to_thrift(values[i]));
      }
  }

  void register_write_Ingress_t_igr_fCount(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t register_value) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      auto value = register_Ingress_t_igr_fCount_spec_thrift_to_pd(register_value);

      int status = p4_pd_main_register_write_Ingress_t_igr_fCount(sess_hdl, pd_dev_tgt, index, &value);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
  }

  void register_reset_all_Ingress_t_igr_fCount(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_reset_all_Ingress_t_igr_fCount(sess_hdl, pd_dev_tgt);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_reset_Ingress_t_igr_fCount(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_range_reset_Ingress_t_igr_fCount(sess_hdl, pd_dev_tgt, index, count);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_write_all_Ingress_t_igr_fCount(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t register_value) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    auto value = register_Ingress_t_igr_fCount_spec_thrift_to_pd(register_value);

    int status = p4_pd_main_register_write_all_Ingress_t_igr_fCount(sess_hdl, pd_dev_tgt, &value);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_read_Ingress_t_igr_fCount(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t *values = new uint32_t[4*count];
      int value_count = 0;
      int num_actually_read = 0;
      int status = p4_pd_main_register_range_read_Ingress_t_igr_fCount(sess_hdl, pd_dev_tgt, index, count, pd_flags, &num_actually_read, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Ingress_t_igr_fCount_spec_pd_to_thrift(values[i]));
      }
      delete[] values;
  }

  void register_hw_sync_Ingress_t_igr_queueCounter(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    PipeMgrSimpleCb cb_data;
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
    int status = p4_pd_main_register_hw_sync_Ingress_t_igr_queueCounter(sess_hdl, pd_dev_tgt, PipeMgrSimpleCb::cb_fn, (void *) &cb_data);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
    cb_data.wait(); // blocking, until callback happens
  }

  void register_read_Ingress_t_igr_queueCounter(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t values[4];
      int value_count = 0;
      int status = p4_pd_main_register_read_Ingress_t_igr_queueCounter(sess_hdl, pd_dev_tgt, index, pd_flags, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Ingress_t_igr_queueCounter_spec_pd_to_thrift(values[i]));
      }
  }

  void register_write_Ingress_t_igr_queueCounter(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t register_value) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      auto value = register_Ingress_t_igr_queueCounter_spec_thrift_to_pd(register_value);

      int status = p4_pd_main_register_write_Ingress_t_igr_queueCounter(sess_hdl, pd_dev_tgt, index, &value);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
  }

  void register_reset_all_Ingress_t_igr_queueCounter(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_reset_all_Ingress_t_igr_queueCounter(sess_hdl, pd_dev_tgt);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_reset_Ingress_t_igr_queueCounter(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_range_reset_Ingress_t_igr_queueCounter(sess_hdl, pd_dev_tgt, index, count);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_write_all_Ingress_t_igr_queueCounter(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t register_value) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    auto value = register_Ingress_t_igr_queueCounter_spec_thrift_to_pd(register_value);

    int status = p4_pd_main_register_write_all_Ingress_t_igr_queueCounter(sess_hdl, pd_dev_tgt, &value);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_read_Ingress_t_igr_queueCounter(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t *values = new uint32_t[4*count];
      int value_count = 0;
      int num_actually_read = 0;
      int status = p4_pd_main_register_range_read_Ingress_t_igr_queueCounter(sess_hdl, pd_dev_tgt, index, count, pd_flags, &num_actually_read, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Ingress_t_igr_queueCounter_spec_pd_to_thrift(values[i]));
      }
      delete[] values;
  }

  void register_hw_sync_Ingress_t_igr_ri_base_round_time(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    PipeMgrSimpleCb cb_data;
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
    int status = p4_pd_main_register_hw_sync_Ingress_t_igr_ri_base_round_time(sess_hdl, pd_dev_tgt, PipeMgrSimpleCb::cb_fn, (void *) &cb_data);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
    cb_data.wait(); // blocking, until callback happens
  }

  void register_read_Ingress_t_igr_ri_base_round_time(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t values[4];
      int value_count = 0;
      int status = p4_pd_main_register_read_Ingress_t_igr_ri_base_round_time(sess_hdl, pd_dev_tgt, index, pd_flags, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Ingress_t_igr_ri_base_round_time_spec_pd_to_thrift(values[i]));
      }
  }

  void register_write_Ingress_t_igr_ri_base_round_time(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t register_value) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      auto value = register_Ingress_t_igr_ri_base_round_time_spec_thrift_to_pd(register_value);

      int status = p4_pd_main_register_write_Ingress_t_igr_ri_base_round_time(sess_hdl, pd_dev_tgt, index, &value);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
  }

  void register_reset_all_Ingress_t_igr_ri_base_round_time(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_reset_all_Ingress_t_igr_ri_base_round_time(sess_hdl, pd_dev_tgt);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_reset_Ingress_t_igr_ri_base_round_time(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_range_reset_Ingress_t_igr_ri_base_round_time(sess_hdl, pd_dev_tgt, index, count);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_write_all_Ingress_t_igr_ri_base_round_time(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t register_value) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    auto value = register_Ingress_t_igr_ri_base_round_time_spec_thrift_to_pd(register_value);

    int status = p4_pd_main_register_write_all_Ingress_t_igr_ri_base_round_time(sess_hdl, pd_dev_tgt, &value);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_read_Ingress_t_igr_ri_base_round_time(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t *values = new uint32_t[4*count];
      int value_count = 0;
      int num_actually_read = 0;
      int status = p4_pd_main_register_range_read_Ingress_t_igr_ri_base_round_time(sess_hdl, pd_dev_tgt, index, count, pd_flags, &num_actually_read, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Ingress_t_igr_ri_base_round_time_spec_pd_to_thrift(values[i]));
      }
      delete[] values;
  }

  void register_hw_sync_Egress_t_egr_port_cts(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    PipeMgrSimpleCb cb_data;
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
    int status = p4_pd_main_register_hw_sync_Egress_t_egr_port_cts(sess_hdl, pd_dev_tgt, PipeMgrSimpleCb::cb_fn, (void *) &cb_data);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
    cb_data.wait(); // blocking, until callback happens
  }

  void register_read_Egress_t_egr_port_cts(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t values[4];
      int value_count = 0;
      int status = p4_pd_main_register_read_Egress_t_egr_port_cts(sess_hdl, pd_dev_tgt, index, pd_flags, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Egress_t_egr_port_cts_spec_pd_to_thrift(values[i]));
      }
  }

  void register_write_Egress_t_egr_port_cts(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t register_value) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      auto value = register_Egress_t_egr_port_cts_spec_thrift_to_pd(register_value);

      int status = p4_pd_main_register_write_Egress_t_egr_port_cts(sess_hdl, pd_dev_tgt, index, &value);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
  }

  void register_reset_all_Egress_t_egr_port_cts(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_reset_all_Egress_t_egr_port_cts(sess_hdl, pd_dev_tgt);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_reset_Egress_t_egr_port_cts(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_range_reset_Egress_t_egr_port_cts(sess_hdl, pd_dev_tgt, index, count);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_write_all_Egress_t_egr_port_cts(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t register_value) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    auto value = register_Egress_t_egr_port_cts_spec_thrift_to_pd(register_value);

    int status = p4_pd_main_register_write_all_Egress_t_egr_port_cts(sess_hdl, pd_dev_tgt, &value);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_read_Egress_t_egr_port_cts(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t *values = new uint32_t[4*count];
      int value_count = 0;
      int num_actually_read = 0;
      int status = p4_pd_main_register_range_read_Egress_t_egr_port_cts(sess_hdl, pd_dev_tgt, index, count, pd_flags, &num_actually_read, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Egress_t_egr_port_cts_spec_pd_to_thrift(values[i]));
      }
      delete[] values;
  }

  void register_hw_sync_Egress_t_egr_flow_src1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    PipeMgrSimpleCb cb_data;
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
    int status = p4_pd_main_register_hw_sync_Egress_t_egr_flow_src1(sess_hdl, pd_dev_tgt, PipeMgrSimpleCb::cb_fn, (void *) &cb_data);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
    cb_data.wait(); // blocking, until callback happens
  }

  void register_read_Egress_t_egr_flow_src1(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t values[4];
      int value_count = 0;
      int status = p4_pd_main_register_read_Egress_t_egr_flow_src1(sess_hdl, pd_dev_tgt, index, pd_flags, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Egress_t_egr_flow_src1_spec_pd_to_thrift(values[i]));
      }
  }

  void register_write_Egress_t_egr_flow_src1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t register_value) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      auto value = register_Egress_t_egr_flow_src1_spec_thrift_to_pd(register_value);

      int status = p4_pd_main_register_write_Egress_t_egr_flow_src1(sess_hdl, pd_dev_tgt, index, &value);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
  }

  void register_reset_all_Egress_t_egr_flow_src1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_reset_all_Egress_t_egr_flow_src1(sess_hdl, pd_dev_tgt);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_reset_Egress_t_egr_flow_src1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_range_reset_Egress_t_egr_flow_src1(sess_hdl, pd_dev_tgt, index, count);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_write_all_Egress_t_egr_flow_src1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t register_value) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    auto value = register_Egress_t_egr_flow_src1_spec_thrift_to_pd(register_value);

    int status = p4_pd_main_register_write_all_Egress_t_egr_flow_src1(sess_hdl, pd_dev_tgt, &value);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_read_Egress_t_egr_flow_src1(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t *values = new uint32_t[4*count];
      int value_count = 0;
      int num_actually_read = 0;
      int status = p4_pd_main_register_range_read_Egress_t_egr_flow_src1(sess_hdl, pd_dev_tgt, index, count, pd_flags, &num_actually_read, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Egress_t_egr_flow_src1_spec_pd_to_thrift(values[i]));
      }
      delete[] values;
  }

  void register_hw_sync_Ingress_t_igr_riRotateLastSize(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    PipeMgrSimpleCb cb_data;
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
    int status = p4_pd_main_register_hw_sync_Ingress_t_igr_riRotateLastSize(sess_hdl, pd_dev_tgt, PipeMgrSimpleCb::cb_fn, (void *) &cb_data);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
    cb_data.wait(); // blocking, until callback happens
  }

  void register_read_Ingress_t_igr_riRotateLastSize(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t values[4];
      int value_count = 0;
      int status = p4_pd_main_register_read_Ingress_t_igr_riRotateLastSize(sess_hdl, pd_dev_tgt, index, pd_flags, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Ingress_t_igr_riRotateLastSize_spec_pd_to_thrift(values[i]));
      }
  }

  void register_write_Ingress_t_igr_riRotateLastSize(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t register_value) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      auto value = register_Ingress_t_igr_riRotateLastSize_spec_thrift_to_pd(register_value);

      int status = p4_pd_main_register_write_Ingress_t_igr_riRotateLastSize(sess_hdl, pd_dev_tgt, index, &value);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
  }

  void register_reset_all_Ingress_t_igr_riRotateLastSize(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_reset_all_Ingress_t_igr_riRotateLastSize(sess_hdl, pd_dev_tgt);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_reset_Ingress_t_igr_riRotateLastSize(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_range_reset_Ingress_t_igr_riRotateLastSize(sess_hdl, pd_dev_tgt, index, count);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_write_all_Ingress_t_igr_riRotateLastSize(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t register_value) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    auto value = register_Ingress_t_igr_riRotateLastSize_spec_thrift_to_pd(register_value);

    int status = p4_pd_main_register_write_all_Ingress_t_igr_riRotateLastSize(sess_hdl, pd_dev_tgt, &value);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_read_Ingress_t_igr_riRotateLastSize(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t *values = new uint32_t[4*count];
      int value_count = 0;
      int num_actually_read = 0;
      int status = p4_pd_main_register_range_read_Ingress_t_igr_riRotateLastSize(sess_hdl, pd_dev_tgt, index, count, pd_flags, &num_actually_read, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Ingress_t_igr_riRotateLastSize_spec_pd_to_thrift(values[i]));
      }
      delete[] values;
  }

  void register_hw_sync_Egress_t_egr_flow_src2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    PipeMgrSimpleCb cb_data;
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
    int status = p4_pd_main_register_hw_sync_Egress_t_egr_flow_src2(sess_hdl, pd_dev_tgt, PipeMgrSimpleCb::cb_fn, (void *) &cb_data);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
    cb_data.wait(); // blocking, until callback happens
  }

  void register_read_Egress_t_egr_flow_src2(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t values[4];
      int value_count = 0;
      int status = p4_pd_main_register_read_Egress_t_egr_flow_src2(sess_hdl, pd_dev_tgt, index, pd_flags, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Egress_t_egr_flow_src2_spec_pd_to_thrift(values[i]));
      }
  }

  void register_write_Egress_t_egr_flow_src2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t register_value) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      auto value = register_Egress_t_egr_flow_src2_spec_thrift_to_pd(register_value);

      int status = p4_pd_main_register_write_Egress_t_egr_flow_src2(sess_hdl, pd_dev_tgt, index, &value);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
  }

  void register_reset_all_Egress_t_egr_flow_src2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_reset_all_Egress_t_egr_flow_src2(sess_hdl, pd_dev_tgt);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_reset_Egress_t_egr_flow_src2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_range_reset_Egress_t_egr_flow_src2(sess_hdl, pd_dev_tgt, index, count);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_write_all_Egress_t_egr_flow_src2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t register_value) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    auto value = register_Egress_t_egr_flow_src2_spec_thrift_to_pd(register_value);

    int status = p4_pd_main_register_write_all_Egress_t_egr_flow_src2(sess_hdl, pd_dev_tgt, &value);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_read_Egress_t_egr_flow_src2(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t *values = new uint32_t[4*count];
      int value_count = 0;
      int num_actually_read = 0;
      int status = p4_pd_main_register_range_read_Egress_t_egr_flow_src2(sess_hdl, pd_dev_tgt, index, count, pd_flags, &num_actually_read, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Egress_t_egr_flow_src2_spec_pd_to_thrift(values[i]));
      }
      delete[] values;
  }

  void register_hw_sync_Egress_t_egr_flow_dst1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    PipeMgrSimpleCb cb_data;
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
    int status = p4_pd_main_register_hw_sync_Egress_t_egr_flow_dst1(sess_hdl, pd_dev_tgt, PipeMgrSimpleCb::cb_fn, (void *) &cb_data);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
    cb_data.wait(); // blocking, until callback happens
  }

  void register_read_Egress_t_egr_flow_dst1(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t values[4];
      int value_count = 0;
      int status = p4_pd_main_register_read_Egress_t_egr_flow_dst1(sess_hdl, pd_dev_tgt, index, pd_flags, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Egress_t_egr_flow_dst1_spec_pd_to_thrift(values[i]));
      }
  }

  void register_write_Egress_t_egr_flow_dst1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t register_value) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      auto value = register_Egress_t_egr_flow_dst1_spec_thrift_to_pd(register_value);

      int status = p4_pd_main_register_write_Egress_t_egr_flow_dst1(sess_hdl, pd_dev_tgt, index, &value);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
  }

  void register_reset_all_Egress_t_egr_flow_dst1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_reset_all_Egress_t_egr_flow_dst1(sess_hdl, pd_dev_tgt);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_reset_Egress_t_egr_flow_dst1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_range_reset_Egress_t_egr_flow_dst1(sess_hdl, pd_dev_tgt, index, count);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_write_all_Egress_t_egr_flow_dst1(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t register_value) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    auto value = register_Egress_t_egr_flow_dst1_spec_thrift_to_pd(register_value);

    int status = p4_pd_main_register_write_all_Egress_t_egr_flow_dst1(sess_hdl, pd_dev_tgt, &value);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_read_Egress_t_egr_flow_dst1(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t *values = new uint32_t[4*count];
      int value_count = 0;
      int num_actually_read = 0;
      int status = p4_pd_main_register_range_read_Egress_t_egr_flow_dst1(sess_hdl, pd_dev_tgt, index, count, pd_flags, &num_actually_read, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Egress_t_egr_flow_dst1_spec_pd_to_thrift(values[i]));
      }
      delete[] values;
  }

  void register_hw_sync_Ingress_t_igr_ri_tailq(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    PipeMgrSimpleCb cb_data;
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
    int status = p4_pd_main_register_hw_sync_Ingress_t_igr_ri_tailq(sess_hdl, pd_dev_tgt, PipeMgrSimpleCb::cb_fn, (void *) &cb_data);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
    cb_data.wait(); // blocking, until callback happens
  }

  void register_read_Ingress_t_igr_ri_tailq(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t values[4];
      int value_count = 0;
      int status = p4_pd_main_register_read_Ingress_t_igr_ri_tailq(sess_hdl, pd_dev_tgt, index, pd_flags, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Ingress_t_igr_ri_tailq_spec_pd_to_thrift(values[i]));
      }
  }

  void register_write_Ingress_t_igr_ri_tailq(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t register_value) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      auto value = register_Ingress_t_igr_ri_tailq_spec_thrift_to_pd(register_value);

      int status = p4_pd_main_register_write_Ingress_t_igr_ri_tailq(sess_hdl, pd_dev_tgt, index, &value);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
  }

  void register_reset_all_Ingress_t_igr_ri_tailq(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_reset_all_Ingress_t_igr_ri_tailq(sess_hdl, pd_dev_tgt);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_reset_Ingress_t_igr_ri_tailq(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_range_reset_Ingress_t_igr_ri_tailq(sess_hdl, pd_dev_tgt, index, count);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_write_all_Ingress_t_igr_ri_tailq(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t register_value) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    auto value = register_Ingress_t_igr_ri_tailq_spec_thrift_to_pd(register_value);

    int status = p4_pd_main_register_write_all_Ingress_t_igr_ri_tailq(sess_hdl, pd_dev_tgt, &value);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_read_Ingress_t_igr_ri_tailq(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t *values = new uint32_t[4*count];
      int value_count = 0;
      int num_actually_read = 0;
      int status = p4_pd_main_register_range_read_Ingress_t_igr_ri_tailq(sess_hdl, pd_dev_tgt, index, count, pd_flags, &num_actually_read, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Ingress_t_igr_ri_tailq_spec_pd_to_thrift(values[i]));
      }
      delete[] values;
  }

  void register_hw_sync_Egress_t_egr_flow_dst2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    PipeMgrSimpleCb cb_data;
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);
    int status = p4_pd_main_register_hw_sync_Egress_t_egr_flow_dst2(sess_hdl, pd_dev_tgt, PipeMgrSimpleCb::cb_fn, (void *) &cb_data);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
    cb_data.wait(); // blocking, until callback happens
  }

  void register_read_Egress_t_egr_flow_dst2(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t values[4];
      int value_count = 0;
      int status = p4_pd_main_register_read_Egress_t_egr_flow_dst2(sess_hdl, pd_dev_tgt, index, pd_flags, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Egress_t_egr_flow_dst2_spec_pd_to_thrift(values[i]));
      }
  }

  void register_write_Egress_t_egr_flow_dst2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t register_value) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      auto value = register_Egress_t_egr_flow_dst2_spec_thrift_to_pd(register_value);

      int status = p4_pd_main_register_write_Egress_t_egr_flow_dst2(sess_hdl, pd_dev_tgt, index, &value);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
  }

  void register_reset_all_Egress_t_egr_flow_dst2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_reset_all_Egress_t_egr_flow_dst2(sess_hdl, pd_dev_tgt);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_reset_Egress_t_egr_flow_dst2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    int status = p4_pd_main_register_range_reset_Egress_t_egr_flow_dst2(sess_hdl, pd_dev_tgt, index, count);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_write_all_Egress_t_egr_flow_dst2(const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t register_value) {
    p4_pd_dev_target_t pd_dev_tgt;
    pd_dev_tgt.device_id = dev_tgt.dev_id;
    pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

    auto value = register_Egress_t_egr_flow_dst2_spec_thrift_to_pd(register_value);

    int status = p4_pd_main_register_write_all_Egress_t_egr_flow_dst2(sess_hdl, pd_dev_tgt, &value);
    if(status != 0) {
      InvalidRegisterOperation iop;
      iop.code = status;
      throw iop;
    }
  }

  void register_range_read_Egress_t_egr_flow_dst2(std::vector<int32_t> &register_values, const SessionHandle_t sess_hdl, const DevTarget_t &dev_tgt, const int32_t index, const int32_t count, const main_register_flags_t &flags) {

      p4_pd_dev_target_t pd_dev_tgt;
      pd_dev_tgt.device_id = dev_tgt.dev_id;
      pd_dev_tgt.dev_pipe_id = i16_to_bf_pipe(dev_tgt.dev_pipe_id);

      int pd_flags = 0;
      if(flags.read_hw_sync) pd_flags |= REGISTER_READ_HW_SYNC;

      uint32_t *values = new uint32_t[4*count];
      int value_count = 0;
      int num_actually_read = 0;
      int status = p4_pd_main_register_range_read_Egress_t_egr_flow_dst2(sess_hdl, pd_dev_tgt, index, count, pd_flags, &num_actually_read, values, &value_count);
      if(status != 0) {
        InvalidRegisterOperation iop;
        iop.code = status;
        throw iop;
      }
      int i;
      register_values.reserve(value_count);
      for(i = 0; i < value_count; i++) {
        register_values.push_back(register_Egress_t_egr_flow_dst2_spec_pd_to_thrift(values[i]));
      }
      delete[] values;
  }


  void bytes_meter_spec_thrift_to_pd(const main_bytes_meter_spec_t &meter_spec,
                                     p4_pd_bytes_meter_spec_t *pd_meter_spec) {
    pd_meter_spec->cir_kbps = meter_spec.cir_kbps;
    pd_meter_spec->cburst_kbits = meter_spec.cburst_kbits;
    pd_meter_spec->pir_kbps = meter_spec.pir_kbps;
    pd_meter_spec->pburst_kbits = meter_spec.pburst_kbits;
    pd_meter_spec->meter_type = meter_spec.color_aware ?
      PD_METER_TYPE_COLOR_AWARE : PD_METER_TYPE_COLOR_UNAWARE;
  }

  void packets_meter_spec_thrift_to_pd(const main_packets_meter_spec_t &meter_spec,
                                       p4_pd_packets_meter_spec_t *pd_meter_spec) {
    pd_meter_spec->cir_pps = meter_spec.cir_pps;
    pd_meter_spec->cburst_pkts = meter_spec.cburst_pkts;
    pd_meter_spec->pir_pps = meter_spec.pir_pps;
    pd_meter_spec->pburst_pkts = meter_spec.pburst_pkts;
    pd_meter_spec->meter_type = meter_spec.color_aware ?
      PD_METER_TYPE_COLOR_AWARE : PD_METER_TYPE_COLOR_UNAWARE;
  }

  void bytes_meter_spec_pd_to_thrift(main_bytes_meter_spec_t &meter_spec,
                                     const p4_pd_bytes_meter_spec_t *pd_meter_spec) {
    meter_spec.cir_kbps = pd_meter_spec->cir_kbps;
    meter_spec.cburst_kbits = pd_meter_spec->cburst_kbits;
    meter_spec.pir_kbps = pd_meter_spec->pir_kbps;
    meter_spec.pburst_kbits = pd_meter_spec->pburst_kbits;
    meter_spec.color_aware = pd_meter_spec->meter_type == PD_METER_TYPE_COLOR_AWARE ? true : false;
  }

  void packets_meter_spec_pd_to_thrift(main_packets_meter_spec_t &meter_spec,
                                       const p4_pd_packets_meter_spec_t *pd_meter_spec) {
    meter_spec.cir_pps = pd_meter_spec->cir_pps;
    meter_spec.cburst_pkts = pd_meter_spec->cburst_pkts;
    meter_spec.pir_pps = pd_meter_spec->pir_pps;
    meter_spec.pburst_pkts = pd_meter_spec->pburst_pkts;
    meter_spec.color_aware = pd_meter_spec->meter_type == PD_METER_TYPE_COLOR_AWARE ? true : false;
  }

  void lpf_spec_thrift_to_pd(const main_lpf_spec_t &lpf_spec,
                             p4_pd_lpf_spec *pd_lpf_spec) {
    pd_lpf_spec->gain_decay_separate_time_constant =
      lpf_spec.gain_decay_separate_time_constant;
    pd_lpf_spec->gain_time_constant = lpf_spec.gain_time_constant;
    pd_lpf_spec->decay_time_constant = lpf_spec.decay_time_constant;
    pd_lpf_spec->time_constant = lpf_spec.time_constant;
    pd_lpf_spec->output_scale_down_factor = lpf_spec.output_scale_down_factor;
    pd_lpf_spec->lpf_type = (p4_pd_lpf_type_t) lpf_spec.lpf_type;
  }

  void lpf_spec_pd_to_thrift(main_lpf_spec_t &lpf_spec,
                             const p4_pd_lpf_spec *pd_lpf_spec) {
    lpf_spec.gain_decay_separate_time_constant =
      pd_lpf_spec->gain_decay_separate_time_constant;
    lpf_spec.gain_time_constant = pd_lpf_spec->gain_time_constant;
    lpf_spec.decay_time_constant = pd_lpf_spec->decay_time_constant;
    lpf_spec.time_constant = pd_lpf_spec->time_constant;
    lpf_spec.output_scale_down_factor = pd_lpf_spec->output_scale_down_factor;
    lpf_spec.lpf_type = pd_lpf_spec->lpf_type == PD_LPF_TYPE_RATE ? main_lpf_type::TYPE_RATE : main_lpf_type::TYPE_SAMPLE;
  }

  void wred_spec_thrift_to_pd(const main_wred_spec_t &wred_spec,
                              p4_pd_wred_spec_t *pd_wred_spec) {
    pd_wred_spec->time_constant = wred_spec.time_constant;
    pd_wred_spec->red_min_threshold = wred_spec.red_min_threshold;
    pd_wred_spec->red_max_threshold = wred_spec.red_max_threshold;
    pd_wred_spec->max_probability = wred_spec.max_probability;
  }

  void wred_spec_pd_to_thrift(main_wred_spec_t &wred_spec,
                              p4_pd_wred_spec_t *pd_wred_spec) {
    wred_spec.time_constant = pd_wred_spec->time_constant;
    wred_spec.red_min_threshold = pd_wred_spec->red_min_threshold;
    wred_spec.red_max_threshold = pd_wred_spec->red_max_threshold;
    wred_spec.max_probability = pd_wred_spec->max_probability;
  }

  uint32_t register_Ingress_t_igr_ri_headq_spec_thrift_to_pd(const int32_t &thrift_spec) {
    uint32_t pd_spec;
    pd_spec = static_cast<decltype(pd_spec)>(thrift_spec);
    return pd_spec;
  }

  int32_t register_Ingress_t_igr_ri_headq_spec_pd_to_thrift(const uint32_t &pd_spec) {
    int32_t thrift_spec;
    thrift_spec = static_cast<decltype(thrift_spec)>(pd_spec);
    return thrift_spec;
  }

  uint32_t register_Egress_t_egr_flow_ct2_spec_thrift_to_pd(const int32_t &thrift_spec) {
    uint32_t pd_spec;
    pd_spec = static_cast<decltype(pd_spec)>(thrift_spec);
    return pd_spec;
  }

  int32_t register_Egress_t_egr_flow_ct2_spec_pd_to_thrift(const uint32_t &pd_spec) {
    int32_t thrift_spec;
    thrift_spec = static_cast<decltype(thrift_spec)>(pd_spec);
    return thrift_spec;
  }

  uint32_t register_Ingress_t_igr_riBytes_spec_thrift_to_pd(const int32_t &thrift_spec) {
    uint32_t pd_spec;
    pd_spec = static_cast<decltype(pd_spec)>(thrift_spec);
    return pd_spec;
  }

  int32_t register_Ingress_t_igr_riBytes_spec_pd_to_thrift(const uint32_t &pd_spec) {
    int32_t thrift_spec;
    thrift_spec = static_cast<decltype(thrift_spec)>(pd_spec);
    return thrift_spec;
  }

  p4_pd_main_Ingress_t_igr_ri_bytes_value_t register_Ingress_t_igr_ri_bytes_spec_thrift_to_pd(const main_Ingress_t_igr_ri_bytes_value_t &thrift_spec) {
    p4_pd_main_Ingress_t_igr_ri_bytes_value_t pd_spec;
    pd_spec.f0 = static_cast<decltype(pd_spec.f0)>(thrift_spec.f0);
    pd_spec.f1 = static_cast<decltype(pd_spec.f1)>(thrift_spec.f1);
    return pd_spec;
  }

  main_Ingress_t_igr_ri_bytes_value_t register_Ingress_t_igr_ri_bytes_spec_pd_to_thrift(const p4_pd_main_Ingress_t_igr_ri_bytes_value_t &pd_spec) {
    main_Ingress_t_igr_ri_bytes_value_t thrift_spec;
    thrift_spec.f0 = static_cast<decltype(thrift_spec.f0)>(pd_spec.f0);
    thrift_spec.f1 = static_cast<decltype(thrift_spec.f1)>(pd_spec.f1);
    return thrift_spec;
  }

  uint32_t register_Egress_t_egr_flow_ct1_spec_thrift_to_pd(const int32_t &thrift_spec) {
    uint32_t pd_spec;
    pd_spec = static_cast<decltype(pd_spec)>(thrift_spec);
    return pd_spec;
  }

  int32_t register_Egress_t_egr_flow_ct1_spec_pd_to_thrift(const uint32_t &pd_spec) {
    int32_t thrift_spec;
    thrift_spec = static_cast<decltype(thrift_spec)>(pd_spec);
    return thrift_spec;
  }

  uint32_t register_Ingress_t_igr_fCount_spec_thrift_to_pd(const int32_t &thrift_spec) {
    uint32_t pd_spec;
    pd_spec = static_cast<decltype(pd_spec)>(thrift_spec);
    return pd_spec;
  }

  int32_t register_Ingress_t_igr_fCount_spec_pd_to_thrift(const uint32_t &pd_spec) {
    int32_t thrift_spec;
    thrift_spec = static_cast<decltype(thrift_spec)>(pd_spec);
    return thrift_spec;
  }

  uint32_t register_Ingress_t_igr_queueCounter_spec_thrift_to_pd(const int32_t &thrift_spec) {
    uint32_t pd_spec;
    pd_spec = static_cast<decltype(pd_spec)>(thrift_spec);
    return pd_spec;
  }

  int32_t register_Ingress_t_igr_queueCounter_spec_pd_to_thrift(const uint32_t &pd_spec) {
    int32_t thrift_spec;
    thrift_spec = static_cast<decltype(thrift_spec)>(pd_spec);
    return thrift_spec;
  }

  uint32_t register_Ingress_t_igr_ri_base_round_time_spec_thrift_to_pd(const int32_t &thrift_spec) {
    uint32_t pd_spec;
    pd_spec = static_cast<decltype(pd_spec)>(thrift_spec);
    return pd_spec;
  }

  int32_t register_Ingress_t_igr_ri_base_round_time_spec_pd_to_thrift(const uint32_t &pd_spec) {
    int32_t thrift_spec;
    thrift_spec = static_cast<decltype(thrift_spec)>(pd_spec);
    return thrift_spec;
  }

  uint32_t register_Egress_t_egr_port_cts_spec_thrift_to_pd(const int32_t &thrift_spec) {
    uint32_t pd_spec;
    pd_spec = static_cast<decltype(pd_spec)>(thrift_spec);
    return pd_spec;
  }

  int32_t register_Egress_t_egr_port_cts_spec_pd_to_thrift(const uint32_t &pd_spec) {
    int32_t thrift_spec;
    thrift_spec = static_cast<decltype(thrift_spec)>(pd_spec);
    return thrift_spec;
  }

  uint32_t register_Egress_t_egr_flow_src1_spec_thrift_to_pd(const int32_t &thrift_spec) {
    uint32_t pd_spec;
    pd_spec = static_cast<decltype(pd_spec)>(thrift_spec);
    return pd_spec;
  }

  int32_t register_Egress_t_egr_flow_src1_spec_pd_to_thrift(const uint32_t &pd_spec) {
    int32_t thrift_spec;
    thrift_spec = static_cast<decltype(thrift_spec)>(pd_spec);
    return thrift_spec;
  }

  uint32_t register_Ingress_t_igr_riRotateLastSize_spec_thrift_to_pd(const int32_t &thrift_spec) {
    uint32_t pd_spec;
    pd_spec = static_cast<decltype(pd_spec)>(thrift_spec);
    return pd_spec;
  }

  int32_t register_Ingress_t_igr_riRotateLastSize_spec_pd_to_thrift(const uint32_t &pd_spec) {
    int32_t thrift_spec;
    thrift_spec = static_cast<decltype(thrift_spec)>(pd_spec);
    return thrift_spec;
  }

  uint32_t register_Egress_t_egr_flow_src2_spec_thrift_to_pd(const int32_t &thrift_spec) {
    uint32_t pd_spec;
    pd_spec = static_cast<decltype(pd_spec)>(thrift_spec);
    return pd_spec;
  }

  int32_t register_Egress_t_egr_flow_src2_spec_pd_to_thrift(const uint32_t &pd_spec) {
    int32_t thrift_spec;
    thrift_spec = static_cast<decltype(thrift_spec)>(pd_spec);
    return thrift_spec;
  }

  uint32_t register_Egress_t_egr_flow_dst1_spec_thrift_to_pd(const int32_t &thrift_spec) {
    uint32_t pd_spec;
    pd_spec = static_cast<decltype(pd_spec)>(thrift_spec);
    return pd_spec;
  }

  int32_t register_Egress_t_egr_flow_dst1_spec_pd_to_thrift(const uint32_t &pd_spec) {
    int32_t thrift_spec;
    thrift_spec = static_cast<decltype(thrift_spec)>(pd_spec);
    return thrift_spec;
  }

  uint32_t register_Ingress_t_igr_ri_tailq_spec_thrift_to_pd(const int32_t &thrift_spec) {
    uint32_t pd_spec;
    pd_spec = static_cast<decltype(pd_spec)>(thrift_spec);
    return pd_spec;
  }

  int32_t register_Ingress_t_igr_ri_tailq_spec_pd_to_thrift(const uint32_t &pd_spec) {
    int32_t thrift_spec;
    thrift_spec = static_cast<decltype(thrift_spec)>(pd_spec);
    return thrift_spec;
  }

  uint32_t register_Egress_t_egr_flow_dst2_spec_thrift_to_pd(const int32_t &thrift_spec) {
    uint32_t pd_spec;
    pd_spec = static_cast<decltype(pd_spec)>(thrift_spec);
    return pd_spec;
  }

  int32_t register_Egress_t_egr_flow_dst2_spec_pd_to_thrift(const uint32_t &pd_spec) {
    int32_t thrift_spec;
    thrift_spec = static_cast<decltype(thrift_spec)>(pd_spec);
    return thrift_spec;
  }










    void hash_calc_Ingress_t_igr_identity_hasher0_configure_input_set(const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Ingress_t_igr_identity_hasher0_configure_input_t::type input) {
        p4_pd_main_Ingress_t_igr_identity_hasher0_configure_input_t pd_input = (p4_pd_main_Ingress_t_igr_identity_hasher0_configure_input_t)input;
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher0_configure_input_set(sess_hdl, dev_id, pd_input);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int32_t hash_calc_Ingress_t_igr_identity_hasher0_configure_input_get(const SessionHandle_t sess_hdl, const int8_t dev_id) {
        p4_pd_main_Ingress_t_igr_identity_hasher0_configure_input_t pd_input;
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher0_configure_input_get(sess_hdl, dev_id, &pd_input);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return ((main_Ingress_t_igr_identity_hasher0_configure_input_t::type)pd_input);
    }

    void hash_calc_Ingress_t_igr_identity_hasher0_configure_algorithm_set(const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Ingress_t_igr_identity_hasher0_configure_algo_t::type algo) {
        p4_pd_main_Ingress_t_igr_identity_hasher0_configure_algo_t pd_algo = (p4_pd_main_Ingress_t_igr_identity_hasher0_configure_algo_t)algo;
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher0_configure_algorithm_set(sess_hdl, dev_id, pd_algo);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int32_t hash_calc_Ingress_t_igr_identity_hasher0_configure_algorithm_get(const SessionHandle_t sess_hdl, const int8_t dev_id) {
        p4_pd_main_Ingress_t_igr_identity_hasher0_configure_algo_t pd_algo;
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher0_configure_algorithm_get(sess_hdl, dev_id, &pd_algo);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return ((main_Ingress_t_igr_identity_hasher0_configure_algo_t::type)pd_algo);
    }

    void hash_calc_Ingress_t_igr_identity_hasher0_configure_seed_set(const SessionHandle_t sess_hdl, const int8_t dev_id, const int64_t seed) {
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher0_configure_seed_set(sess_hdl, dev_id, seed);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int64_t hash_calc_Ingress_t_igr_identity_hasher0_configure_seed_get(const SessionHandle_t sess_hdl, const int8_t dev_id) {
        uint64_t seed = 0;
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher0_configure_seed_get(sess_hdl, dev_id, &seed);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return ((int64_t)seed);
    }

    void hash_calc_Ingress_t_igr_identity_hasher0_configure_input_field_attribute_set(const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Ingress_t_igr_identity_hasher0_configure_input_t::type input, const std::vector<main_Ingress_t_igr_identity_hasher0_configure_input_field_attribute_t> &array_of_attrs) {
        p4_pd_main_Ingress_t_igr_identity_hasher0_configure_input_t pd_input = (p4_pd_main_Ingress_t_igr_identity_hasher0_configure_input_t)input;
        p4_pd_main_Ingress_t_igr_identity_hasher0_configure_input_field_attribute_t *pd_attr = new p4_pd_main_Ingress_t_igr_identity_hasher0_configure_input_field_attribute_t[array_of_attrs.size()]();
        int i = 0;
        /* Copy over the info from the thrift struct to the PD struct */
        for (auto & item : array_of_attrs) {
          pd_attr[i].input_field.id = item.input_field;
          pd_attr[i].type = (p4_pd_main_input_field_attr_type_t)item.type;
          pd_attr[i].value.val = item.value;
          i++;
        }
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher0_configure_input_field_attribute_set(sess_hdl, dev_id, pd_input, i, pd_attr);
        delete[] pd_attr;
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int32_t hash_calc_Ingress_t_igr_identity_hasher0_configure_input_field_attribute_count_get(const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Ingress_t_igr_identity_hasher0_configure_input_t::type input) {
        p4_pd_main_Ingress_t_igr_identity_hasher0_configure_input_t pd_input = (p4_pd_main_Ingress_t_igr_identity_hasher0_configure_input_t)input;
        uint32_t attr_count = 0;
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher0_configure_input_field_attribute_count_get(sess_hdl, dev_id, pd_input, &attr_count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return attr_count;
    }

    void hash_calc_Ingress_t_igr_identity_hasher0_configure_input_field_attribute_get(std::vector<main_Ingress_t_igr_identity_hasher0_configure_input_field_attribute_t> &array_of_attrs, const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Ingress_t_igr_identity_hasher0_configure_input_t::type input) {
        p4_pd_main_Ingress_t_igr_identity_hasher0_configure_input_t pd_input = (p4_pd_main_Ingress_t_igr_identity_hasher0_configure_input_t)input;
        uint32_t attr_count = 0, filled_attr_count = 0;
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher0_configure_input_field_attribute_count_get(sess_hdl, dev_id, pd_input, &attr_count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        p4_pd_main_Ingress_t_igr_identity_hasher0_configure_input_field_attribute_t *pd_array_of_attrs = new p4_pd_main_Ingress_t_igr_identity_hasher0_configure_input_field_attribute_t[attr_count]();
        status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher0_configure_input_field_attribute_get(sess_hdl, dev_id, pd_input, attr_count,
                pd_array_of_attrs, &filled_attr_count);
        if(status != 0) {
          delete[] pd_array_of_attrs;
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        /* Copy over the info from the PD struct to the thrift struct */
        array_of_attrs = std::vector<main_Ingress_t_igr_identity_hasher0_configure_input_field_attribute_t>(filled_attr_count);
        for (int i=0; i < filled_attr_count; i++) {
          array_of_attrs[i].input_field = pd_array_of_attrs[i].input_field.id;
          array_of_attrs[i].type = (main_input_field_attr_type_t::type)pd_array_of_attrs[i].type;
          array_of_attrs[i].value = pd_array_of_attrs[i].value.val;
        }
        delete[] pd_array_of_attrs;
    }

    void hash_calc_Ingress_t_igr_identity_hasher0_configure_calculate_hash_value(std::vector<int8_t> &hash_val, const SessionHandle_t sess_hdl, const int8_t dev_id, const int32_t attr_count, const std::vector<main_Ingress_t_igr_identity_hasher0_configure_input_field_attribute_t> &array_of_attrs, const std::vector<int32_t> &attr_sizes) {
        p4_pd_main_Ingress_t_igr_identity_hasher0_configure_input_field_attribute_t *pd_attr = new p4_pd_main_Ingress_t_igr_identity_hasher0_configure_input_field_attribute_t[attr_count]();
        uint32_t *pd_attr_sizes = new uint32_t[attr_count]();
        hash_val = std::vector<int8_t>(4);
        int64_t result = 0;
        int i = 0;
        /* Copy over the info from the thrift struct to the PD struct */
        for (auto & item : array_of_attrs) {
          pd_attr[i].input_field.id = item.input_field;
          if (attr_sizes[i] > 32) {
            pd_attr[i].value.stream = (uint8_t *)malloc((attr_sizes[i] + 7) / 8);
            memcpy(pd_attr[i].value.stream, item.stream.c_str(), (attr_sizes[i] + 7) / 8);
          } else {
            pd_attr[i].value.val = item.value;
          }
          pd_attr_sizes[i] = (uint32_t)attr_sizes[i];
          i++;
        }
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher0_configure_calculate_hash_value(sess_hdl, dev_id, attr_count, pd_attr, pd_attr_sizes, (uint8_t *)hash_val.data(), 4);
        delete[] pd_attr;
        delete[] pd_attr_sizes;
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return;
    }


    void hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_set(const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_t::type input) {
        p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_t pd_input = (p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_t)input;
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_set(sess_hdl, dev_id, pd_input);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int32_t hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_get(const SessionHandle_t sess_hdl, const int8_t dev_id) {
        p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_t pd_input;
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_get(sess_hdl, dev_id, &pd_input);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return ((main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_t::type)pd_input);
    }

    void hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_algorithm_set(const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_algo_t::type algo) {
        p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_algo_t pd_algo = (p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_algo_t)algo;
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_algorithm_set(sess_hdl, dev_id, pd_algo);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int32_t hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_algorithm_get(const SessionHandle_t sess_hdl, const int8_t dev_id) {
        p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_algo_t pd_algo;
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_algorithm_get(sess_hdl, dev_id, &pd_algo);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return ((main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_algo_t::type)pd_algo);
    }

    void hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_seed_set(const SessionHandle_t sess_hdl, const int8_t dev_id, const int64_t seed) {
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_seed_set(sess_hdl, dev_id, seed);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int64_t hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_seed_get(const SessionHandle_t sess_hdl, const int8_t dev_id) {
        uint64_t seed = 0;
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_seed_get(sess_hdl, dev_id, &seed);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return ((int64_t)seed);
    }

    void hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_field_attribute_set(const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_t::type input, const std::vector<main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_field_attribute_t> &array_of_attrs) {
        p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_t pd_input = (p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_t)input;
        p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_field_attribute_t *pd_attr = new p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_field_attribute_t[array_of_attrs.size()]();
        int i = 0;
        /* Copy over the info from the thrift struct to the PD struct */
        for (auto & item : array_of_attrs) {
          pd_attr[i].input_field.id = item.input_field;
          pd_attr[i].type = (p4_pd_main_input_field_attr_type_t)item.type;
          pd_attr[i].value.val = item.value;
          i++;
        }
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_field_attribute_set(sess_hdl, dev_id, pd_input, i, pd_attr);
        delete[] pd_attr;
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int32_t hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_field_attribute_count_get(const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_t::type input) {
        p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_t pd_input = (p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_t)input;
        uint32_t attr_count = 0;
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_field_attribute_count_get(sess_hdl, dev_id, pd_input, &attr_count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return attr_count;
    }

    void hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_field_attribute_get(std::vector<main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_field_attribute_t> &array_of_attrs, const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_t::type input) {
        p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_t pd_input = (p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_t)input;
        uint32_t attr_count = 0, filled_attr_count = 0;
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_field_attribute_count_get(sess_hdl, dev_id, pd_input, &attr_count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_field_attribute_t *pd_array_of_attrs = new p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_field_attribute_t[attr_count]();
        status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_field_attribute_get(sess_hdl, dev_id, pd_input, attr_count,
                pd_array_of_attrs, &filled_attr_count);
        if(status != 0) {
          delete[] pd_array_of_attrs;
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        /* Copy over the info from the PD struct to the thrift struct */
        array_of_attrs = std::vector<main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_field_attribute_t>(filled_attr_count);
        for (int i=0; i < filled_attr_count; i++) {
          array_of_attrs[i].input_field = pd_array_of_attrs[i].input_field.id;
          array_of_attrs[i].type = (main_input_field_attr_type_t::type)pd_array_of_attrs[i].type;
          array_of_attrs[i].value = pd_array_of_attrs[i].value.val;
        }
        delete[] pd_array_of_attrs;
    }

    void hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_calculate_hash_value(std::vector<int8_t> &hash_val, const SessionHandle_t sess_hdl, const int8_t dev_id, const int32_t attr_count, const std::vector<main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_field_attribute_t> &array_of_attrs, const std::vector<int32_t> &attr_sizes) {
        p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_field_attribute_t *pd_attr = new p4_pd_main_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_input_field_attribute_t[attr_count]();
        uint32_t *pd_attr_sizes = new uint32_t[attr_count]();
        hash_val = std::vector<int8_t>(2);
        int64_t result = 0;
        int i = 0;
        /* Copy over the info from the thrift struct to the PD struct */
        for (auto & item : array_of_attrs) {
          pd_attr[i].input_field.id = item.input_field;
          if (attr_sizes[i] > 32) {
            pd_attr[i].value.stream = (uint8_t *)malloc((attr_sizes[i] + 7) / 8);
            memcpy(pd_attr[i].value.stream, item.stream.c_str(), (attr_sizes[i] + 7) / 8);
          } else {
            pd_attr[i].value.val = item.value;
          }
          pd_attr_sizes[i] = (uint32_t)attr_sizes[i];
          i++;
        }
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1560_hasher_1764_alu_0_opstmt_configure_calculate_hash_value(sess_hdl, dev_id, attr_count, pd_attr, pd_attr_sizes, (uint8_t *)hash_val.data(), 2);
        delete[] pd_attr;
        delete[] pd_attr_sizes;
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return;
    }


    void hash_calc_Ingress_t_igr_identity_hasher2_configure_input_set(const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Ingress_t_igr_identity_hasher2_configure_input_t::type input) {
        p4_pd_main_Ingress_t_igr_identity_hasher2_configure_input_t pd_input = (p4_pd_main_Ingress_t_igr_identity_hasher2_configure_input_t)input;
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher2_configure_input_set(sess_hdl, dev_id, pd_input);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int32_t hash_calc_Ingress_t_igr_identity_hasher2_configure_input_get(const SessionHandle_t sess_hdl, const int8_t dev_id) {
        p4_pd_main_Ingress_t_igr_identity_hasher2_configure_input_t pd_input;
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher2_configure_input_get(sess_hdl, dev_id, &pd_input);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return ((main_Ingress_t_igr_identity_hasher2_configure_input_t::type)pd_input);
    }

    void hash_calc_Ingress_t_igr_identity_hasher2_configure_algorithm_set(const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Ingress_t_igr_identity_hasher2_configure_algo_t::type algo) {
        p4_pd_main_Ingress_t_igr_identity_hasher2_configure_algo_t pd_algo = (p4_pd_main_Ingress_t_igr_identity_hasher2_configure_algo_t)algo;
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher2_configure_algorithm_set(sess_hdl, dev_id, pd_algo);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int32_t hash_calc_Ingress_t_igr_identity_hasher2_configure_algorithm_get(const SessionHandle_t sess_hdl, const int8_t dev_id) {
        p4_pd_main_Ingress_t_igr_identity_hasher2_configure_algo_t pd_algo;
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher2_configure_algorithm_get(sess_hdl, dev_id, &pd_algo);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return ((main_Ingress_t_igr_identity_hasher2_configure_algo_t::type)pd_algo);
    }

    void hash_calc_Ingress_t_igr_identity_hasher2_configure_seed_set(const SessionHandle_t sess_hdl, const int8_t dev_id, const int64_t seed) {
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher2_configure_seed_set(sess_hdl, dev_id, seed);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int64_t hash_calc_Ingress_t_igr_identity_hasher2_configure_seed_get(const SessionHandle_t sess_hdl, const int8_t dev_id) {
        uint64_t seed = 0;
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher2_configure_seed_get(sess_hdl, dev_id, &seed);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return ((int64_t)seed);
    }

    void hash_calc_Ingress_t_igr_identity_hasher2_configure_input_field_attribute_set(const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Ingress_t_igr_identity_hasher2_configure_input_t::type input, const std::vector<main_Ingress_t_igr_identity_hasher2_configure_input_field_attribute_t> &array_of_attrs) {
        p4_pd_main_Ingress_t_igr_identity_hasher2_configure_input_t pd_input = (p4_pd_main_Ingress_t_igr_identity_hasher2_configure_input_t)input;
        p4_pd_main_Ingress_t_igr_identity_hasher2_configure_input_field_attribute_t *pd_attr = new p4_pd_main_Ingress_t_igr_identity_hasher2_configure_input_field_attribute_t[array_of_attrs.size()]();
        int i = 0;
        /* Copy over the info from the thrift struct to the PD struct */
        for (auto & item : array_of_attrs) {
          pd_attr[i].input_field.id = item.input_field;
          pd_attr[i].type = (p4_pd_main_input_field_attr_type_t)item.type;
          pd_attr[i].value.val = item.value;
          i++;
        }
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher2_configure_input_field_attribute_set(sess_hdl, dev_id, pd_input, i, pd_attr);
        delete[] pd_attr;
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int32_t hash_calc_Ingress_t_igr_identity_hasher2_configure_input_field_attribute_count_get(const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Ingress_t_igr_identity_hasher2_configure_input_t::type input) {
        p4_pd_main_Ingress_t_igr_identity_hasher2_configure_input_t pd_input = (p4_pd_main_Ingress_t_igr_identity_hasher2_configure_input_t)input;
        uint32_t attr_count = 0;
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher2_configure_input_field_attribute_count_get(sess_hdl, dev_id, pd_input, &attr_count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return attr_count;
    }

    void hash_calc_Ingress_t_igr_identity_hasher2_configure_input_field_attribute_get(std::vector<main_Ingress_t_igr_identity_hasher2_configure_input_field_attribute_t> &array_of_attrs, const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Ingress_t_igr_identity_hasher2_configure_input_t::type input) {
        p4_pd_main_Ingress_t_igr_identity_hasher2_configure_input_t pd_input = (p4_pd_main_Ingress_t_igr_identity_hasher2_configure_input_t)input;
        uint32_t attr_count = 0, filled_attr_count = 0;
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher2_configure_input_field_attribute_count_get(sess_hdl, dev_id, pd_input, &attr_count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        p4_pd_main_Ingress_t_igr_identity_hasher2_configure_input_field_attribute_t *pd_array_of_attrs = new p4_pd_main_Ingress_t_igr_identity_hasher2_configure_input_field_attribute_t[attr_count]();
        status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher2_configure_input_field_attribute_get(sess_hdl, dev_id, pd_input, attr_count,
                pd_array_of_attrs, &filled_attr_count);
        if(status != 0) {
          delete[] pd_array_of_attrs;
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        /* Copy over the info from the PD struct to the thrift struct */
        array_of_attrs = std::vector<main_Ingress_t_igr_identity_hasher2_configure_input_field_attribute_t>(filled_attr_count);
        for (int i=0; i < filled_attr_count; i++) {
          array_of_attrs[i].input_field = pd_array_of_attrs[i].input_field.id;
          array_of_attrs[i].type = (main_input_field_attr_type_t::type)pd_array_of_attrs[i].type;
          array_of_attrs[i].value = pd_array_of_attrs[i].value.val;
        }
        delete[] pd_array_of_attrs;
    }

    void hash_calc_Ingress_t_igr_identity_hasher2_configure_calculate_hash_value(std::vector<int8_t> &hash_val, const SessionHandle_t sess_hdl, const int8_t dev_id, const int32_t attr_count, const std::vector<main_Ingress_t_igr_identity_hasher2_configure_input_field_attribute_t> &array_of_attrs, const std::vector<int32_t> &attr_sizes) {
        p4_pd_main_Ingress_t_igr_identity_hasher2_configure_input_field_attribute_t *pd_attr = new p4_pd_main_Ingress_t_igr_identity_hasher2_configure_input_field_attribute_t[attr_count]();
        uint32_t *pd_attr_sizes = new uint32_t[attr_count]();
        hash_val = std::vector<int8_t>(4);
        int64_t result = 0;
        int i = 0;
        /* Copy over the info from the thrift struct to the PD struct */
        for (auto & item : array_of_attrs) {
          pd_attr[i].input_field.id = item.input_field;
          if (attr_sizes[i] > 32) {
            pd_attr[i].value.stream = (uint8_t *)malloc((attr_sizes[i] + 7) / 8);
            memcpy(pd_attr[i].value.stream, item.stream.c_str(), (attr_sizes[i] + 7) / 8);
          } else {
            pd_attr[i].value.val = item.value;
          }
          pd_attr_sizes[i] = (uint32_t)attr_sizes[i];
          i++;
        }
        int status = p4_pd_main_hash_calc_Ingress_t_igr_identity_hasher2_configure_calculate_hash_value(sess_hdl, dev_id, attr_count, pd_attr, pd_attr_sizes, (uint8_t *)hash_val.data(), 4);
        delete[] pd_attr;
        delete[] pd_attr_sizes;
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return;
    }


    void hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_set(const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_t::type input) {
        p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_t pd_input = (p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_t)input;
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_set(sess_hdl, dev_id, pd_input);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int32_t hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_get(const SessionHandle_t sess_hdl, const int8_t dev_id) {
        p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_t pd_input;
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_get(sess_hdl, dev_id, &pd_input);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return ((main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_t::type)pd_input);
    }

    void hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_algorithm_set(const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_algo_t::type algo) {
        p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_algo_t pd_algo = (p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_algo_t)algo;
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_algorithm_set(sess_hdl, dev_id, pd_algo);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int32_t hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_algorithm_get(const SessionHandle_t sess_hdl, const int8_t dev_id) {
        p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_algo_t pd_algo;
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_algorithm_get(sess_hdl, dev_id, &pd_algo);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return ((main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_algo_t::type)pd_algo);
    }

    void hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_seed_set(const SessionHandle_t sess_hdl, const int8_t dev_id, const int64_t seed) {
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_seed_set(sess_hdl, dev_id, seed);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int64_t hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_seed_get(const SessionHandle_t sess_hdl, const int8_t dev_id) {
        uint64_t seed = 0;
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_seed_get(sess_hdl, dev_id, &seed);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return ((int64_t)seed);
    }

    void hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_field_attribute_set(const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_t::type input, const std::vector<main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_field_attribute_t> &array_of_attrs) {
        p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_t pd_input = (p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_t)input;
        p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_field_attribute_t *pd_attr = new p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_field_attribute_t[array_of_attrs.size()]();
        int i = 0;
        /* Copy over the info from the thrift struct to the PD struct */
        for (auto & item : array_of_attrs) {
          pd_attr[i].input_field.id = item.input_field;
          pd_attr[i].type = (p4_pd_main_input_field_attr_type_t)item.type;
          pd_attr[i].value.val = item.value;
          i++;
        }
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_field_attribute_set(sess_hdl, dev_id, pd_input, i, pd_attr);
        delete[] pd_attr;
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
    }

    int32_t hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_field_attribute_count_get(const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_t::type input) {
        p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_t pd_input = (p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_t)input;
        uint32_t attr_count = 0;
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_field_attribute_count_get(sess_hdl, dev_id, pd_input, &attr_count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return attr_count;
    }

    void hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_field_attribute_get(std::vector<main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_field_attribute_t> &array_of_attrs, const SessionHandle_t sess_hdl, const int8_t dev_id, const main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_t::type input) {
        p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_t pd_input = (p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_t)input;
        uint32_t attr_count = 0, filled_attr_count = 0;
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_field_attribute_count_get(sess_hdl, dev_id, pd_input, &attr_count);
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_field_attribute_t *pd_array_of_attrs = new p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_field_attribute_t[attr_count]();
        status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_field_attribute_get(sess_hdl, dev_id, pd_input, attr_count,
                pd_array_of_attrs, &filled_attr_count);
        if(status != 0) {
          delete[] pd_array_of_attrs;
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        /* Copy over the info from the PD struct to the thrift struct */
        array_of_attrs = std::vector<main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_field_attribute_t>(filled_attr_count);
        for (int i=0; i < filled_attr_count; i++) {
          array_of_attrs[i].input_field = pd_array_of_attrs[i].input_field.id;
          array_of_attrs[i].type = (main_input_field_attr_type_t::type)pd_array_of_attrs[i].type;
          array_of_attrs[i].value = pd_array_of_attrs[i].value.val;
        }
        delete[] pd_array_of_attrs;
    }

    void hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_calculate_hash_value(std::vector<int8_t> &hash_val, const SessionHandle_t sess_hdl, const int8_t dev_id, const int32_t attr_count, const std::vector<main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_field_attribute_t> &array_of_attrs, const std::vector<int32_t> &attr_sizes) {
        p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_field_attribute_t *pd_attr = new p4_pd_main_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_input_field_attribute_t[attr_count]();
        uint32_t *pd_attr_sizes = new uint32_t[attr_count]();
        hash_val = std::vector<int8_t>(2);
        int64_t result = 0;
        int i = 0;
        /* Copy over the info from the thrift struct to the PD struct */
        for (auto & item : array_of_attrs) {
          pd_attr[i].input_field.id = item.input_field;
          if (attr_sizes[i] > 32) {
            pd_attr[i].value.stream = (uint8_t *)malloc((attr_sizes[i] + 7) / 8);
            memcpy(pd_attr[i].value.stream, item.stream.c_str(), (attr_sizes[i] + 7) / 8);
          } else {
            pd_attr[i].value.val = item.value;
          }
          pd_attr_sizes[i] = (uint32_t)attr_sizes[i];
          i++;
        }
        int status = p4_pd_main_hash_calc_Egress_t_egr_dpt_1562_hasher_1766_alu_0_opstmt_configure_calculate_hash_value(sess_hdl, dev_id, attr_count, pd_attr, pd_attr_sizes, (uint8_t *)hash_val.data(), 2);
        delete[] pd_attr;
        delete[] pd_attr_sizes;
        if(status != 0) {
          InvalidTableOperation iop;
          iop.code = status;
          throw iop;
        }
        return;
    }


private:
    static inline bf_dev_pipe_t i16_to_bf_pipe(int16_t pipe) {
      return (pipe == -1) ? BF_DEV_PIPE_ALL : (bf_dev_pipe_t)pipe;
    }
};
